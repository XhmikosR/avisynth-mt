<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>

  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  <title>Filtre AviSynth MergeChannels</title>


  <link rel="stylesheet" type="text/css" href="../../avisynth.css">

</head>


<body>

<h2>
<a name="MergeChannels"></a>MergeChannels
</h2>

<p><code>MergeChannels </code>(<var>clip1 ,
clip2 [, clip3, ...]</var>)
</p>

<p>A partir de v2.5, <code>MergeChannels</code>
remplace <code><a href="monotostereo.htm">MonoToStereo</a></code>,
et peut &ecirc;tre utilis&eacute; pour m&eacute;langer les canaux audio de deux ou plusieurs clips.<br>
Ne confondez pas ce filtre avec un mixage des canaux (<code><a href="mixaudio.htm">MixAudio</a></code> et <code><a href="converttomono.htm">ConvertToMono</a></code>
font &ccedil;a) - le son de chaque canaux n'est pas modifi&eacute;, les
canaux sont simplement plac&eacute;s dans le nouveau clip.
<br>
Avant le m&eacute;lange, les &eacute;chantillons sont convertit dans le m&ecirc;me types que ceux du <var>clip1</var>.
</p>

<p>&nbsp; </p>

<pre># Exemple, convertit un signal audio "wav non-compress&eacute;" en signal st&eacute;r&eacute;o 44.1kHz: <br>video = AviSource("c:\divx_wav.avi") <br>audio = WavSource("c:\divx_wav.avi") <br>l_ch = GetChannel(audio, 1) <br>r_ch = GetChannel(audio, 2) <br>stereo = MergeChannels(l_ch, r_ch).ResampleAudio(44100) <br>return AudioDub(video, stereo) <br><br># C'est la m&ecirc;me chose que ce script: <br>video = AviSource("c:\divx_wav.avi") <br>audio = WavSource("c:\divx_wav.avi") <br>stereo = GetChannel(audio, 1, 2).ResampleAudio(44100) <br>return AudioDub(video, stereo)</pre>

<p><kbd>$English Date: 2004/03/09 21:28:07 $<br>

French translation date: 2006/02/05 JasonFly <a href="mailto:macpaille@users.sourceforge.net">macpaille@users.sourceforge.net</a></kbd>
</p>

<form><input value="Retour" onclick="history.go(-1)" type="button"></form>

</body>
</html>
