<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>




  


  
  
  
  
  
  
  
  <title>Filtre AviSynth Layer</title>
  <link rel="stylesheet" type="text/css" href="../../avisynth.css">
</head>


<body>





<h2><a name="Layer"></a>Layer <em>[yuy2][rgb32]</em></h2>





<p><code>Layer </code>(<var>base_clip,
overlay_clip, string "op", int "level", int "x", int "y", int
"threshold", bool "use_chroma"</var>)</p>





<p>Ce filtre peut m&eacute;langer deux clips de taille diff&eacute;rente
(mais ayant le m&ecirc;me format de couleur) en utilisant
diff&eacute;rentes techniques.<br>
Pour g&eacute;rer les informations de transparence au niveau des
pixels, le quatri&egrave;me canal de couleur du format de couleur RGB32
(appel&eacute; A ou canal alpha) est utilis&eacute; en tant que masque.</p>





<p><var>Base_clip</var>: c'est le clip sur lequel se reposent les
autres. C'est lui qui d&eacute;termine la taille et les
propri&eacute;t&eacute;s video et audio des autres clip et du clip de
sortie.<br>





<var>Overlay_clip</var>: c'est le clip qui est m&eacute;lang&eacute; au premier clip. Ce clip peut contenir un canal alpha.<br>





<var>op</var>: d&eacute;finit le type de l'op&eacute;ration de m&eacute;lange. Il&nbsp;peut &ecirc;tre:
"add"(ajouter), "subtract"(soustraire), "brighten"(&eacute;claircir), "darken"(assombrir), "fast"(rapide), "mul"(multiplier)<br>





<var>level</var>: 0-255, d&eacute;finit la force de l'op&eacute;ration
de m&eacute;lange. 0: le clip de base est renvoy&eacute; sans aucun
changement, 255: la force maximale est utilis&eacute;e.<br>





<var>x, y</var>: d&eacute;calage de position du clip &agrave; m&eacute;langer.<br>





<var>threshold</var>: impl&eacute;ment&eacute; seulement pour les op&eacute;rations "lighten" et
"darken".<br>





<var>use_chroma</var>: utilise la chrominance du clip &agrave; m&eacute;langer (overlay_clip),
par d&eacute;faut=true(vrai). Quand ce param&egrave;tre est false(faux), la luminance seulement est utilis&eacute;e.</p>





<p>Il y a quelques diff&eacute;rences dans le comportement et les
param&egrave;tres autoris&eacute;s en fonction du format de couleur et
de l'op&eacute;ration de m&eacute;lange. voici quelques d&eacute;tails:</p>





<ul>





  <li>Il n'y a pas de masque (canal alpha) dans le format
YUY2. En cons&eacute;quence, le canal alpha est consid&eacute;r&eacute;
comme opaque sur toute l'image.<br>





  </li>





  <li>Dans le format RGB32, le canal alpha de <var>overlay_clip</var>
est multipli&eacute; par <var>level</var>
En cons&eacute;quence, la valeur de alpha r&eacute;sultante est
(alpha_mask * level) / 256. Cela veut dire que pour que la force de
l'op&eacute;ration de m&eacute;lange soit maximale, les param&egrave;tres alpha ET <var>level</var> doivent &ecirc;tre &eacute;gaux &agrave; 255.</li>





</ul>





<p>Ces op&eacute;rateurs se comportent de mani&egrave;re identique en RGB32 et en YUY2:</p>





<pre>"fast": <i>use_chroma</i> doit &ecirc;tre TRUE(vrai), <i>level</i> et <i>threshold</i> ne sont pas utilis&eacute;s.<br> Le r&eacute;sultat est simplement la moyenne entre <i>base_clip</i> et <i>overlay_clip</i>.<br><br>"add": <i>threshold</i> n'est pas utilis&eacute;. La diff&eacute;rence entre base_clip et overlay_clip est multipli&eacute; avec la valeur de alpha et ajout&eacute; &agrave; base_clip.<br> alpha=0 -&gt; seulement base_clip est visible,<br> alpha=128 -&gt; base et overlay sont m&eacute;lang&eacute;s avec un poids &eacute;gal,<br> alpha=255 -&gt; seulement overlay est visible.<br><br>"subtract": fonctionne de la m&ecirc;me mani&egrave;re que add, sauf que overlay_clip est invers&eacute; au d&eacute;part.</pre>





<p>Ces op&eacute;rateurs ne semblent fonctionner que dans le format YUY2:</p>





<pre>"mul": <i>threshold</i> n'est pas utilis&eacute;. base_clip est color&eacute; en fonction de overlay_clip, donc <i>use_chroma</i> doit &ecirc;tre TRUE(vrai).<br> alpha=0 -&gt; seulement base_clip est visible, alpha=255 -&gt; &agrave; peu pr&egrave;s la m&ecirc;me luminance que base_clip<br> mais avec les couleurs de overlay_clip<br><br>"lighten": <i>use_chroma</i> doit &ecirc;tre TRUE(vrai). Effectue la m&ecirc;me op&eacute;ration que "add", mais seulement quand le r&eacute;sultat<br>&nbsp;est plus lumineux que le clip de base.<br> Avec un grand <i>threshold</i>, lighten est encore plus proche de la fonction "add",<br> Avec <i>threshold</i>=255, lighten est identique &agrave; "add",<br> Avec <i>threshold</i>=0, base_clip est transmis pratiquement sans changements, en fonction des diff&eacute;rences entre base_clip et overlay_clip.<br><br>"darken": m&ecirc;me fonction que "lighten", mais elle n'est effectu&eacute;e que quand les r&eacute;sultats est moins lumineux que base_clip.</pre>





<p><br>
Voir &eacute;galement&nbsp;<a href="../syntax.htm#multiclip" target="_self">ici</a>
pour plus d'informations sur les propri&eacute;t&eacute;s des clips r&eacute;sultants.</p>





<p>&nbsp;
</p>





<h2><a name="Mask"></a>Mask <em>[rgb32]</em></h2>





<p><code>Mask </code>(<var>clip, mask_clip</var>)</p>





<p>Applique un masque alpha d&eacute;fini sur <var>clip</var>, &agrave; utiliser avec <code>Layer</code>. Ce filtre proc&egrave;de en convertissant <var>mask_clip</var>en
niveaux de gris et en l'utilisant en tant que masque (le canal alpha)
du format RGB32.
Sur ce canal en niveaux de gris, le noir signifie compl&egrave;tement
transparent, et blanc signifie compl&egrave;tement opaque).
</p>





<p>&nbsp;
</p>





<h2><a name="ResetMask"></a>ResetMask <em>[rgb32]</em></h2>





<p><code>ResetMask </code>(<var>clip</var>)</p>





<p>Applique un masque alpha totalement opaque &agrave; <i>clip</i>, &agrave; utiliser&nbsp;avec <code>Layer</code>.




</p>





<pre>Le canal alpha d'un clip RGB32 n'est pas toujours bien d&eacute;fini (en fonction de la source),<br>ce filtre est une mani&egrave;re rapide d'appliquer un masque totalement blanc:<br><br>clip=ResetMask(clip)</pre>





<p>&nbsp;</p>





<h2><a name="ColorKeyMask"></a>ColorKeyMask <em>[rgb32]</em></h2>





<p><code>ColorKeyMask </code>(<var>clip, int
"color", int "tolerance"</var>)</p>





<p>D&eacute;finit un canal alpha (de mani&egrave;re similaire &agrave;
&nbsp;ce que Mask fait) mais il le g&eacute;n&egrave;re en comparant
l'argument <var>color</var> (par d&eacute;faut black(noir)). Chaque pixel avec une diff&eacute;rence de couleur dans la plage d&eacute;finie par l'argument
<var> tolerance</var> (par d&eacute;faut 10) est d&eacute;fini comme transparent,
sinon, il reste inchang&eacute; ( et il n'est pas d&eacute;finit comme opaque). <b>Voir
<a href="overlay.htm">Overlay</a> pour quelques exemples.</b></p>





<p><kbd>$English date: 2005/01/26 22:08:35 $<br>





French translation date: 2006/02/04 JasonFly <a href="mailto:macpaille@users.sourceforge.net">macpaille@users.sourceforge.net</a></kbd>
</p>





<form> <input value="Retour" onclick="history.go(-1)" type="button">
</form>





</body>
</html>
