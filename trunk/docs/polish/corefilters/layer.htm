<HTML>
<head>
<meta http-equiv="Content-type" content="text/html; charset=iso-8859-2" />   
<TITLE>Layer / Mask / ResetMask / ColorKeyMask</TITLE>

<link rel="stylesheet" type="text/css" href="style2.css">

</HEAD>

<h3>[yuy2][rgb32]</h3>
<h1>Layer</h1>
<h2><b>Layer</b>(base_clip, overlay_clip, string "op", int "level", int "x", int "y", int "threshold", bool "use_chroma")</h2>

<hr>

<p><i><b>base_clip</b></i>: klip podstawowy, który okre¶la wszystkie w³asno¶ci
wynikowego klipu video
<br>
<br>
<i><b>overlay_clip</b></i>: klip, który jest nak³adany na klip podany jako
argument <i><b>base_clip</b></i>&nbsp;
<br>
<br>
<i><b>op</b></i>: okre¶la metodê nak³adania: <i> &quot;add&quot;,
&quot;subtract&quot;, &quot;brighten&quot;, &quot;darken&quot;, &quot;fast&quot;, "mul",
&quot;lighten&quot;</i>
<br>
<br>
<i><b>x, y</b></i>: miejsce, w którym ma zostaæ na³o¿ony klip (domy¶lnie
obie warto¶ci przyjmuj± warto¶æ 0)
<br>
<br>
<i><b>level</b></i>: si³a scalania (0-255), a dok³adniej widoczno¶æ klipu <b><i>overlay_clip
</i></b>na klipie <b><i>base_clip </i></b>(domy¶lnie - 255, gdy klip <b><i>overlay_clip</i></b>
bêdzie mia³ rozdzielczo¶æ wiêksz± lub równ± klipu <b><i>base_clip</i></b>
to po prostu klip <b><i>base_clip</i></b> bêdzie niewidoczny)</p>

<p>
<i><b>threshold</b></i>: granica nak³adania, argument ten okre¶la siê tylko w
przypadku metod: <i> &quot;lighten&quot;</i>,
&quot;<i>darken&quot;</i>
<br>
<br>
<i><b>use_chroma</b></i>: gdy przyjmie warto¶æ <i> true</i> (domy¶lnie) to zostan±
wykorzystane równie¿ kana³y chromy klipu <i><b>overlay_clip</b></i>, natomiast
<i> false</i> - tylko
kana³y lumy</p>

<hr>

<p>Filtr ten potrafi na³o¿yæ na siebie dwa klipy o ró¿nej wielko¶ci, ale z tak± sam±
przestrzeni± kolorów. Do tej operacji wykorzystywane s± ró¿ne metody. Jest
te¿ kilka ró¿nic w zachowaniu siê danej metody i przeznaczonych argumentów
zale¿nie od przestrzeni kolorów i metody:</p>
<ul>
  <li><p>W przestrzeni kolorów YUY2 nie ma maski (kana³u alpha), wiêc zak³ada
    siê, ¿e kana³ alpha jest wszêdzie nieprzezroczysty</li></p>
  <li><p>W przestrzeni kolorów RGB32 kana³ alpha klipu <b><i>overlay_clip</i></b>
    jest mno¿ony z warto¶ci± argumentu <b><i>level</i></b>, wiêc w
    rezultacie alpha = (alpha_mask * level) / 256. Sposób ten przy maksmyalnej
    warto¶æi dla alphy i argumentu <b><i>level</i></b> bêdzie zwraca³ warto¶æ
    255</li></p>
</ul>
<p>
- metody dla przestrzeni kolorów RGB32 i YUY2<br>
<i><br>
&quot;fast&quot; </i>- wymaga warto¶ci <i>true </i>dla argumentu <b><i>use_chroma</i></b>,
natomiast argumenty <b><i>level</i></b> i <b><i> threshold</i></b> s± omijane.
W rezultacie obydwa klipy s± widoczne z tym samym nasileniem.<br>
<i><br>
&quot;add&quot;</i> - jedynie argument <b><i>threshold</i></b> jest omijany, a
klip wynikowy zale¿y od warto¶ci kana³u alphy:<br>
alpha=0 -&gt; tylko widoczny <b><i>base_clip</i></b><br>
alpha=128 -&gt; <b><i> base_clip</i></b> i <b><i> overlay_clip</i></b> s± wy¶wietlane
z tym samym nasileniem<br>
alpha=255 -&gt; tylko widoczny <b><i>overlay_clip</i></b> <br>
<br>
<i>&quot;subtract&quot;</i>: dzia³a identycznie jak <i>&quot;add&#8221;</i>, z
tym wyj±tkiem, ¿e <i><b>overlay_clip </b></i>ma<i><b> </b></i>odwrócone kolory<br>
<br>
- metody dla przestrzeni kolorów YUY2<br>
<br>
<i>&quot;mul&quot;</i>: jedynie argument <b><i>threshold</i></b> jest omijany. W
wyniku dzia³anie tej metody <b><i>base_clip</i></b> jest farbowany jak <i><b> overlay_clip</b></i>,
tak wiêc argument <i><b>use_chroma</b></i> powinien przyj±æ warto¶æ <i>true</i><br>
alpha=0 -> tylko widoczny <b><i>base_clip</i></b>, bez ró¿nicy jak±
rozdzielczo¶æ ma <i><b>overlay_clip</b></i>&nbsp;<br>
alpha=255 -> w przybli¿eniu to samo nasilenie obydwu klipów, z zachowaniem kolorów z <i><b>overlay_clip</b></i>
</p>

<p><i>&quot;lighten&quot;</i>: wymaga warto¶ci <i>true </i>dla argumentu <b><i>use_chroma</i></b>.
Rezultat jest prawie identyczny jak w przypadku metody <i>&quot;add&quot;</i>,
prawie, poniewa¿ jest ja¶niejszy. Jednak¿e w przypadku wysokich warto¶ci dla
argumentu <b>threshold</b> klip wynikowy mo¿e byæ jeszcze bardziej podobny do
tego z metod± <i>&quot;add&quot;</i>. (threshold=255 -&gt; ten sam rezultat,
jaki jest przy u¿yciu metody <i>"add"</i>)
</p>

<p><i>&quot;darken&quot;</i>: dzia³a identycznie jak <i>"lighten&quot;</i>,
z tym wyj±tkiem, ¿e klip wynikowy bêdzie ciemniejszy, a nie ja¶niejszy<br>
<br>
<br>
By sprawdziæ w³a¶ciwo¶ci powsta³ego klipu kliknij tutaj.
</p>

<hr>

<h3>[rgb32]</h3>
<h1>Mask</h1>
<h2><b>Mask</b>(clip, mask_clip)</h2>

<hr>

<p>Nak³ada okre¶lon± maskê alpha na <b><i>clip</i></b>, przez przekszta³cenie
<b><i> mask_clip'u</i></b> do obrazu czarno-bia³ego i wykorzystanie tego dla maski (kana³
alpha) RGB32. W kanale tym, &quot;czarny&quot; oznacza zupe³n± przezroczysto¶æ,
&quot;bia³y&quot; - nieprzezroczysto¶æ.</p>

<hr>

<h3>[rgb32]</h3>
<h1>ResetMask</h1>
<h2><b>ResetMask</b>(clip)</h2>

<hr>

<p>Nak³ada maskê alpha na <i><b>clip</b></i>, która sprawia, ¿e kana³ alpha
jest wszêdzie nieprzezroczysty.
Filtr ten jest szybszym sposobem, do na³o¿enia samych &quot;bia³ych&quot; masek:
<i>clip=ResetMask(clip)</i></p>

<hr>

<h3>[rgb32]</h3>
<h1>ColorKeyMask</h1>
<h2><b>ColorKeyMask</b>(clip, int color, int tolerance)</h2>

<hr>

<p>Ustala kana³ alpha (podobne dzia³anie do filtra Mask) poprzez porównanie kolorów. Ka¿dy piksel z
inn± warto¶ci± ni¿ <i><b>color </b></i>i mniejszy od warto¶ci <b><i>tolerance</i></b> jest
okre¶lany jako przezroczysty, a pozosta³e pozostaj± bez zmiany (nie s± okre¶lane
jako nieprzezroczyste).</p>
<hr>

<h3>translated by Slim</h3>
</HTML>