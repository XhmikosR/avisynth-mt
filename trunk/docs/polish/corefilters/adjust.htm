<HTML>
<head>
<meta http-equiv="Content-type" content="text/html; charset=iso-8859-2" />   
<TITLE>RGBAdjust</TITLE>

<link rel="stylesheet" type="text/css" href="style2.css">

</HEAD>

<h3>[yuy2][rgb32][rgb24]</h3>
<h1>RGBAdjust</h1>
<h2><b>RGBAdjust</b>(clip, float red, float green, float blue, float alpha)</h2>

<hr>

<p><i><b>red, green, blue</b></i>: opcja ta okre¶la ile kana³ów red (czerwony), green (zielony) i blue
(niebieski) bêdzie scalanych. Na przyk³ad warto¶æ 3 oznacza i¿ dany kana³ zostanie pomno¿ony przez ka¿dy piksel rozpoczynaj±c od trzeciego. Argument ten mo¿e przyj±æ warto¶æ mieszcz±c± siê w przedziale od 0-255
<br>
<br>
<i><b>alpha</b></i>: okre¶la kana³ alpha, czyli przedstawia przezroczyste informacje na ka¿d± podstawê piksela. Mo¿liwymi warto¶ciami s± tu 0 i 1, gdzie warto¶æ
0 oznacza przezroczysto¶æ, a warto¶æ 1 - nieprzezroczysto¶æ
</p>

<hr>

<p>Filtr ten mno¿y ka¿dy kana³ koloru przez podan± warto¶æ, przycina rezultat do 255. Zauwa¿, ¿e
<b>RGBAdjust</b><i>(1, 1, 1, 1)</i> pozostawi klip nietkniêty. Zapamiêtaj,
WSZYSTKIE warto¶ci nie s± przystosowane do zmian w scalaniu, na przyk³ad, by jeden (dlatego powiniene¶ u¿yæ levels) z nich zachowa³ siê tak:<br>
<br>
<i>RGBAdjust(2, 1, 1, 1)</i><br>
<br>
wiêc ca³y klip zostanie przyciêty do czerwonego. Ale je¶li chcesz uzyskaæ tylko WIÊCEJ czerwonego ni¿ niebieskiego czy zielonego bez korzystania
z przycinania do danego koloru, nale¿y zapisaæ co¶ takiego:<br>
<br>
<i>Levels(0, 1, 255, 0, 128).RGBAdjust(2, 1, 1, 1)<br>
</i><br>
Zostan± scalone wszystkie poziomy (i ¶rednie warto¶ci lumy - jasno¶æ) do po³owy, i podwoi siê
kolor czerwony.</p>
<hr>

<h3>translated by Slim</h3>
</HTML>