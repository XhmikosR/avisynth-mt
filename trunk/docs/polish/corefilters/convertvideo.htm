<HTML>
<head>
<meta http-equiv="Content-type" content="text/html; charset=iso-8859-2" />   
<TITLE>ConvertBackToYUY2 / ConvertToRGB / ConvertToRGB24 / ConvertToRGB32 / ConvertToYUY2 / ConvertToYV12</TITLE>

<link rel="stylesheet" type="text/css" href="style2.css">

</HEAD>

<h3>[yv12][yuy2][rgb32][rgb24]</h3>
<h1>ConvertBackToYUY2 / ConvertToRGB / ConvertToRGB24 / ConvertToRGB32 / ConvertToYUY2 / ConvertToYV12</h1>
<h2><b>ConvertBackToYUY2</b>(clip, bool &quot;interlaced&quot;)<br>
<br>
<b>ConvertToRGB</b>(clip [, string "matrix"], bool "interlaced")<br>
<br>
<b>ConvertToRGB24</b>(clip [, string "matrix"], bool "interlaced")<br>
<br>
<b>ConvertToRGB32</b>(clip [, string "matrix"], bool &quot;interlaced&quot;)<br>
<br>
<b>ConvertToYUY2</b>(clip, bool &quot;interlaced&quot;)<br>
<br>
<b>ConvertToYV12</b>(clip, bool "interlaced")</h2>

<hr>

<p><i><b>interlaced</b></i>: mo¿e przyj±æ warto¶æ true - przeplot - lub
false - materia³ bez przeplotu
<br>
<br>
<i><b>matrix</b></i>: matryca, ???</p>

<hr>

<p>We wcze¶niejszych wersjach AviSynth (do wersji 2.50) mo¿na by³o rzutowaæ pomiêdzy dwoma przestrzeniami kolorów (RGB i YUY2). Pocz±wszy od wersji 2.50 mo¿na równie¿ rzutowaæ z trzeci± przestrzeni± kolorów - YV12.&nbsp;<br>
Filtry te rzutuj± przestrzeñ kolorów klipu do innej. Je¶li video jest ju¿ w okre¶lonej przestrzeni dany filtr bêdzie pozostawia³ klip bez
zmiany (RGB przybiera w ca³ym klipie znaczenie RGBA). <b> ConvertToRGB</b> rzutuje do RGB32 chyba, ¿e klip jest w RGB24. Je¶li potrzebujesz RGB 24-bitowe u¿yj
<b>ConvertToRGB24</b>,
a je¿eli potrzebujesz 32-bitowe to <b>ConvertToRGB32</b>.<br>
SDTV (StandarD TeleVision) i HDTV (High Definition TeleVision) uzywaj± innych rzutowañ. Je¶li materia³ ¼ród³owy ma wysok± rozdzielczo¶æ, a
rzutuje siê z YUV do RGB to powinno siê u¿yæ:<br>
&nbsp;<br>
<i>
ConvertToRGB(clip, "rec709", true)</i>&nbsp; # lub&nbsp;<i><br>
 ConvertToRGB(clip, "rec709", false)</i> # w zale¿no¶ci od tego czy materia³ ¼ród³owy ma przeplot czy nie<br>
<br>
w innym przypadku tylko tak:<br>
<br>
<i>ConvertToRGB(clip, true)</i>&nbsp; # lub&nbsp;<br>
<i>ConvertToRGB(clip, false)</i> # w zale¿no¶ci od tego czy materia³ ¼ród³owy ma przeplot czy nie<br>
<br>
Od wersji 2.51/2.52 dodano dodatkowy parametr <b><i> interlaced</i></b> (domy¶lnie interlaced=false). Gdy ustawiony jest na false oznacza, ¿e clip nie ma przeplotu, natomiast warto¶æ true - materia³ z przeplotem. Opcja ta jest dodana, poniewa¿ przy rzutowaniu materia³u z przeplotem tym sposobem: (za³ó¿my, ¿e klip ma przeplot i jest w przestrzeni kolorów YV12):<br>
<br>
<i>SeparateFields(clip)<br>
ConvertToYV12<br>
Weave<br>
</i><br>
wykazuje, ¿e obraz jest niepoprawnie zdekodowany. Zamiast tego jest lepsze rozwi±zanie:&nbsp;<br>
<br>
<i>
ConvertToYV12(clip, interlaced=true)<br>
</i><br>
Wszystkie filtry VirtualDub (polecenie LoadVirtualdubPlugin, zobacz <a href="../syntax.htm#Plugins">Plugin</a>) wspomagaj± tylko materia³ wej¶ciowy z przestrzeni± kolorów RGB32.<br>
<br>
<b><i>
RGB24, RGB32</i></b>: Kolory s± przechowywane jako warto¶ci kolorów: czerwonego, zielonego i niebieskiego. W RGB32 jest dodatkowy kana³ alpha, który odpowiada za nieprzezroczysto¶ci. Rozdzielczo¶æ klipu mo¿e przyj±æ ka¿d± warto¶æ.<br>
<br>
<b><i>YUY2</i></b>: Obraz jest przechowywany jako warto¶æ lumy Y (jasno¶æ) i dwie warto¶ci chromy U, V (kolor). Dla dwóch poziomych pikseli jest tylko jedna warto¶æ chromy i dwie warto¶ci lumy (dwa Y, jeden U, jeden V). Zatem szeroko¶æ klipu musi byæ wielokrotno¶ci± dwójki.&nbsp;<br>
<br>
<b><i>YV12</i></b>: Tak samo jak YUY2, obraz jest przechowywany jako warto¶æ lumy i chromy. Z tym wyj±tkiem, ¿e dla 4 pikseli (kwadrat 2x2) jest tylko jedna warto¶æ chromy. Zarówno szeroko¶æ jak i wysoko¶æ musi byæ podzielne przez dwa, natomiast je¶li video ma przeplot to dodatkowo wysoko¶æ musi byæ podzielne przez 4 (poniewa¿ kwadrat 2x2 jest pobierany z pola, a nie z klatki).<br>
<br>
Niektóre filtry sprawdzaj± ró¿ne za³o¿enia dla rozdzielczo¶ci, a niektóre nie zwracaj± uwagi na ten parametr, przez co czasem, w najgorszym wypadku, wyst±pi b³±d informuj±cy o z³ej rozdzielczo¶ci lub obraz klipu bêdzie zniekszta³cony.<br>
Przestrzeñ YUY2 jest szybsza od RGB, natomiast YV12 jest równie szybka jak YUY2 i jest stworzona dla formatu MPEG.<br>
<br>
Powrotne rzutowanie do pocz±tkowej przestrzeni nie pomo¿e unikn±æ utraty szczegó³ów (mo¿liwe jest te¿ powstawanie zniekszta³conych kolorów). Je¶li wielokrotne rzutowanie jest niezbêdne mo¿na u¿yæ filtru
<b> ConvertBackToYUY2</b> do rzutowania z powrotem do YUY2, oczywi¶cie, je¶li materia³ ¼ród³owy mia³ ju¿ wcze¶niej przestrzeñ kolorów YUY2. Zmniejszy to rozmazanie kolorów, ale powsta³y materia³ nadal nie jest tak dok³adny jak jego orygina³.<br>
W wiêkszo¶ci przypadków filtr <b> ConvertToRGB</b> nie powinien byæ konieczny. Je¶li materia³ wyj¶ciowy jest w przestrzeni kolorów YUY2, a aplikacja spodziewa siê RGB, system skorzysta z zainstalowanego kodeka YUY2
do zrobienia rzutowania bez wiedzy u¿ytkownika. Jednak¿e, je¶li nie jest zainstalowany kodek YUY2 lub je¶li kodek rzutuje niepoprawnie z YUY2 do RGB, to w tym skrajnym przypadku,
mo¿na skorzystaæ z filtra AviSynth. Jednak nie jest to jedyne rozwi±zanie.
Lepszym wyj¶ciem ni¿ filtr <b> ConvertToRGB</b> jest Huffyuv. Huffyuv bêdzie siê zachowywaæ
jak kodek YUY2 je¶li inny kodek tego typu nie jest zainstalowany.<br>
<br>
<b>
ConvertToRGB24</b> i <b>ConvertToRGB32</b> mo¿e byæ wykorzystane do wymuszenia na AviSynth,
u¿ycia okre¶lonej metody przechowywania danych dla RGB. Dane RGB24 s± czêsto du¿o wolniejsze do przetwarzania ni¿ dane RGB32, dlatego je¶li
materia³ wej¶ciowy jest w RGB24, mo¿na zrzutowaæ do RGB32, by przyspieszyæ pracê AviSynth. Nie ma
¿adnych korzy¶ci z u¿ywania przestrzeni RGB24, oprócz tego, ¿e TMPGEnc wymaga materia³u wej¶ciowego w tej przestrzeni.</p>

<hr>

<p><b>Przyk³ad:</b>
  <table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
      <td width="480" valign="top" align="left"><p>control = ConvertToYUY2()<br>
      test = ConvertToYUY2(ConvertToRGB(ConvertToYUY2(ConvertToRGB(control))))<br>
      test = ConvertToYUY2(ConvertToRGB(test))<br>
        return Subtract(test,control)
</p></td>
            <td width="11" valign="top" align="left">
        <p>#</p>
      <td width="*%" valign="top" align="left"><p>
        mo¿na zauwa¿yæ niewielkie zniekszta³cenie z powodu rzutowania pomiêdzy YUV a RGB</p></td>
    </tr>
  </table>
<hr>

<h3>translated by Slim</h3>
</HTML>