<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>AssumeFPS / AssumeScaledFPS / ChangeFPS / ConvertFPS フィルタ</title>
<link rel="stylesheet" type="text/css" href="../../avisynth.css">
<link rel="stylesheet" type="text/css" href="../ja.css">
</head>
<body>
<h2><a name="AssumeFPS"></a>AssumeFPS</h2>
<p><code>AssumeFPS </code>(<var>clip, float fps, bool &quot;sync_audio&quot;</var>)<br>
   <code>AssumeFPS </code>(<var>clip, int numerator [, int denominator], bool &quot;sync_audio&quot;</var>)<br>
   <code>AssumeFPS </code>(<var>clip1, clip2, bool &quot;sync_audio&quot;</var>)<br>
   <code>AssumeFPS </code>(<var>clip, string preset, bool &quot;sync_audio&quot;</var>)</p>
<p><code>AssumeFPS</code> フィルタは、フレーム総数を変えずにフレームレートを変更します（ビデオの再生を速くするか、もしくは遅くします）。フレームレートパラメータ（fps）だけを設定します。<br>
<var>sync_audio</var> が true なら、同じ割合で音声サンプリング周波数<a href="#footnote_1" class="footnote_link">*1</a>も変更します。生成される音声のピッチはシフトされます<a href="#footnote_2" class="footnote_link">*2</a>。</p>
<p>これはまた、音声のサンプリング周波数のみを変更する方法でもあります。</p>
<p><em>v2.55</em> からは、<var>clip2</var> が指定されている場合、<var>clip1</var> のフレームレートは <var>clip2</var> のそれに合わせて調節されます。これは、フレームレートがわずかに異なる 2 つのクリップを結合したいときに役立ちます。</p>
<p><em>v2.57</em> から、フレームレートに関する挙動が少し変更されました。おもな問題は、ユーザーがフレームレートを浮動小数点数で指定することを許可されているにもかかわらず、NTSC （FILM と Video）規格と PAL 規格はフレームレートとして比を要求するということです。これに加えて、AviSynth はフレームレートを比としてエクスポートします。このため、浮動小数点数を指定したとき、その値は比に変換されます。規格の比は、23.976 （FILM）は 24000/1001、29.97 （ビデオ）は 30000/1001 によって与えられます。<b>これらの浮動小数点数を指定するとき、それらの値は AviSynth によって比としてエクスポートされますが、しかし規格の比としてエクスポートされるのではありません。</b>この理由のひとつは、それらの浮動小数点数は近似値であるということです（24000/1001 = 23.9760239760... ということを忘れないでください）。AviSynth が正しい比の選び方を知るにはどのようにすればいいでしょうか。この問題を克服するために、ユーザは AssumeFPS(24000,1001) もしくは AssumeFPS(&quot;ntsc_film&quot;) を使うことができます。</p>
<p>もうひとつの問題は、変換された浮動小数点数が（v2.56 以前は）非常に大きな分子（numerator）と分母（denominator）をもたらし、プレーヤーをクラッシュさせる 64 ビット精度でエクスポートされたことです。この問題を克服するために、内部にスマートな浮動小数点比が追加され、フレームレートは小さな数の比により正確に近似されます。例えば AssumeFPS(23.976) は、<a href="info.htm">Info</a> を使って確認できるように AssumeFPS(2997,125) に変換されます。</p>
<p><b>プリセット:</b> </p>
<table border="1" width="66%">
  <tr>
    <td width="33%" align="center"><b>規格</b></td>
    <td width="33%" align="center"><b>分子（numerator）</b></td>
    <td width="34%" align="center"><b>分母（denominator）</b></td>
  </tr>
  <tr>
    <td width="33%" align="center">"ntsc_film"</td>
    <td width="33%" align="center">24000</td>
    <td width="34%" align="center">1001</td>
  </tr>
  <tr>
    <td width="33%" align="center">"ntsc_video"&nbsp;</td>
    <td width="33%" align="center">30000</td>
    <td width="34%" align="center">1001</td>
  </tr>
  <tr>
    <td width="33%" align="center">"ntsc_double"</td>
    <td width="33%" align="center">60000</td>
    <td width="34%" align="center">1001</td>
  </tr>
  <tr>
    <td width="33%" align="center">"ntsc_quad"</td>
    <td width="33%" align="center">120000</td>
    <td width="34%" align="center">1001</td>
  </tr>
  <tr>
    <td width="33%" align="center">&quot;ntsc_round_film&quot;</td>
    <td width="33%" align="center">2997</td>
    <td width="34%" align="center">125</td>
  </tr>
  <tr>
    <td width="33%" align="center">"ntsc_round_video"</td>
    <td width="33%" align="center">2997</td>
    <td width="34%" align="center">100</td>
  </tr>
  <tr>
    <td width="33%" align="center">"ntsc_round_double"</td>
    <td width="33%" align="center">2997</td>
    <td width="34%" align="center">50</td>
  </tr>
  <tr>
    <td width="33%" align="center">"ntsc_round_quad"</td>
    <td width="33%" align="center">2997</td>
    <td width="34%" align="center">25</td>
  </tr>
  <tr>
    <td width="33%" align="center">"film"</td>
    <td width="33%" align="center">24</td>
    <td width="34%" align="center">1</td>
  </tr>
  <tr>
    <td width="33%" align="center">"pal_film"</td>
    <td width="33%" align="center">25</td>
    <td width="34%" align="center">1</td>
  </tr>
  <tr>
    <td width="33%" align="center">"pal_video"</td>
    <td width="33%" align="center">25</td>
    <td width="34%" align="center">1</td>
  </tr>
  <tr>
    <td width="33%" align="center">"pal_double"</td>
    <td width="33%" align="center">50</td>
    <td width="34%" align="center">1</td>
  </tr>
  <tr>
    <td width="33%" align="center">"pal_quad"</td>
    <td width="33%" align="center">100</td>
    <td width="34%" align="center">1</td>
  </tr>
</table>
<p> <b>使用例 PAL +4% テレシネ変換:</b></p>
<pre>AVISource(&quot;FILM_clip.avi&quot;)             # 24fps のクリップを取得
LanczosResize(768,576)                 # PAL の正方ピクセルフレームサイズにリサイズ。
AssumeFPS(25, 1, true)                 # フレームレートを PAL に変換。音声も調節。
SSRC(44100)                            # 音声サンプリング周波数を標準レートに戻す。</pre>
<p>この 4% のスピードアップは、24fps のフィルムを PAL 方式のテレビで表示するために慣習的に使用されます。ピッチとテンポのわずかな増加は、PAL 素材の視聴者から快く受け入れられます。</p>

<h2><a name="AssumeScaledFPS"></a>AssumeScaledFPS</h2>
<p><code>AssumeScaledFPS </code>(<var>clip, int "multiplier", int "divisor", bool &quot;sync_audio&quot;</var>)</p>
<p><code>AssumeScaledFPS</code> フィルタは、フレーム総数を変えずにフレームレートの比率を変更します。分子に multiplier （乗数）を掛け、分母に divisor （除数）を掛けます。得られた有理の FPS 分数は正規化<a href="#footnote_3" class="footnote_link">*3</a>されます。得られた分子か分母のいずれかが 31 ビットを超えた場合、結果は丸められ、比率が変更されます。これは、正確な有理のスケーリング（拡大縮小）がクリップの FPS プロパティに適用されることを可能にします。</p>
<p><var>sync_audio</var> が true なら、音声のサンプリング周波数も同じ比率で変更し、生成される音声のピッチはシフトされます。</p>
<p><em>v2.56</em> 以降で利用可能。</p>

<h2><a name="ChangeFPS"></a>ChangeFPS</h2>
<p><code>ChangeFPS </code>(<var>clip, float fps, bool &quot;linear&quot;</var>)<br>
   <code>ChangeFPS </code>(<var>clip, int numerator [, int denominator], bool &quot;linear&quot;</var>)<br>
   <code>ChangeFPS </code>(<var>clip1, clip2, bool &quot;linear&quot;</var>)<br>
   <code>ChangeFPS </code>(<var>clip, string preset, bool &quot;linear&quot;</var>)</p>
<p><code>ChangeFPS</code></tt> は、フレームを削除するか複製することによって、フレームレートを変更します。</p> 
<p><em>v2.05</em> までのバージョンでは、再生速度と再生時間を保持するために、ビデオは切り捨てられるか、もしくは補填されます（フレーム数は変更されませんでした）。<em>v2.05</em> より後のバージョンでは、フィルタの挙動が変更され、フレーム数は <code>ConvertFPS</code> のように増加または減少されます。</p>
<p><em>v2.54</em> において、<code>ChangeFPS</code> に <var>linear</var> オプション（true または false）が追加されました。これは、フレームをスキップするときに、AviSynth に線形的にフレームをリクエストさせます。</p>
<p><em>v2.56</em> から、<var>clip2</var> が指定されている場合、<var>clip1</var> のフレームレートは <var>clip2</var> のそれに合わせて調節されます。</p>
<p><em>v2.57</em> から、フレームレートに関する挙動が、若干、変更されました。<a href="#AssumeFPS"><code>AssumeFPS</code></a> を参照してください。</p>
<p> <b>使用例 PAL-&gt;NTSC 変換:</b></p>
<pre>AVISource(&quot;PAL_clip.avi&quot;)              # クリップを取得
Bob(height=480)                        # フィールドを分離して、高さをフルサイズに補間する。
BicubicResize(640,480)                 # NTSC 方式の正方ピクセルフレームサイズにリサイズする。
ChangeFPS(60000, 1001)                 # フィールドを複製することによって、フィールドレートを NTSC 方式に変換する。
SeparateFields.SelectEvery(4,0,3)      # Bob を取り消して、偶数フィールドファーストにする。奇数フィールドファーストにするには SelectEvery(4,1,2) を使う。
Weave                                  # Bob の取り消しを終了する。</pre>
<p>この効果は、3-2 テレシネプルダウンに似ています。PAL 素材の正規の視聴者は、NTSC 素材の視聴者がテレシネ化されたフィルムに関して簡単に無視するような、動きのカクカクに気づくかもしれません。</p>

<h2><a name="ConvertFPS"></a>ConvertFPS 
</h2>
<p><code>ConvertFPS </code>(<var>clip, float new_rate, int &quot;zone&quot;, int &quot;vbi&quot;</var>)<br>
   <code>ConvertFPS </code>(<var>clip, int numerator [, int denominator], int &quot;zone&quot;, int &quot;vbi&quot;</var>)<br>
   <code>ConvertFPS </code>(<var>clip1, clip2, int &quot;zone&quot;, int &quot;vbi&quot;</var>)<br>
<code>ConvertFPS </code>(<var>clip, string preset, int &quot;zone&quot;, int &quot;vbi&quot;</var>)</p>
<p>このフィルタは、フレームをドロップしたり挿入したりすることなく <var>clip</var> のフレームレートを <var>new_rate</var> に変換しようと試み、スタンドアローンのコンバータボックスと同様の結果を伴うスムーズな変換を提供します。出力されるクリップは <i>clip</i> と（ほぼ）同じ持続時間を持ちますが、フレーム数はターゲットとソースのフレームレートの比率に比例して変化します。</p>
<p><em>v2.56</em> から、clip2 が存在する場合、clip1 のフレームレートは clip2 のそれに合わせて調節されます。</p>
<p><em>v2.57</em> から、フレームレートに関する挙動が少し変更されました。<a href="#AssumeFPS"><code>AssumeFPS</code></a> を参照してください。</p>
<p>このフィルタには、2 つの動作モードがあります。オプションの実引数 <var>zone</var> が指定されなかった場合、隣接するビデオフレームの相対的なタイミングに比例してブレンド係数による重み付けを行って、それらのフレームをブレンドします（「ブレンドモード」）。<var>zone</var> が指定された場合、新しいソースフレームが開始されるとき、すなわち、通常はターゲットフレームの中間のどこかにあるときはいつでも、1 つのビデオフレームから次のビデオフレームへ切り替わります（「スイッチモード」）。スイッチモードは、出力がテレビで表示されると仮定します。テレビでは、各フレームがトップからボトムへスキャンされます。<var>zone</var> パラメータは、現在のフレームが次のフレームへとブレンドされるトランジション領域の高さを指定します。</p>
<p>ブレンドモードは、わずかではありますが、目に見えるモーションブラーを引き起こすでしょう。これは、フレームレート変換の典型的な人工ノイズで、市販のビデオテープやテレビ番組でも見受けられます。インターレースビデオを処理するときは、インターレースフレームにではなく、個々のフィールドに対してフィルタを作用させることが重要です（下の例を参照）。</p>
<p>スイッチモードはモーションブラーを避けるための試みですが、わずかなフリッカ<a href="#footnote_4" class="footnote_link">*4</a>とモーションノイズという犠牲を払います。水平方向と垂直方向のパン<a href="#footnote_5" class="footnote_link">*5</a>は、若干の揺れを見せるかもしれません。さらに、この変換によって生成されるフレームは、動きのあるシーンで「壊れた」あるいは「曲がった」垂直線を表示します。シーントランジション（場面転換）は、1 つのフレームの真ん中で起こるかもしれません。それにもかかわらず、「ブレンドモード」よりも結果はぼやけないように見えます。</p>
<p>いずれのモードも完璧ではありません。どちらを選ぶかは、個人的な好みや変換されるビデオによります。おそらくスイッチモードは、出力がコンピュータ画面ではなくテレビに表示される場合にのみ適しているでしょう。</p>
<p>フレームレート変換は、もともと難しいものです。このフィルタは、商業的なセミプロレベルの変換システムで一般的によく使われている 2 つの方法を実装しています。その結果は、概ねかなり良好です。より精巧なシステムでは、動き補間アルゴリズムを採用しています。動き補間アルゴリズムは、正しい結果を得るのは難しいものの、もし正確に行われた場合には優れた結果をもたらします。</p>
<p>このフィルタで変換されたビデオは、再変換されるべきではありません。次の世代では、不鮮明さが急速に増します。</p>
<p>音声データは、このフィルタによって影響を受けません。音声は同期されたままですが、変換後、音声データの長さはビデオデータの長さとわずかに異なるかもしれません。これは、出力が整数のフレームのみを含むことができるからです。この影響は、短いクリップほどより顕著になります。長さの違いは、無視されるべきです。</p>
<p>パラメータ:
<table>
  <tbody> 
  <tr valign="top"> 
    <td width="80"><i>new_rate</i></td>
    <td>目標のフレームレート。整数または浮動小数点数。ブレンドモードでは、<i>new_rate</i> は、少なくともソースのフレームレートの 2/3（66.7%）でなければなりません。さもなければ、エラーが発生します。これは、フレームのスキップを防ぐためのものです。もしそれよりもフレームレートを落とす必要があるのなら、スイッチモードを使用してください。</td>
  </tr>
  <tr valign="top"> 
    <td>zone</td>
    <td>（オプション）指定された場合、このフィルタをスイッチモードにします。0 以上の整数。もし 0 なら、ハードスイッチを実行します。すなわち、スイッチラインの下にすぐに次のフレームを表示します。0 より大きい場合は、トランジション領域の高さ（ライン単位）を指定します。トランジション領域では、1 つのフレームが徐々に次のフレームにブレンドされます。フルサイズのビデオ（有効走査線数 480/576）の場合は、zone=80 が好結果をもたらします。トランジションは、PeculiarBlend() と同じ方法で行われます。<i>zone</i> は、ソースフレームの持続時間に相当する、目標フレームの走査線数以下でなければなりません。これは、一般的には目標フレームの高さの 5/6 ないし 6/5、すなわち、数百ラインです。これより大きな値が選択された場合、エラーが発生します。</td>
  </tr>
  <tr valign="top"> 
    <td><i>vbi</i></td>
    <td>（オプション）スイッチモードにおいて、このフィルタが垂直帰線消去期間（VBI）<a href="#footnote_6" class="footnote_link">*6</a>に対してタイミング補正を適用すべきであることを明示します。目標フレームの VBI の高さを示す 0 より大きな整数（ライン単位）。一般的には、PAL は vbi=49、NTSC は vbi=45 ですが、これらの値は決定的ではありません。ブレンドモードでは無視されます。</td>
  </tr>
  </tbody> 
</table>
<p> <b>使用例 NTSC-&gt;PAL 変換:</b></p>
<pre>AVISource(&quot;NTSC_clip.avi&quot;)             # クリップの取得
Bob(height=576)                        # フィールドを分離してフルスケールへ補間。
BicubicResize(768,576)                 # PAL の正方ピクセルフレームサイズにリサイズ（ITU-R BT.601 向けには 720,576 を使用）。
ConvertFPS(50)                         # ブレンドモードを使って、フィールドレートを PAL に変換。
SeparateFields.SelectEvery(4,0,3)      # Bob を取り消して、偶数フィールドファーストにする。奇数フィールドファーストにするには SelectEvery(4,1,2) を使う。
Weave                                  # Bob の取り消しを終える。</pre>
<p>この使用例は、フレームベースの NTSC 素材や、テレシネフィルム（映画）でも動作するでしょう。しかし、フィルム素材については、逆テレシネフィルタを使ってフレームレートを 23.976 から 25fps にスピードアップしたほうがいい結果が得られます。</p>
<p>すべてのパラメータ値が、サニティチェック<a href="#footnote_7" class="footnote_link">*7</a>されるわけではありません。</p>
<p> <b>変更点:</b> </p>
<table border="1" width="50%">
  <tr>
    <td width="25%"> v2.57</td>
    <td width="50%"> preset オプションを追加。フレームレートの挙動を変更。ConvertFPS に対する YV12 と RGB のサポート、ブレンド比率を修正。</td>
  </tr>
  <tr>
    <td width="25%"> v2.56</td>
    <td width="50%"> ChangeFPS に clip2 オプションを追加、AssumeScaledFPS を追加</td>
  </tr>
  <tr>
    <td width="25%"> v2.55</td>
    <td width="50%"> AssumeFPS に clip2 オプションを追加</td>
  </tr>
  <tr>
    <td width="25%"> v2.54</td>
    <td width="50%"> ChangeFPS に linear=true/false を追加</td>
  </tr>
</table>
<p><kbd>原文 Date: 2006/12/06 20:33:16</kbd><br />
<kbd>日本語訳 $Date: 2008/06/22 07:41:13 $</kbd></p>
<FORM>
  <INPUT TYPE="Button" VALUE="戻る"
onClick="history.go(-1)">
</form>

<hr />
<div id="footnote">
<ul>
  <li>訳者註:
    <ul>
      <li><a name="footnote_1" class="footnote_link">*1</a> <span class="footnote_text">参考: <a href="http://ja.wikipedia.org/wiki/%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AA%E3%83%B3%E3%82%B0%E5%91%A8%E6%B3%A2%E6%95%B0">サンプリング周波数 - Wikipedia</a></span></li>
      <li><a name="footnote_2" class="footnote_link">*2</a> <span class="footnote_text">参考: <a href="http://otosofts.hp.infoseek.co.jp/EditingWave/pitchshift.htm">ピッチシフト</a></span></li>
      <li><a name="footnote_3" class="footnote_link">*3</a> <span class="footnote_text">参考: <a href="http://akademeia.info/index.php?%BE%AE%BF%F4%C9%BD%B8%BD">小数表現 - Security Akademeia</a></span></li>
      <li><a name="footnote_4" class="footnote_link">*4</a> <span class="footnote_text">参考: <a href="http://e-words.jp/w/E38395E383AAE38383E382AB.html">IT用語辞典 e-Words ： フリッカとは 【flicker】　─　意味・解説</a></span></li>
      <li><a name="footnote_5" class="footnote_link">*5</a> <span class="footnote_text">カメラを左右に動かすこと。</span></li>
      <li><a name="footnote_6" class="footnote_link">*6</a> <span class="footnote_text">参考: <a href="http://e-words.jp/w/VBI.html">IT用語辞典 e-Words ： VBIとは 【Vertical Blanking Interval】　─　意味・解説</a>、<a href="http://yougo.ascii24.com/gh/26/002646.html">ASCII24 - アスキー デジタル用語辞典 - VBI</a>、<a href="http://www.jiten.com/dicmi/docs/v/12049s.htm">VBI - マルチメディア／インターネット事典</a></span></li>
      <li><a name="footnote_7" class="footnote_link">*7</a> <span class="footnote_text">参考: <a href="http://itpro.nikkeibp.co.jp/article/Watcher/20070612/274526/">サニティー・チェックの直訳は「正気確認」？──IT業界のカタカナ用語はくせ者ばかり：ミッキーのproITなアメリカンライフ：ITpro</a>、<a href="http://www.hyuki.com/yukiwiki/wiki.cgi?%C3%B1%B8%EC%C4%A2#i4">単語帳 - *単語帳</a></span></li>
    </ul>
  </li>
</ul>
</div>

</body>
</html>
