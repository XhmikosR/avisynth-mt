<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <title>Crop / CropBottom フィルタ</title>
   <link rel="stylesheet" type="text/css" href="../../avisynth.css">
   <link rel="stylesheet" type="text/css" href="../ja.css">
</head>
<body >
<h2>
<a NAME="Crop"></a>Crop
/ CropBottom
</h2>
<p><code>Crop </code>(<var>clip, int left, int top, int width, int height,
bool &quot;align</var>&quot;)<br>
  <code>Crop </code>(<var>clip, int left, int top, int -right, int -bottom,
bool &quot;align&quot;</var>)<br>
  <code>CropBottom </code>(<var>clip, int count, bool align</var>)
<p><code>Crop</code> は、各フレームの余分なピクセルを切り落とします（crop）。
<p>もしソースビデオの解像度が 720x480 で、これを VideoCD 向けに 352x240 に縮小したいなら、その正しいやり方は次のとおりです:
<pre># 正しいアスペクト比を保持したまま、ITU-R BT.601 を VCD に変換する
ReduceBy2
Crop(4,0,352,240)</pre>
各カラーフォーマットを使用する際の制限事項については、<a href="convert.htm">色空間変換フィルタ</a>を参照。
<p><var>width</var> と <var>height</var> に負の値が入力されると、これらの値はオフセットとして取り扱われます。例えば:
<pre># 画像サイズに関係なく、画像の四辺すべてから 16 ピクセル切り落とす:
Crop(16,16,-16,-16)</pre>
<p><em>v2.53</em> において、<var>align</var> オプション（デフォルトは false）が追加されました:<br>
YUY2/RGB32 画像のクロップは、つねに 4 の倍数（4 バイト）で行われます。しかし、x バイト（整数）読み込む時、読み出しがメモリ内で x の倍数の配置にアライン<a href="#footnote_1" title="整列、位置合わせ。参考: ..." class="footnote_link">*1</a>されるとより高速になります。MMX/SSE は 8 バイトアラインメントを好み、SSE2 は 16 バイトアラインメントを好みます。データがアラインされていないと、読み出し/書き込み操作は、それぞれ少なくとも 4 バイト周期で遅延されます。このため、AviSynth によって画像が生成される時、それらの画像はつねに 16 の倍数にアラインされます。<br>
<br>
画像がクロップされた場合に、それらのデータがメモリ内でアラインされずに配置されることもあるでしょう - 「<var>align</var> = true」は、アラインされていないメモリ配置からアラインされた配置へフレーム全体をコピーします。このため、もし次のフィルタの不利益が完全な画像のコピーの不利益よりも大きいなら、「<var>align</var> = true」を使ったほうがより高速に処理できます。とりわけ、次に平滑化フィルタが来るときには。<br>
<br>
もう一方の <code>CropBottom</code> のシンタックスは、VHS テープからキャプチャされたクリップの下端からゴミを切り落とすのに役に立ちます。各フレームの下端から <var>count</var> ライン削除します。
</p>
<p>異なる色空間のデータ構造を保持するには、以下の倍数を使用する必要があります。それらが守られなくてもエラーメッセージは出ませんが、奇妙な人工ノイズが発生するかもしれません。
<p>RGB:
<br>幅 制限なし
<br>高さ ビデオがプログレッシブなら、制限なし
<br>高さ ビデオがインターレースなら、2 の倍数
<p>YUY2:
<br>幅 2 の倍数
<br>高さ ビデオがプログレッシブなら、制限なし
<br>高さ ビデオがインターレースなら、2 の倍数
<p>YV12:
<br>幅 2 の倍数
<br>高さ ビデオがプログレッシブなら、2 の倍数
<br>高さ ビデオがプログレッシブなら、2 の倍数
<p>注: リサイズ関数では、オプションで入力フレームの分数ピクセルのクロップが可能です。この場合、リサイズされる端のピクセルに重み付けが適用されることになります。もし Crop の n の倍数というフォーマット次元での制限が不便なら、これらのオプションを使用することができます。<a href="resize.htm">リサイズ関数</a>を参照してください。要約すると -- 「VHS のヘッドノイズやレターボックスの縁のようなくっきりした人工ノイズを切り落とすには、つねに Crop を使用してください。画像の一部分を抽出したり、画像の端の正確なリサンプリングを維持するには、リサイズの cropping パラメータを使ってください。」（<a href="http://forum.doom9.org/showthread.php?s=&amp;threadid=91630">Doom9 スレッド</a>）
<p><kbd>原文 Date: 2005/03/24 22:07:08</kbd><br />
<kbd>日本語訳 $Date: 2008/06/22 07:41:11 $</kbd></p>
<form><input TYPE="Button" VALUE="戻る"
onClick="history.go(-1)"></form>

<hr />
<div id="footnote">
<ul>
  <li>訳者註:
    <ul>
      <li><a name="footnote_1" class="footnote_link">*1</a> <span class="footnote_text">整列、位置合わせ。参考: <a href="http://www5d.biglobe.ne.jp/~noocyte/Programming/Alignment.html">データ型のアラインメントとは何か，なぜ必要なのか？</a>、<a href="http://homepage2.nifty.com/hydrangea/note/computer_architecture.html">hydrangea 0.09</a></span></li>
    </ul>
  </li>
</ul>
</div>

</body>
</html>
