<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <title>SpatialSoften / TemporalSoften フィルタ</title>
   <link rel="stylesheet" type="text/css" href="../../avisynth.css">
   <link rel="stylesheet" type="text/css" href="../ja.css">
</head>
<body >
<h2>
<a NAME="Soften"></a>SpatialSoften
/ TemporalSoften
</h2>
<p><code>SpatialSoften </code>(<var>clip, int radius, int luma_threshold, int
chroma_threshold</var>)<br>
  <code>TemporalSoften </code>(<var>clip, int radius, int luma_threshold, int
chroma_threshold, int "scenechange", int "mode"</var>)
<p><code>SpatialSoften</code> フィルタと <code>TemporalSoften</code> フィルタは、ピクセルを選択的にブレンドすることによってビデオクリップからノイズを取り除きます。これらのフィルタは、奇跡をもたらすことができます。私<a href="#footnote_1" class="footnote_link">*1</a>は、これらのフィルタを試してみることを強く推奨します。しかし設定が高すぎると細部まで消し去ってしまう可能性もありますので、度を越さないようにしてください。また、とりわけ <var>radius</var> の値が大きい場合に非常に重くなりますので、他のすべての準備ができるまで有効にしないでください。</p>
<p><code>SpatialSoften</code> は、フレーム内の各サンプルを、中央のサンプルとの差が一定の閾値を超えない近傍のすべてのサンプルの平均と置換します。「近傍」とは、xy 方向において <var>radius</var> を超えない範囲のピクセルを意味します。使用される閾値は、Y （輝度）サンプルについては <var>luma_threshold</var>、U と V （色差）サンプルに関しては <var>chroma_threshold</var> です。</p>
<p>同じフレームの近傍ピクセルではなく、近傍フレームの同じピクセルを見るということを除けば、<code>TemporalSoften</code> は（<code>SpatialSoften</code> と）似ています。<var>radius</var> を超えない範囲のすべてのフレームが分析されます。このフィルタは、<code>SpatialSoften</code> ほど効果的には見えません。</p>
<p>これらのフィルタが行うことを理解するために、パラメータをいじってみることをおすすめします。たとえば、他の値を低くしたまま 3 つのパラメータのうちの 1 つを非常に高い値に設定してみてください。そして何が起こるのかを見てください。3 つのパラメータのいずれか 1 つを 0 に設定すると、このフィルタを非常に重い無処理<a href="#footnote_2" class="footnote_link">*2</a>にしてしまいます。</p>
<p><code>TemporalSoften</code> は輝度と色差を別々に平滑化しますが、<code>SpatialSoften</code> は輝度と色差の両方の閾値が渡された場合にのみ平滑化します。</p>
<p><code>SpatialSoften</code> フィルタは、YUY2 入力に関してのみ動作します。入力が YUY2 フォーマットではない場合、<code><a href="convert.htm">ConvertToYUY2</a></code> フィルタを使用することができます。</p>
<p>AviSynth <em>v2.04</em> 以降を使用しているのなら、TemporalSoften2 プラグイン<a href="#footnote_3" class="footnote_link">*3</a>を使用する必要はありません。組み込みの TemporalSoften は、TemporalSoften2 の実装に置き換えられています。</p>
<p><em>v2.50</em> から、<code>TemporalSoften</code> に 2 つのオプションが追加されています:</p>
<ul>
  <li>オプションの <var>mode</var><i>=2</i> パラメータ: フレームをブレンドする新しくてより優れた方法を持ち、よりよい品質を提供します。またずっと高速です。要 ISSE<a href="#footnote_4" class="footnote_link">*4</a>。<var>mode=1</var> はデフォルトの動作で、これまでのように機能します。</li>
  <li>オプションの <var>scenechange=n</var> パラメータ: このパラメータを使用すると、シーンチェンジをまたがったブレンドを回避します。「n」は、フレーム間の最大平均画素変化を定義します。「n」に適した値は、 5 から 30 の間です。要 ISSE。</li>
</ul>
<p>適切なデフォルト値: <code>TemporalSoften</code>(4,4,8,15,2)</p>
<p><b>更新履歴:</b></p>
<table border="1" width="22%">
  <tr>
    <td width="7%">v2.56</td>
    <td width="93%">TemporalSoften は（YV12、YUY2 に加え） RGB32 入力でも動作する</td>
  </tr>
</table>
<p><kbd>原文 Date: 2007/07/14 18:06:23</kbd><br />
<kbd>日本語訳 $Date: 2008/06/28 00:58:31 $</kbd></p>
<form><input TYPE="Button" VALUE="戻る"
onClick="history.go(-1)"></form>

<hr />
<div id="footnote">
<ul>
  <li>訳者註:
    <ul>
      <li><a name="footnote_1" class="footnote_link">*1</a> <span class="footnote_text">ここで登場する私（I）は、マニュアル原文の筆者を指します。</span></li>
      <li><a name="footnote_2" class="footnote_link">*2</a> <span class="footnote_text">原文「no-op」。no-op は、NO OPeration の略。「何もしないこと」を意味する。</span></li>
      <li><a name="footnote_3" class="footnote_link">*3</a> <span class="footnote_text">Dividee 氏作。<a href="http://www.avisynth.info/?%A5%CE%A5%A4%A5%BA%BD%FC%B5%EE%28%BB%FE%B4%D6%BC%B4%29#TemporalSoften2">AviSynth Wiki - ノイズ除去(時間軸)</a>を参照。</span></li>
      <li><a name="footnote_4" class="footnote_link">*4</a> <span class="footnote_text">Integer SSE。SSE のサブセットで、AMD 製の Athlon や Duron にも搭載されている。参考: <a href="http://avisynth.org/mediawiki/ISSE">ISSE - Avisynth</a></span></li>
    </ul>
  </li>
</ul>
</div>

</body>
</html>
