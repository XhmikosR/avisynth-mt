<html>
<head>
<title>Cnr2</title>
   <link rel="stylesheet" type="text/css" href="../../avisynth.css">
<!--
Automatically generated, don't change:
$Id: cnr2.htm,v 1.1 2004/10/19 21:09:51 alex_e_basta Exp $ 
-->
</head>
<body>
<h1>Cnr2 (Chroma Noise Reducer)</h1>
<h2>Sommario</h2>
<b>author:</b> Chroma Noise Reducer by MarcFD and others<br>
<b>version:</b>   2.61<br>
<b>dowload:</b> <a href="http://www.avisynth.org/warpenterprises/">http://www.avisynth.org/warpenterprises/</a>
<br><b>category:</b> Temporal Smoothers
<br><b>requirements:</b>  
<ul>
  <li>YV12 &amp; YUY2 Colorspace</li>
</ul>
<hr>
<h2>Cosa fa</h2>
<p>Questo filtro &egrave; un Chroma Stabilizer per sorgenti analogiche.<br>
  E' un filtro temporal ed &egrave; veramente valido nei confronti di 2 artefatti 
  del croma: stationary rainbows e analogic chroma activity.</p>
<h2>Uso</h2>
  Aggiungete queste linee al vostro script di avisynth : 
<pre><font face="Verdana">LoadPlugin(&quot;Cnr2.dll&quot;)
# esempio
Cnr2() # per catture  TV/VHS 
Cnr2(&quot;xxx&quot;, 4, 5, 255) # piccolo suggerimento per togliere il rainbow.</font></pre>
<h3>Sintassi</h3>
<p><code><font face="verdana">Cnr2
</font>
</code>
<font face="Verdana"> (clip, <var>mode=&quot;oxx&quot;, scdthr=8, ln=35, lm=192,
un=47), um=255, vn=47, vm=255, log=false</var>)</font>
</p>
<p><font face="Verdana"><var>mode</var></font><font face="verdana"> :
</font>
</p>
<p><font face="verdana">modo di ogni componente, &quot;YUV&quot;<br>
  ne sono possibili 2: esteso ('o') e limitato ('x')<br>
  la moalit&agrave; limitata &egrave; pi&ugrave; sensibile alle variazioni e meno 
  efficace </font> </p>
<p><font face="Verdana"><var>scdthr</var></font><font face="verdana"> :
</font>
</p>
<p><font face="verdana">scenechange detection threshold (soglia per la determinazione 
  del cambio di scena).<br>
  abbassarlo per rendere scd pi&ugrave; sensibile .<br>
  se viene rilevato un canbio di scena, cnr2 resetter&agrave; la modalit&agrave; 
  di di filtraggio per la nuova scena<br>
  </font> </p>
<p><font face="Verdana"><var>ln,lm,un,um,vn,vm</var></font>: 0 to 255</p>
    i valori n rappresentano la sensibilit&agrave; al movimento :<br>
i valori pi&ugrave; alti tolgono maggior rumore, ma possono produrre artefatti 
di ghosting <br>
i valori m rappresentano la massima efficacia del denoiser :<br>
abbassateli per ridurre l'effetto di denoising. 
<p><font face="Verdana"><var>log</var></font>:</p>
    per loggare i valori interni di scd . Per vederli usare DebugView. 
<pre>&gt; Cnr2()
&gt; Cnr2(&quot;oxx&quot;, 8, 35, 192, 47, 255, 47, 255, false)
&gt; Cnr2(mode=&quot;oxx&quot;, scdthr=8, ln=35, lm=192, un=47, um=255, vn=47, vm=255, false)</pre>
<p>sono 3 aliases : producono lo stesso filtraggio.<br>
</p>
<h2>History</h2>
  Questo Filtro &egrave; ispirato all'analogo filtro di Virtual Dub Chroma Noise 
Reduction 1.1 (by Gilles Mouchard)<br>
cnr 1.1 era un buon chroma filter ma per funzionare usava una conversione in YUV 
.<br>
L'housato per codificare VHS , perch&egrave; si trattava del miglior Chroma Noise 
avessi testato.<br>
Ma quando ho iniziato ad usare AviSynth e Huffyuv, la conversione in RGB era un 
appesantimento <br>
sicch&eacute; ho dato un'occhiata al codice ed ho scritto un mio filtro partendo 
da uno scratch, ma basandomi sullo stesso algoritmo.<br>
L' output di cnr2 &egrave; dal 99,9% al 100% lo stesso di cnr (a causa del colorspace 
YUV )<br>
ed &egrave; 3x-5x volte pi&ugrave; veloce (Cnr2 realizza un real-time denoising 
in 640x480x25fps con un 1,4 Ghz CPU) 
<p><u>version 2.1 (31.7.2002)</u></p>
<p>&nbsp;&nbsp;&nbsp; little review. corrections.</p>
<p><u>version 2.2 (01.8.2002)</u></p>
<p>&nbsp;&nbsp;&nbsp; First frame bug fixed.</p>
  <u>version 2.3 (17.11.2002)</u>
<p>&nbsp;&nbsp;&nbsp; YV12 Code and SCD (scene change detection)</p>
<p><u>version 2.4 (17.11.2002)</u></p>
<p>&nbsp;&nbsp;&nbsp; small changes/bug fixes</p>
  <u>version 2.51 (13.11.2003)</u>
<p>&nbsp;&nbsp;&nbsp; Klaus Post: bug fixes.</p>
<u>
      version 2.6 (29.06.2004)</u>
<p>&nbsp;&nbsp;&nbsp; tritical: few bug fixes, scene change detection overhaul, code cleanup.&nbsp;</p>
<p><u>version 2.6.1 (30.06.2004)</u></p>
<p>&nbsp;&nbsp;&nbsp; tritical: made yuy2 processing fast again.&nbsp;<br>
</p>
<h3>Distribution :</h3>
  This is a free sofware distribued under the terms of the GNU-GPL<br>
  The only restriction is to e-mail me if you want to do something with<br>
  the source because i don't want you to lose your time to decode my<br>
  cryptic C,C++,Delphi (or any other language) writing.<br>
  Thanks :)<br>
<h3>Contact :</h3>
  Don't even doubt of <a href="mailto:marc.fd@libertysurf.fr">e-mailing me</a>
  for any suggestion :-), bug report :-(,<br>
  feature request :D, or whatever else :-P.<br>
I hope you'll find this prog useful ! (i do...) 
<p><font face="Verdana"><kbd>$Date: 2004/10/19 21:09:51 $</kbd></font></p>
</body>
</html>
