<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<title>Blur / Sharpen Avisynth Filter</title>
<link rel="stylesheet" type="text/css" href="../../avisynth.css">
</head>
<body>
<h2><a name="Blur"></a>Blur / Sharpen</h2>
<p><code>Blur </code>(<var>clip, float amount</var>)<br>
  <code>Blur </code>(<var>clip, float amountH, float amountV, bool MMX</var>)<br>
  <code>Sharpen </code>(<var>clip, float amount</var>)<br>
  <code>Sharpen </code>(<var>clip, float amountH, float amountV, bool MMX</var>)</p>
<p>This is a simple 3x3-kernel blurring filter. The largest allowable argument for
  <code> Blur</code> is about 1.58, which corresponds to a (1/3,1/3,1/3) kernel.
  A value of 1.0 gets you a (1/4,1/2,1/4) kernel. If you want a large-radius
  Gaussian blur, I recommend chaining several copies of <code> Blur</code>(1.0)
  together. (Anybody remember Pascal's triangle?)&nbsp;<br>
  <br>
  Negative arguments to <code> Blur</code> actually sharpen the image, and in fact
  <code>Sharpen</code>(n) is just an alias for <code> Blur</code>(-n). The smallest
  allowable argument to <code> Blur</code> is -1.0 and the largest to
  <code>Sharpen</code> is 1.0.&nbsp;<br>
  <br>
  You can use 2 arguments to set independent Vertical and Horizontal amounts.
  Like this, you can use <code> Blur</code>(0,1) to filter only Vertically,
  for example to blend interlaced lines together. By default
  <i>amountV</i>=<i>amountH</i>.<br>
</p>
<p>A Known issue, with the MMX routines is the lack of full 8 bit precision in 
  the calculations. This can lead to banding in the resultant image. Set the
  MMX=False option to use the slower but more accurate C++ routines if this 
  is a concern.
</p>
<kbd>$Date: 2006/12/03 11:37:04 $</kbd>
<FORM>
  <INPUT TYPE="Button" VALUE="Back"
onClick="history.go(-1)">
</form>
</body>
</html>
