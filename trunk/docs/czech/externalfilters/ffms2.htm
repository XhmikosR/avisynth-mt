<html>
<head>
<title>
FFmpegSource2 Documentation
</title>
  <meta http-equiv="content-type" content="text/html; charset=windows-1250">
<link rel="stylesheet" type="text/css" href="../../avisynth.css">
</head>
<body>
<h1>FFmpegSource</h1>
<h2>Pøehled</h2>
<b>autor:</b>  Myrsloik
<br><b>verze:</b> 2.00 beta9<br>
<b>stáhnout:</b>  <a href="http://forum.doom9.org/showthread.php?t=127037">http://forum.doom9.org/showthread.php?t=127037</a>, 
<a href="http://avisynth.org/warpenterprises/">http://avisynth.org/warpenterprises/</a><br>
<b>kategorie:</b> Audio video dekodéry (zdrojové) pluginy<br>
<b>požadavky:</b>  RGB24, RGB32, YUY2, YV12 Barevné prostøedí<br>
<b>licence:</b> GPL</p>
<hr>
<h2>Úvod</h2>
<p>
Otvírá soubory použitím ffmpeg a nièeho jiného. V dobrých dnech mùže být pøesný na snímek. Zdroj je pod MIT licencí a lze ho získat z 
<a href="http://svn.aegisub.net/trunk/aegisub/FFmpegSource2/">http://svn.aegisub.net/trunk/aegisub/FFmpegSource2/</a>. 
Pøedkompilovaný soubor je pod GPL licencí. Pokud jste zbožní, mùžete toto považovat za druhý pøíchod.
</p>

<h2>Známé problémy</h2>
<ul>
<li>FFAudioSource() znovu vytvoøí jakýkoli index implicitnì vytvoøený v FFVideoSource() a proto zápis jako
<pre>
AudioDub(FFVideoSource(X), FFAudioSource(X))
</pre>
bude vyžadovat dva indexaèní prùchody. Kromì spotøebovaného èasu je to neškodné. Aby jste to obešli, otevøete nejdøíve audio 
<pre>
A = FFAudioSource(X)
V = FFVideoSource(X)
AudioDub(V, A)
</pre>
nebo použijte FFIndex().
<pre>
FFIndex(X)
AudioDub(FFVideoSource(X), FFAudioSource(X))
</pre>
</li>
<li>FFIndex() bude tiše ignorovat fatální chyby dekódování pøi indexování. To znamená, že indexování dané stopy mùže selhat dokonce i když FFIndex() uspìje.</li>
<li>Vyžaduje <a href="http://haali.cs.msu.ru/mkv/">Haali's Media Splitter</a> pokud je otvíráno ogm nebo mpeg ps/ts .</li>
<li>Avi soubory s NVOPy (obèas se vyskytují v xvid a podobných) desynchronizuje, když se s tìmito snímky setkáte. Remuxujte do mkv/mp4 pøed otevøením , aby jste to prozatím vyøešili.</li>
<li>Stále jsou nìkteré problémy s FFAudioSource ale mìlo by to být dostateènì dobré pro skuteèné použití v mnoha pøípadech.</li>
</ul>

<h2>Kompatibilita - Video</h2>
<ul>
<li>AVI, MKV, MP4, FLV: Snímková pøesnost (Frame accurate)</li>
<li>WMV: Snímková pøesnost(?) ale avformat se zdá, že vybírá klíèové snímky relativnì daleko</li>
<li>OGM: Snímková pøesnost(?)</li>
<li>VOB: Nepoužité žádné rff znaky (flags)</li>
<li>MPG: Vyhledávání (seeking) se zdá být vypnuto na jeden nebo dva snímky teï a poté</li>
<li>M2TS, TS: Vyhledávání (seeking) se zdá být vypnuto na nìkolik snímkù zde a tam</li>
<li>Obrázkové soubory: Vìtšina formátù mùže být otevøena pokud je nastaveno seekmode=-1 , žádná podpora animace</li>
</ul>

<h2>Kompatibilita - Audio</h2>
<ul>
<li>Všechny formáty jsou zapsány do oddìlených wave64 souborù</li>
<li>Žádný nástroj pro ètení wave64 se neposkytuje</li>
</ul>

<h2>Použití</h2>
<p>
<b>FFIndex(string source, string cachefile = source + ".ffindex", int indexmask = -1, int dumpmask = 0, string audiofile = source, bool overwrite = false)</b><br />
 Použito pro vyvolání indexování oddìlenì a k zápisu audio stop na disk jako wave64 soubory.
</p>

<p>
<b>FFVideoSource(string source, int track, bool cache = true, string cachefile = source + ".ffindex", int fpsnum = -1, int fpsden = 1, string pp, int threads = -1, string timecodes, int seekmode = 1)</b><br />
 Otvírá video, vyvolá indexování s výchozími hodnotami, pokud není nalezen existující index. 
</p>

<p>
<b>FFAudioSource(string source, int track, bool cache = true, string cachefile = source + ".ffindex")</b><br />
 Otvírá audio, <b>pokud už index existuje, potøebuje obsahovat vhodný audio index nebo je vráceno prázdné audio</b>, vyvolá indexování s výchozími hodnotami, pokud není nalezen existující index.
</p>

<p>
<b>FFPP(clip, string pp)</b><br />
  Oddìlený postprocessing (dodateèné zpracování), který jak se zdá, obsahuje nìkolik jednoduchých odstraòovaèù prokládání (deinterlacerù).
</p>

<p>
<b>SWScale(clip, width = -1, height = -1, resizer = "BICUBIC", colorspace = "")</b><br />
  Oddìlený postprocessing (dodateèné zpracování), který jak se zdá, obsahuje nìkolik jednoduchých odstraòovaèù prokládání (deinterlacerù).
</p>

<b>FFSetLogLevel(int Level)</b><br />
  Nastavuje log FFmpeg logovací úroveò, výchozí pro quiet (-8) a FFmpeg výchozí je 16, všechny rùzné hodnoty lze najít v avutil/log.h
</p>

<b>FFGetLogLevel()</b><br />
  Vrací aktuální úroveò logování jako celé èíslo (int).
</p>

<p>
<b>source:</b>
  Zdrojový soubor.
</p>

<p>
<b>indexmask &amp; dumpmask:</b>
  Které audio stopy indexovat/zapsat na disk. Dumping stopy také naznaèuje indexování, protože stejná práce musí být ostatnì udìlána. 
  Je to binární maska znamenající, že 7 odpovídá zapsání stop 1-3. Stopy bez audia jsou ignorovány. -1 zapíše všechny stopy.
</p>

<p>
<b>audiofile:</b>
  Základní jméno pro dekódované audio. Jsou pøipojeny èíslo stopy a zpoždìní.
</p>

<p>
<b>overwrite:</b>
  Vynutí pøeindexování dokonce i když už existuje platný index. Mùže být užiteèné pro zmìny trackmask nebo testování.
</p>

<p>
<b>track:</b>
  Èíslo stopy jak je vidìno relevantním demuxerem, zaèíná od 0, -1 znamená, že vybere první vhodnou stopu.
</p>

<p>
<b>fpsnum &amp; fpsden:</b>
  Pro VFR -> CFR pøevod. Nastavení fpsnum <= 0 znamená pomìr 1:1 s enkódovanými snímky.
</p>

<p>
<b>timecodes:</b>
  Soubor pro vysílání timecodes, pokud soubor existuje bude pøepsán.
</p>

<p>
<b>cache:</b>
  Zapisuje indexovací informaci do souboru pro pozdìjší použití. Toto nastavení neovládá jestli je video index naèten, což je vždy pokud existuje.
</p>

<p>
<b>cachefile</b>
  Kam zapsat cache informaci.
</p>

<p>
<b>pp:</b>
  Podívejte se do tabulky níže na úplný popis, prázdný øetìzec znamená žádné zpracování. Doporuèuje se vyhnout se možnosti autoq, protože v souèasnosti není známé jaký vliv bude mít na zpracování.
</p>

<p>
<b>threads:</b>
  Nastavuje poèet použitých vláken dekodéru. Vychází se z poètu cpu oznámených windows. Ignorován v lavc, pokud to použitý dekodér neimplementuje.
</p>

<p>
<b>seekmode:</b>
  Vynutí jaké vyhledávání (seekování) je provádìno, nemá vliv na matroska soubory, které vždy používají ekvivalent k seekmode=1<br />
    <b>-1:</b> lineární pøístup bez rewind, vyhodí chybu pokud každé následnì žádané èíslo snímku není vìtší než poslední, urèeno jen pro otvírání obrázkù, ale mìl by pracovat dobøe s nìkterými obskurními formáty videa<br />
    <b>0:</b> lineární pøístup, definice pomalosti, ale mìl by udìlat nìkteré formáty "použitelné"<br />
    <b>1:</b> bezpeèný normální, základna rozhodování vyhledávání v oznámených pozicích klíèových snímkù<br />
    <b>2:</b> riskantní normální, stejný jako 1 , ale nevyhodí žádnou chybu, když musí být hádáno pøesné umístìní<br />
    <b>3:</b> agresivní, vyhledává smìrem vpøed dokonce i když není známo, že existuje blízký klíèový snímek, užiteèné jen pro testování a konteinery, kde avformat neoznamuje správnì klíèové snímky.
    </p>

<p>
<b>width &amp; height:</b>
  Šíøka a výška na které se má zmìnit velikost. Hodnota menší nebo rovná 0 je stejná jako zadání vstupních rozmìrù.
</p>

<p>
<b>resizer:</b>
  Vybírá resizer (mìniè velikosti) použitý pro pøevzorkování barevnostních ploch a normální zmìnu velikosti. Dostupné metody jsou: FAST_BILINEAR, BILINEAR, BICUBIC, X, POINT, AREA, BICUBLIN, GAUSS, SINC, LANCZOS a SPLINE.
</p>

<p>
<b>colorspace:</b>
  Barevné prostøedí, do kterého se má pøevést. Jména jsou YV12, YUY2, RGB24, RGB32 a prázdný øetìzec pro stejné jako vstupní.
</p>

<h2>Exportované promìnné Avisynthu</h2>
<p>
<b>FFSAR_NUM, FFSAR_DEN, FFSAR:</b>
 Pomìr stran (aspect ratio) pøehrávání zadaný kontejnerem. FFSAR_NUM a FFSAR_DEN vytvoøí racionální èíslo pomìru a FFSAR je poskytnuto jen pro pøípad potøeby.
</p>

<p>
<b>FFCROP_LEFT, FFCROP_RIGHT, FFCROP_TOP, FFCROP_BOTTOM:</b>
 Oøíznutí pøi pøehrávání zadané kontejnerem.
</p>

<p>
<b>FFPICT_TYPE:</b>
 Typ obrazu poslednì žádaného snímku. Použijte after_frame=true v podmínìném skriptování Avisynthu pro správné výsledky. FFmpeg source definice èísel:
<pre>
FF_I_TYPE  1 ///< Intra
FF_P_TYPE  2 ///< Predicted
FF_B_TYPE  3 ///< Bi-dir predicted
FF_S_TYPE  4 ///< S(GMC)-VOP MPEG4
FF_SI_TYPE 5 ///< Switching Intra
FF_SP_TYPE 6 ///< Switching Predicted
FF_BI_TYPE 7
</pre>
</p>


<h2>PP string (øetìzcový) formát</h2>
<pre>
Dostupné postprocesingové filtry:
Filtry                        Možnosti
krátké dlouhé jméno   krátká  dlouhá možnost   Popis
*      *               a       autoq           CPU power dependent enabler
                       c       chrom           chrominance filtering enabled
                       y       nochrom         chrominance filtering disabled
                       n       noluma          luma filtering disabled
hb     hdeblock        (2 threshold)           horizontal deblocking filter
       1. difference factor: default=32, higher -> more deblocking
       2. flatness threshold: default=39, lower -> more deblocking
                       the h & v deblocking filters share these
                       so you can't set different thresholds for h / v
vb     vdeblock        (2 threshold)           vertical deblocking filter
ha     hadeblock       (2 threshold)           horizontal deblocking filter
va     vadeblock       (2 threshold)           vertical deblocking filter
h1     x1hdeblock                              experimental h deblock filter 1
v1     x1vdeblock                              experimental v deblock filter 1
dr     dering                                  deringing filter
al     autolevels                              automatic brightness / contrast
                       f        fullyrange     stretch luminance to (0..255)
lb     linblenddeint                           linear blend deinterlacer
li     linipoldeint                            linear interpolating deinterlace
ci     cubicipoldeint                          cubic interpolating deinterlacer
md     mediandeint                             median deinterlacer
fd     ffmpegdeint                             ffmpeg deinterlacer
l5     lowpass5                                FIR lowpass deinterlacer
de     default                                 hb:a,vb:a,dr:a
fa     fast                                    h1:a,v1:a,dr:a
ac                                             ha:a:128:7,va:a,dr:a
tn     tmpnoise        (3 threshold)           temporal noise reducer
                     1. <= 2. <= 3.            larger -> stronger filtering
fq     forceQuant      <quantizer>             force quantizer
</pre>
<p>Použití:</p>
<pre><filterName>[:<option>[:<option>...]][[,|/][-]<filterName>[:<option>...]]...
pøíklad dlouhé formy:
vdeblock:autoq/hdeblock:autoq/linblenddeint    default,-vdeblock
pøíklad krátké formy:
vb:a/hb:a/lb                                   de,-vb
více pøíkladù:
tn:64:128:256
</pre>

<h2>Kompilování</h2>

<p><b>zlib</b> z http://www.zlib.net/</p>

<p><b>FFmpeg svn</b> z http://ffmpeg.mplayerhq.hu/</p>

<p><b>pthreads</b> vyžadováno jen pro FFmpeg-mt compiles</p>

<p><b>Vyžadovaná FFmpeg Konfigurace:</b>
./configure --enable-memalign-hack --enable-gpl --enable-postproc

<p><b>Navrhované doplòkové možnosti:</b>
--enable-w32threads --disable-encoders --disable-muxers --disable-network --disable-debug --enable-libfaad --disable-decoder=aac</p>

<p>
Všimnìte si, že --enable-w32threads nebo --enable-pthreads je vyžadováno pro práci multithreaded dekódování. Pro FFmpeg-mt bude pracovat jen --enable-pthreads.
</p>

<h2>Zmìny</h2>
<ul>
<li>2.00 beta 9<ul>
<li>Dumping audio now actually implies indexing too in FFIndex, previously nothing would be done if the index mask wasn't set as well</li>
<li>FFAudioSource will now first load the index and returns the first indexed audio track with track=-1, if no audio tracks are indexed or the chosen track isn't indexed the equivalent of FFIndex(indexmask = -1, overwrite = cache) is executed first</li>
<li>Codec lookup for non-lavf opened files now to a large part use the same lookup tables as lavf, this should improve the number of properly recognized codecs</li>
<li>Now uses the average framerate for files opened with Haali's splitters, before it was always reported as 30 fps</li>
<li>Implemented audio decoding using Haali's splitters, FFAudioSource now works on ts, ps and ogm</li>
<li>Can now be compiled with ICL 10.1 (probably other versions too)</li>
<li>How indexing works has been split internally so the track numbers and types are reported, this makes it possible to create an interactive GUI or ask which audio tracks are to be indexed</li>
<li>Now has stricter index checking to detect when different FFmpeg versions were used to create an index of the same version</li>
<li>Fixed memory leaks when audio sources were destroyed and when errors happened during indexing</li>
<li>Fixed access violations occurring when a track of the wrong type was specified or didn't exist in FFVideoSource and FFAudioSource</li>
<li>Fixed access violations occurring when unindexed or empty audio tracks in matroska/lavf read files were opened</li>
<li>Less type conversion/signedness warnings</li>
<li>When audio track dumping is performed a custom callback can now be supplied to name the tracks</li>
<li>The audio track delay is now exposed in the API in the same way as video tracks</li>
<li>A big type and argument name cleanup in the API, many things have been renamed to be clearer and ffms.h should be completely C friendly now</li>
<li>Removed FFNoLog and replaced it with FFSetLogLevel and FFGetLogLevel, the default logging is now also set to quiet, the magical numbers to supply it can be found in avutil/log.h</li>
<li>Updated FFmpeg to rev 18972 (now with faad2 again by popular demand, updated to GCC 4.4.0 for compiling all libraries)</li>
</ul></li>

<li>2.00 beta 8<ul>
<li>Improved the audio decoding quality a lot by adding a simple cache, no more seeking is done when playing a file linearly and pops and other artifacts should be much more uncommon</li>
<li>Fixed a bug that would most of the time drop frame 0 and sometimes frame 1</li>
<li>Updated Haali's matroska parser code to the latest version</li>
<li>Updated FFmpeg to rev 18774</li>
</ul></li>


<li>2.00 beta 7<ul>
<li>Using ffms2 as a library no longer requires an installed pixfmt.h from libavutil, it is however still required to compile ffms2 and the avisynth plugin part</li>
<li>Fix a crash bug at the end of files with b-frames in beta 6 caused by uninitialized null packets</li>
<li>Includes TheFluff's wrapper function for 1.21 style syntax</li>
<li>Added a simple regression test application to the source</li>
<li>Removed a few pointless functions from the API</li>
<li>Fixed the accessing of codecprivate data with Haali's splitters</li>
<li>Timecode output should be fixed to include decimals AND not be in scientific format</li>
<li>Fixed a memory leak when using Haali's splitters</li>
<li>Updated FFmpeg to rev 18717</li>
</ul></li>

<li>2.00 beta 6<ul>
<li>Haali's splitters have been improved for video and now have audio dumping during indexing implemented</li>
<li>SeekMode=1 has improved logic which will make it go back and decode more frames if necessary to figure out where it is, in theory SeekMode=0 should now be mostly obsolete</li>
<li>Haali's splitters are now used to open mpeg ps and ogm in addition to mpeg ts, only ogm is frame accurate at this time</li>
<li>Negative timecodes and other bugs caused by an integer overflow fixed</li>
<li>Updated FFmpeg to rev 18442 (once again compilation fixes for the changes)</li>
</ul></li>

<li>2.00 beta 5<ul>
<li>FFMSIndex should now print the progress properly when another application reads its output</li>
<li>Added missing variables and explanations to the manual</li>
<li>Can now directly be compiled as a library for use in *nix</li>
<li>Fixed the missing decimals in saved timecode files</li>
</ul></li>

<li>2.00 beta 4<ul>
<li>Added the function FFNoLog which suppresses all messages from ffmpeg</li>
<li>Experimental new TS parsing using Haali's splitter (with bugs)</li>
<li>Everything is now compiled with VS2008 and GCC 4.3.2</li>
<li>Updated FFmpeg to rev 16383 (no libfaad2 this time)</li>
</ul></li>

<li>2.00 beta 3<ul>
<li>Compiled with libfaad2 again (has anyone seen a single aac file lavc can open right now?)</li>
<li>More API changes (and even more are likely to come)</li>
<li>Several access violations and memory leaks on opening and indexing files fixed</li>
<li>Added a VFR to CFR mode</li>
<li>Readded FFAudioSource support for other containers (glitches still present now and then but no separate raw cache is required and possibly less buggy)</li>
<li>Renamed the dll to FFMS2.dll, FFMS2 is now the official short name of the project</li>
<li>Updated FFmpeg to rev 15522</li>
</ul></li>

<li>2.00 beta 2<ul>
<li>More API changes (and more are likely to come)</li>
<li>Includes a simple CLI indexing application</li>
<li>FFIndex now takes a few more arguments</li>
<li>Readded FFAudioSource (only matroska supported for now)</li>
<li>Updated FFmpeg to rev 15396</li>
</ul></li>

<li>2.00 beta 1<ul>
<li>Can now be used as a stand alone library for making indices and retrieving frames</li>
<li>Rewrote most things</li>
<li>Updated FFmpeg to rev 15301</li>
</ul></li>

</ul>
<p>
<p><kbd>Èeský pøeklad:3.7.2009</kbd></p>  
</p>
</body>
</html>
