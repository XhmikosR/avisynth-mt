<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <title>3D Frequency Domain filter - denoiser</title>
  <link rel="stylesheet" type="text/css" href="../avisynth.css">
</head>
<body>

<h1>FFT3DFilter</h1>

<h2>Pøehled</h2>
<p><b>autor:</b> Alexander G. Balachnin aka Fizick<br>
<b>
verze:</b> 2.1.1<br>
<b>
stáhnout:</b> <a href="http://avisynth.org.ru/"> http://avisynth.org.ru/</a>,
<A href="http://avisynth.org/warpenterprises/">http://avisynth.org/warpenterprises/</A><br>
<b>
kategorie:</b> Prostorovì èasové odšumovaèe<br>
<b>
požadavky:</b> YV12 nebo YUY2 Barevné prostøedí<br>
<b>
licence:</b> GPL</p>
<h2>Úvod</h2>

<h4>FFT3DFilter je 3D frekvenèní filtr - silný odšumovaè a mírný zostøovaè.</h4>

<h3>Technické informace</h3>

<p>
FFT3DFilter používá rychlou metodu Fourierovy transformace (Fast Fourier Transform - FFT) pro zpracování obrazu ve frekvenèní oblasti.
Je založen na nìkterých pokroèilých matematických algoritmech optimální filtrace.
Nepracuje lokálnì, ale provádí urèité delokalizované (blokové) zpracování.
V 3D režimu, to vede k efektu podobnému èásteèné kompenzaci pohybu.
Tento filtr mùže snížit šum bez viditelné ztráty kvality a bez artefaktù,
i dokonce pøi dost silných nastaveních.
Mùže velmi zlepšit kompresi a snížit velikost enkódovaného souboru.<br>
Také má možnost omezeného zostøení (limited sharpening) jak bez zesilování šumu, tak i pøeostøení (haloing).<br>
Fikce? Zkuste ho sami! :)</p>

<h4>Tedy, je to prostorovì èasový (3D) filtr, a pracuje následovnì:</h4>

<ol>

<li>získá aktuální a nìkolik pøedchozích snímkù;</li>
<li>rozdìlí každý snímek na malé pøekrývající se bloky;</li>
<li>vypoèítá frekvenèní spektrum okenní 2D FFT transformací každého bloku
tìchto snímkù;</li>
<li>použije nìjaký filtr na frekvenèní spektrum;</li>
<li>volitelnì zostøí obraz (ve 2D frekvenèní oblasti) zesilováním nìkterých frekvencí; </li>
<li>provede inverzní 2D FFT transformaci vyèištìného spektra pro každý blok;</li>
<li>provede okenní sumaci vyèištìných pøekrytých blokù do výstupního snímku.</li>
</ol>

<p>Pøekryté bloky a vážená okna jsou použita pro odvrácení kostkatìní (a zvonìní hran).<br>
Bloky jsou pøekryté o nìjakou hodnotu v jejich vertikální i
horizontální velikosti.<br>
Èím menší pøekrytí, tím rychlejší zpracování, ale s viditelnìjšími møížkovými artefakty.</p>

<p>Princip pøekrývání je zobrazen na obrázku.</p>

<p><img alt="overlap" src="../../english/pictures/externalfilters/fft3dfilter_overlap.gif"></p>

<p>Jsou využita nìkterá vážená okna analýzy a syntézy pro obdržení efektivního
koeficientu signálu gain=1 po sumarizaci blokù.</p>

<h4>Plugin má nìkoli režimù zpracování ve stadiu filtrace:</h4>

<ul>

<li> (Parametr <var>bt</var>=1)
2D (prostorový-spatial) Wiener filtr pro spektrální data. Používá data jen aktuálního snímku. Snižuje
slabé frekvence (s malým spektrálním výkonem) optimální Wiener
filtrací s nìjakou zadanou hodnotou šumu. Zostøení a odšumìní jsou
v tomto režimu souèasné.</li>
<li> (Parametr <var>bt</var>=2)
3D Wiener filtr pro spektrální data. Pøidává tøetí rozmìr do FFT použitím
dat pøedchozího a aktuálního snímku. Snižuje slabé frekvence (s malým spektrálním 
výkonem) optimální Wiener
filtrací s nìjakou zadanou hodnotou šumu. </li>
<li> (Parametr <var>bt</var>=3)
Také 3D Wiener filtr pro spektrální data s daty z
pøedchozího, aktuálního a následujícího snímku.</li>
<li> (Parametr <var>bt</var>=4)
Také 3D Wiener filtr pro spektrální data s daty ze
dvou pøedchozích, aktuálního a následujícího snímku. </li>
<li> (Parametr <var>bt</var>=5)
Také 3D Wiener filtr pro spektrální data s daty ze
dvou pøedchozích, aktuálního a dvou následujících snímkù.</li>
<li>(Parametr <var>bt</var>=0)
Èasový (temporal) Kalman filtr pro spektrální data. Používá data ze všech pøedchozích snímkù
pro získání odhadu vyèištìných dat aktuálního snímku pomocí algoritmu optimálního rekurzivního procesu.
Filtr zaèíná pracovat s malou silou (=1) (stupnìm snížení šumu),
a pak postupnì (po snímcích) zvyšuje 
sílu, jestli lokální mezisnímková spektrální variace (šum) je malá.
Tak mùže Kalman filtr poskytnout silnìjší redukci šumu než Wiener filtr.
Síla Kalman filtru se omezuje nìjakou zadanou hodnotou šumu.
Lokální síla (a práce filtru) se resetuje na 1,
když lokální variace pøevýší zadanou prahovou hodnotu
(kvùli pohybu, zmìnì scény, atd.). Tedy, výstup Kalman filtru je závislý na historii
(na snímku od kterého se zaèalo filtrovat).</li>
</ul>

<h4>Použití šablony šumu</h4>
<p>Od v1.5 je možné získat strukturu šumu (model)
spektrální analýzou nìkterých prázdných blokù (bez jakýchkoli objektù),
a pak redukovat šum stejnou strukturou v celém snímku a v celém klipu.
To mùže být užiteèné pro odstranìní zrnìní filmu (obzvláštì amatérského 8 mm) a interference analogových TV nahrávek.<p>

<h4>Zostøování</h4>
<p> Pøi zostøování (po odšumìní) plugin zesiluje frekvence vysokého spektra (prostorové, 2D).<br>
Je zde také jen zostøovací režim, bez odšumìní (<var>bt</var>=-1).<br>
Od verze 1.1, jsou použity nìkteré speciální metody omezeného zostøování (limited sharpening) :</p>
<ul>
<li>nejslabší frekvence (s malými amplitudami) nejsou zesilovány
aby se zabránilo zvyšování šumu;</li>
<li>nejsilnìjší frekvence (s velkými amplitudami) nejsou zesilovány
aby se zabránilo pøeostøení a tzv. haloing.</li>
</ul>
<p>Zostøovací síla je maximální pro frekvence s amplitudami ve støedním rozsahu.
Samozøejmì mùžete ovládat obì tyto meze i obecnou zostøovací sílu.</p>
<p>Od v.1.7, je pro zostøení použit Gaussùv filtr vysokých frekvencí s promìnnou frekvencí støihu.</p>
<p>Od v.1.9, má plugin speciální možnost <var>dehalo</var> pro snížení silných frekvencí,
mìl by být použit pro prostorové adaptivní zmìkèení pøeostøených obrazù (odstranìní halo).
Tento režim mùže být kombinován s odšumìním a zostøením.</p>

<h3>Syntaxe</h3>

<p><code>FFT3DFilter</code>(<var>clip,
float "sigma", float "beta", int "plane", int "bw", int "bh", int "bt", int "ow", int "oh",
float "kratio", float "sharpen", float "scutoff", float "svr", float "smin", float "smax",
bool "measure", bool "interlaced", int "wintype",
int "pframe", int "px", int "py", bool "pshow", float "pcutoff", float "pfactor",
float "sigma2", float "sigma3", float "sigma4", float "degrid",
float "dehalo", float "hr", float "ht", int "ncpu"</var>)</p>

<p>Všechny parametry jsou jmenné.</p>

<h3> Parametry funkce:</h3>

<p>první parametr - vstupní klip</p>

<p>
<var>sigma</var>
- zadaná hodnota šumu pro všechny (nebo nejvyšší) frekvence (desetinná&gt;0, výchozí=2.0)<br>
<var>beta</var>
- hranice šumu (desetinná&gt;=1.0, výchozí=1.0 pro žádný zbytek šumu):<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ovládá množství šumu zbývajícího po použití Wiener
filtru, takže maximální potlaèení šumu filtrem = <var>
(beta-1)/beta.</var><br>
<var>plane</var> - zpracovávaná barevná plocha: 0 - jas(Y), 1 - barevnost U, 2 - barevnost V, <br>
 3 - plochy barevnosti U a V, 4 - jak jas tak barevnost (výchozí = 0)<br>
<var>bw</var>
- šíøka bloku (celoèíselná, výchozí = 48 od v.1.2)<br>
<var>bh</var>
- výška bloku (celoèíselná, výchozí = 48 od v.1.2)<br>
<var>bt</var>
- èasový rozmìr bloku, poèet snímkù&nbsp; (-1, 0, 1, 2 nebo
3, výchozí = 3):<br>
&nbsp;&nbsp;&nbsp; 0 - všechny pøedchozí snímky (zapíná režim Kalman filtru);<br>
&nbsp;&nbsp;&nbsp; 1 - jen aktuální snímek (prostorový 2D Wiener filtr);<br>
&nbsp;&nbsp;&nbsp; 2 - pøedchozí a aktuální snímek (3D Wiener filtr);<br>
&nbsp;&nbsp;&nbsp; 3 - pøedchozí, aktuální a následující snímek (3D Wiener filtr)<br>
&nbsp;&nbsp;&nbsp; 4 - dva pøedchozí, aktuální a následující snímek (3D Wiener filtr)<br>
&nbsp;&nbsp;&nbsp; 5 - dva pøedchozí, aktuální a dva následující snímky (3D Wiener filtr)<br>
&nbsp;&nbsp;&nbsp; -1 - jen zostøení (2D);<br>
<var>ow -</var> šíøka pøekrytí (výchozí=<var>bw</var>/3 od v.1.2)<br>
<var>oh -</var> výška pøekrytí (výchozí=<var>bh</var>/3 od v.1.2)<br>
<var>kratio</var>
- pomìr prahové hodnoty ku sigma pro resetování Kalman filtru (default = 2.0):<br>
&nbsp;&nbsp; &nbsp;&nbsp; prahová hodnota variace = <var>sigma*kratio</var>,
dobré hodnoty jsou od 1.5 do 3.0;<br>
<var>sharpen</var>
- síla zostøaní (výchozí=0 - nezostøovat)<br>
&nbsp;&nbsp; &nbsp;&nbsp; dobré hodnoty 0.3 až 1.0 (záporné hodnoty vedou k
obrácenému efektu)<br>
<var>scutoff</var>
- frekvence støihu zostøování, relativní k maximální (výchozí=0.3)<br>
<var>svr</var>
- pomìr vertikálního zostøování (a dehalo) k horizontálnímu (výchozí=1.0 - stejnì jako horizontální, 0 - bez vertikálního zostøování)<br>
<var>smin</var>
- spodní hranice (pøibližná hranice šumu) pro stádium zostøování (výchozí=4.0)<br>
<var>smax</var>
- horní hranice (pøibližná hranice pøeostøení) pro stádium zostøování (výchozí=20.0)<br>
<var>measure</var>
- vybírá optimální (nejrychlejší) FFT metodu mìøením rychlosti (s delším inicializaèním
èasem)<br>
&nbsp; &nbsp; &nbsp; &nbsp; místo jednoduchého odhadu (výchozí=true od v.0.9.2)<br>
<var>interlaced</var>
- rozdìluje zpracování polí (výchozí=false)<br>
<var>wintype</var>
- typ vážících oken (výchozí=0):<br>
&nbsp;&nbsp;&nbsp; 0 - stejná okna analýzy a synteze polo-kosina, používali se ve všech verzích pøed 1.4;<br>
&nbsp;&nbsp;&nbsp; 1 - støed mezi 0 a 2;<br>
&nbsp;&nbsp;&nbsp; 2 - rovinné okno analýzy, okno syntézy zvýšeného kosina (Hanning).<br>
<var>pframe</var>
- èíslo snímku s modelem šumu (výchozí=false)<br>
<var>px</var>
- horizontální X pozice bloku modelu šumu (výchozí=0)<br>
<var>py</var>
- vertikální Y pozice bloku modelu šumu (výchozí=0)<br>
&nbsp;&nbsp;&nbsp; pokud px=py=0, pak je modelový blok definován automaticky s minimální sílou spektra.<br>
<var>pshow</var>
- zobrazí modelový blok šumu a jeho vlastnosti (výchozí=false)<br>
<var>pcutoff</var>
- frekvence støihu modelu šumu (relativní k maximální) (výchozí=0.1)<br>
<var>pfactor</var>
- síla odšumìní modelu šumu (0 až 1.0, výchozí=0, tato metoda vypnuta)<br>
<var>sigma2</var>
- zadaná hodnota šumu ve druhé úrovni mìøítka frekvencí (desetinná&gt;0, výchozí=<var>sigma</var>)<br>
<var>sigma3</var>
- zadaná hodnota šumu ve tøetí úrovni mìøítka frekvencí (desetinná&gt;0, výchozí=<var>sigma</var>)<br>
<var>sigma4</var>
- zadaná hodnota šumu na nejnižších frekvencích (desetinná&gt;0, výchozí=<var>sigma</var>)<br>
<var>degrid</var>
- stupeò kompenzace vážícího okna pro snížení møížky (desetinná&gt;0, výchozí=1.0)<br>
<var>dehalo</var>
- síla odstranìní halo (desetinná&gt;0, výchozí=0.0)<br>
<var>hr</var>
- pøibližný radius halo (desetinná&gt;0, výchozí=2.0)<br>
<var>ht</var>
- pøibližná prahová hodnota halo (desetinná&gt;0, výchozí=50.0)<br>
<var>ncpu</var>
- maximální poèet vláken CPU použitých pro výpoèet FFT (celoèíselný&gt;0, výchozí=1)<br>
</p>

<p>Nejdùležitìjším parametrem je zadaná hodnota šumu <var>sigma</var>.
Musíte použít rozumnou hodnotu založenou na døívìjší informaci o aktuálním klipu.<br>
Typická hodnota pro digitální zdroje je asi 1.5 až 2.5, a asi 3 a výše pro analogové videonahrávky.<br>
Dobrá hodnota velikosti pøekrytí je asi ètvrt až pùl velikosti bloku.
Polovina (ow=bw/2, oh=bh/2) je nejlepší, ale pomalejší.<br>
Dobré hodnoty velikosti bloku jsou asi 32 až 64.</p>
<p>Filtr mùže vytváøet nìjaké møížkové artefakty u velkých <var>sigma</var>
 a malých <var>bw, bh, ow, oh</var> nebo malých relativních rozmìrech pøekrytí, obzvláštì se zapnutým zostøováním.<br>
Filtr mùže vytváøet duchy u velkých <var>sigma</var> (a <var>kratio</var>) pro 3D režimy.</p>
<p>Vážící okna <var>wintype</var>=0 mùže vytváøet horší møížkové artefakty,
okna typu <var>wintype</var>=2 nevytváøí møížkové artefakty, ale mohou vytváøet nìjaké zvonìní,
<var>wintype</var>=1 je prostøední pøípad.</p>
<p>Doporuèuji používat kompenzaci okenního vážení s <var>degrid</var>=1 (od verze 1.8),
to zlepšuje kvalitu odšumìní a snižuje møížkové artefakty, obzvláštì pro 2D.</p>
<p>Zostøení povede k horší kompresi klipu.
</p>
<p>Pro použití metody modelu šumu namísto obyèejné (slepé) metody musíte: <br>
Nejdøíve zapnout zobrazovací režim <var>pshow</var>=true, a nastavit nìjakou nenulovou hodnotu <var>pfactor</var>=1.0. <br>
Pak zvolte èíslo snímku a nìjakou pozici bloku,
aby zobrazovaný blok neobsahoval žádné objekty kromì modelu typického šumu.<br>
Vypnìte zobrazovací režim <var>pshow</var>=false, <br>
a nastavte sílu redukce šumu, doporuèená hodnota <var>pfactor</var>= 0.5 až 1.0.<br>
Nejlepší okenní typ pro tento pøípad je <var>wintype</var>=2.<br>
Parametry <var>sigma</var> a <var>beta</var> nejsou v této metodì odšumìní použity,
ale mùžete použít tuto metodu v zobrazovacím režimu <var>pshow</var>=true
pro odhadnutí hodnoty <var>sigma</var> pro obyèejnou metodu odšumìní
(není to pøísnì ta samá, ale podobná hodnota).</p>

<p>Je zde také kombinovaná metoda, kdy mùžete pøímo nastavit rùzné hodnoty šumu
 <var>sigma</var> pro nejvyšší a <var>sigma2, sigma3, sigma4</var> pro nižší frekvence.
 Koeficienty modelu budou vnitønì vytvoøeny z tìchto hodnot sigma interpolací.
 Pro tuto metodu nastavte pfactor=0 (vnitønì to bude  =1).</p>

<h3>Zvláštnosti a omezení</h3>

<ol>

<li>Filtry pracují jen v YV12 nebo YUY2 barevných formátech.</li>
<li>Mùže zpracovávat jen zadanou barevnou plochu (Y, U nebo V).
Od v1.8.4 je možné zpracovávat nìkolik (všechny) barevné plochy.</li>
<li>Od v1.3 pracuje s jak progresivními tak s prokládanými klipy. </li>
<li>Testováno s Avisynthem v2.55, v2.56, v2.57.</li>
<li>Filtr používá rychlou externí FFTW knihovnu verze 3 (<a href="http://www.fftw.org">http://www.fftw.org</a>)<br>
jako Windows binární DLL (kompilovanou gcc pod MinGW Alessiem Massarem),
která podporuje více vláken a má AMD K7 (3dNow!) podporu navíc k SSE/SSE2.<br>
Mùžete ji stáhnout z
<a href="ftp://ftp.fftw.org/pub/fftw/fftw3win32mingw.zip">ftp://ftp.fftw.org/pub/fftw/fftw3win32mingw.zip</a><br>
<font color="#ff0000">MUSÍTE
vložit soubor FFTW3.DLL z tohoto balíku (ne fft3dfilter.dll) do nìjaké složky v systémem prohlížené cestì (napøíklad, C:\WINNT\SYSTEM32).<br>
Filtr bez ní NEPRACUJE!</font></li>
<li>Knihovna FFTW pracuje nejefektivnìji pro pole jejichž rozmìry (<var>bw, bh</var>)
mohou být rozloženy do malých prvoèísel 2, 3, 5, a 7 (a jednou 11, 13), a
jinak používá pomalejší rutiny pro obecné úèely.</li>
<li>První verze byly skuteènì pooomalé! Ale novìjší verze
jsou už prostì jen pomalé :-).<br>
Je vylepšen algoritmus i instrukce assembleru 3DNow! a pro nìkteré režimy jsou použity SSE instrukce</li>
<li>Algoritmus je rychlostnì optimalizován jen pro dopøedný sekvenèní pøístup ke snímkùm.</li>
<li>Zostøovací metoda je experimentální, nicménì je docela dobrá od v1.1 (a v1.7).</li>
<li>Metoda modelu šumu je také experimentální.</li>
<li>Možnost <var>degrid</var> není implementována pro Kalman filtr.</li>
<li>Pro zašumìlé video je užiteèné použít mediánové pøedfiltrování (napøíklad DeGrainMedian)
   pøed FFT3Dfilter.</li>
<li>Vícevláknový režim ncpu>1 je témìø netestovaný (já nemám core duo), zkuste použít ncpu=2 pokud ho vy máte.</li>

</ol>

<h3>Jednoduché pøíklady skriptù</h3>

<h4>Pro odšumìní jasové plochy progresivního nebo na polích založeného (rozloženého na pole) klipu:</h4>
<pre>Avisource("vstup.avi")
loadplugin("c:\plugins\fft3dfilter.dll")
FFT3DFilter(sigma=3)</pre>
<p>Samozøejmì musíte nahradit "c:\plugins" vaší cestou ke složce s pluginy (a také nastavit cestu k vašemu videu :).
Mùžete pøeskoèit pøíkaz LoadPlugin pokud vložíte soubor fft3dfilter.dll do autonaèítací složky pluginù
(C:\Program Files\Avisynth 2.5\plugins). </p>

<h4>Jen zostøení:</h4>
<pre>Avisource("vstup.avi")
loadplugin("fft3dfilter.dll")
FFT3DFilter(bt=-1, sharpen=0.7)</pre>

<h4>Odšumìní a mírné zostøení prokládaného klipu:</h4>
<pre>Avisource("vstup.avi")
loadplugin("fft3dfilter.dll")
FFT3DFilter(sigma=2, sharpen=0.3, interlaced=true)</pre>

<h4>Jakési "nejlepší nastavení", pomalé zpracování</h4>
<pre>Avisource("vstup.avi")
loadplugin("fft3dfilter.dll")
fft3dfilter(sigma=1.5, bt=5, bw=32, bh=32, ow=16, oh=16, sharpen=0.4)
</pre>

<h4>Odšumìní všech barevných ploch (jak jasu tak barevnosti)</h4>
<p>Poznámka: Rychlost zpracování se hodnì sníží,
takže mùžete zvážit jiné (podobné a rychlejší) filtry používající odšumìní barevnosti
(<code>CNR2</code>, <code>DeGrainMedian</code>, atd).</p>

<h4>Odšumìní všech barevných ploch se stejným nastavením</h4>
<pre>Avisource("vstup.avi")
loadplugin("fft3dfilter.dll")
fft3dfilter(sigma=2, plane=4)
</pre>

<h4>Odšumìní jasu a barevnosti s rùzným nastavením</h4>
<pre>Avisource("vstup.avi")
loadplugin("fft3dfilter.dll")
fft3dfilter(sigma=1.5, plane=0)
fft3dfilter(sigma=3, plane=3)
</pre>

<h4>Jiný zpùsob jak odstranit šum z barevných ploch (skript od AI)</h4>
<p>Ve starých verzích bylo dùležité jestli jste používali kompenzaci pohybu</p>
<pre>Avisource("vstup.avi")
loadplugin("fft3dfilter.dll")
YToUV(fft3dfilter(sigma=3, plane=1).UToY,\
fft3dfilter(sigma=3, plane=2).VToY,\
fft3dfilter(sigma=2, plane=0))
</pre>

<h4>Snížení existujícího horizontálního halo efektu</h4>
<pre>Avisource("vstup.avi")
loadplugin("fft3dfilter.dll")
fft3dfilter(bt=-1, plane=0, dehalo=1.0, hr=2.0, ht=50, svr=0)
</pre>

<h3>Doplòující informace</h3>

<p>Algoritmus Wiener filtru je zložen na 3D IIR/3D Frequency Domain Filter z:<br>
MOTION PICTURE RESTORATION. by Anil Christopher Kokaram. Ph.D. Thesis. May 1993.<br>
<a href="http://www.mee.tcd.ie/%7Eack/papers/a4ackphd.ps.gz">http://www.mee.tcd.ie/~ack/papers/a4ackphd.ps.gz</a>
v postscript formátu (použijte GSview s Ghostscript pro pøeètení).<br>
O Wiener a Kalman filtrech hledejte více informací ve speciální literatuøe
nebo na Googlu.</p>

<p>Diskuze k filtru je na DOOM9 Avisynth fóru, ve vláknì
"New very slow FFT denoiser:"<br>
<a href="http://forum.doom9.org/showthread.php?t=85790">http://forum.doom9.org/showthread.php?t=85790</a></p>

<p>Existuje také plugin <code>FFT3DGPU</code> (od tsp) s podobným 
algoritmem, ale využívající procesory moderních grafických karet pro výpoèet FFT.<br>
<b>Tsp</b> portoval mnoho funkcí z fft3dfilter.
Viz <a href="http://forum.doom9.org/showthread.php?t=89941">http://forum.doom9.org/showthread.php?t=89941</a>.</p>

<h3>Licence</h3>
<p>Tento program je svobodný software; mùžete ho dále rozšiøovat a/nebo upravovat<br>
ho za podmínek GNU General Public License version 2 publikované<br>
Free Software Foundation.<br>
<br>
Tento program je šíøen v nadìji, že bude užiteèný,<br>
ale BEZ JAKÉKOLI ZÁRUKY; dokonce bez pøedpokládané záruky<br>
OBCHODOVATELNOSTI  nebo POUŽITÍ PRO KONKRÉTNÍ ÚÈELY. Viz<br>
GNU General Public License pro více podrobností.<br>
<br>
Spolu s tímto programem by jste mìli obdržet kopii GNU General<br>
Public License; pokud ne, napište do Free Software Foundation.<br>
Inc., 675 Mass Ave, Cambridge, MA 02139, USA. </p>

Dokumentace je šíøena pod <a href="http://creativecommons.org/licenses/by-sa/3.0/">CreativeCommons BY-SA 3.0 license.</a>

<p>Zvažte prosím malou dotaci.</p>

<h3>Zmìny verzí:</h3>

<ul>

<li>Version 0.1, November 23, 2004 - initial experimental.</li>
<li>Version 0.2, December 3, 2004 - added <var>beta</var>
parameter (noise margin).</li>
<li>Version 0.3, December 21, 2004 - added&nbsp; block temporal size
parameter <var>bt</var> (was fixed =3 internally).</li>
<li>Version 0.4, January 16, 2005 -&nbsp; optimized algorithm for speed for <var>bt</var>=2
(now default), <br>
mode <var>bt</var>=3 is temporary disabled,<br>
changed default bw=bh=32, <br>
filtered region now is centered.</li>
<li>Version 0.5, January 28, 2005 - added YUY2 support.</li>
<li>Version 0.6,&nbsp; January 29, 2005 - added Kalman filter mode for <var>bt</var>=0,
and <var>ratio</var> parameter</li>
<li>Version 0.7, January 30, 2005 - re-enabled Wiener
filter mode with 3 frames (<var>bt</var>=3);<br>
first and last frame in Wiener 3D mode now filtered (as 2D)</li>
<li>Version 0.8, February 5,&nbsp; 2005 - added experimental <var>sharpen</var>
option and <var>bt</var>=-1</li>
<li>Version 0.8.1, February 6,&nbsp; 2005 - skip sharpening of the
lowest frequencies to prevent parasitic lines near borders</li>
<li>Version 0.8.2, February 15, 2005 - added internal buffer to
process whole frame (borders included) for any<var> bw, bh</var> (a little slower)</li>
<li>Version 0.8.3, March 16, 2005 - fixed sharpen mode (<var>bt</var>=-1) for YUY2</li>
<li>Version 0.8.4, April 3, 2005 - (not public) - delayed FFTW3.DLL loading</li>
<li>Version 0.9, April 4, 2005 - variable overlapping size <var>ow, oh</var> for
more fast processing,<br>
half overlapping <var>ow=bw/4, oh=bh/4</var> is now default,
while full overlapping <var>ow=bw/2, oh=bh/2</var> was used in all older versions.</li>
<li>Version 0.9.1, April 7, 2005 - some assembler 3DNow! speed optimization
for mode <var>bt</var>=3.</li>
<li>Version 0.9.2, April 10, 2005 - some assembler 3DNow! speed
optimization for mode <var>bt</var>=0,<br>
option <var>measure</var>=true is now default as more fast.</li>
<li>Version 0.9.3 - April 24,2005 - fixed bug for <var>bt</var>=2 with
3DNow! (thanks to <b>kxproject</b> for report);<br>
mode <var>bt</var>=3 now default;<br>
sharpen mode now is horizontal only and modified (still experimental)</li>
<li>Version 1.0 -  June 27, 2005 - improved frame edges processing (by padding);<br>
added <var>svr</var> parameter to control vertical sharpening<br>
</li>
<li>Version 1.0.1 - July 05, 2005 - fixed bug for chroma planes for YUY2 (introduced in v.1.0)
</li>
<li>Version 1.1 - July 8, 2005 - improved sharpening method to prevent grid artifactes and to limit sharpening
(added parameters <var>smin, smax</var>); <br>
renamed parameter <var>ratio</var> to <var>kratio</var>.
</li>
<li>Version 1.2 - July 12, 2005 - changed default block sizes <var>bw=bh=48</var>
and overlap sizes <var>ow=bw/3, oh=bh/3</var>
to finally prevent grid artifactes in sharpen mode (but speed is decreased).
</li>
<li>Version 1.3 - July 20, 2005 - added <var>interlaced</var> parameter for interlaced video processing.
</li>
<li>Version 1.3.1 - July 21, 2005 - fixed bug for YUY2 interlaced.
</li>
<li>Version 1.4 - July 23, 2005 - corrected neutral level for chroma processing, <br>
 changed weighting window type with new <var>wintype</var> parameter
</li>
<li>Version 1.5 - July 26, 2005 - added noise pattern method
and its parameters <var>pframe, px, py, pshow, pcutoff, pfactor</var>
</li>
<li>Version 1.5.1 - July 29, 2005 - fixed bug with <var>pshow</var>
</li>
<li>Version 1.5.2 - July 31, 2005 - fixed bug with Kalman mode (<var>bt</var>=0) for Athlon (introduced in v1.5)
</li>
<li>Version 1.6 - August 03, 2005 - added mode <var>bt</var>=4; added optimized SSE version for <var>bt</var>=2,3;
added <var>sigma2,sigma3,sigma4</var> parameters for composite method.
</li>
<li>Version 1.7 - August 29, 2005 - changed sharpening to Gaussian filter with new parameter <var>scutoff</var>;<br>
 added SSE version for sharpen mode and pattern modes <var>bt</var>=2,3 ;<br>
 restuctured and released code under GNU GPL v.2.
</li>
<li>Version 1.8 - October 3, 2005 - improved internal FFT cache; added <var>degrid=1.0</var> parameter as default;
 changed default <var>wintype=0</var>.
</li>
<li>Version 1.8.1 - October 26, 2005 - fixed bug with <var>sharpen>0</var>  AND <var>degrid>0</var>  for <var>bt</var> not equal 1.
(Thanks to <b>Wull</b> for report).
</li>
<li>Version 1.8.2 - 04 November 2005 - really set default <var>degrid</var>=1.0 (was = 0 accidentally).
</li>
<li>Version 1.8.3 - 28 November 2005 - fixed bug with first frame for Kalman YV12 (thanks to <b>tsp</b>).
</li>
<li>Version 1.8.4 - 29 November 2005 - added multiplane modes plane=3,4.
</li>
<li>Version 1.8.5 - 4 December 2005 - fixed bug with memory leakage (thanks to <b>tsp</b>).
</li>
<li>Version 1.9 - 25 April 2006 - added <var>dehalo</var> options; corrected sharpen mode;
re-enabled SSE optimization for degrid=0; added SSE optimization for bt=3,-1 with degrid>0
(faster by 15%)
</li>
<li>Version 1.9.1 - 10 May 2006 - added SSE optimization for bt=4 with degrid>0
(faster by 30%).
</li>
<li>Version 1.9.2 - 11 september 2006 - changed default bw=bh=32; added mode bt=5
</li>
<li>Version 2.0.0 - November 29, 2006 - added experimental internal motion compensation mode;
 window reorganized; internal multithread support (Core duo, trio, quadro et cetera)
</li>
<li>Version 2.1.0 - January 17, 2007 - removed (temporary ?) experimental internal motion compensation mode.
</li>
<li>Version 2.1.1 - February 20, 2007 - fixed bug with bw not mod 4 (restored v1.9.2 method,
 thanks to JKinG for report).
</li>
</ul>

<h3>
<a href="fft3dfilter211.zip">Stáhnout FFT3DFilter verze 2.1.1</a><br>
</h3>

<p><kbd>$English Date: 2007/02/20 $</kbd></p>
<p><kbd>Èeský pøeklad:18.4.2009</kbd></p>
</body>
</html>
