<html>
<head>
<title>FluxSmooth</title>
<link rel="stylesheet" type="text/css" href="../../avisynth.css">
<!--
Automatically generated, don't change:
$Id: fluxsmooth.htm,v 1.1 2010/02/27 14:50:14 wilbertd Exp $ 
-->
</head>
<body>
<h1>FluxSmooth</h1>
<h2>Pøehled</h2>
<b>autor:</b>  Ross Thomas (Sansgrip)
<br><b>verze:</b>     1.1b<br>
<b>stáhnout:</b> <a href="http://bengal.missouri.edu/~kes25c/FluxSmooth-1.1b.zip">http://bengal.missouri.edu/~kes25c/FluxSmooth-1.1b.zip</a>, <a href="http://kvcd.net/sansgrip/avisynth/">http://kvcd.net/sansgrip/avisynth/</a>,
<a href="http://www.avisynth.org/warpenterprises/">http://www.avisynth.org/warpenterprises/</a>
<br><b>kategorie:</b>  Prostorovì-èasové vyhlazovaèe
<br><b>požadavky:</b>&nbsp;
<ul>
  <li>YV12 &amp; YUY2 Barevné prostøedí</li>
  <li>ISSE podpora</li>
</ul>

<hr size=2 width="100%" align=center>

<!-- #EndTemplate -->
<h2>Popis</h2>
<p>Jednou ze základních vlastností šumu je, že je nahodilý. Jednou ze základních vlastností pohybu je, že není nahodilý. 
To je pøedpoklad práce FluxSmooth, který provìøuje každý pixel a srovnává ho s odpovídajícím pixelem v pøedchozím a 
násedujícím snímku. Vyhlazení nastane, pokud hodnota jak pøedchozího tak následujícího snímku je vìtší, nebo pokud jsou obì menší, 
než hodnota v aktuálním snímku.<br>
<br>
Nazývám to "fluktuaèním" pixelem, a rád bych takový pixel vyhladil zprùmìrováním s jeho sousedy. 
Ve FluxSmoothST se to dìlá (ve výchozím stavu) prostorovì-èasovým zpùsobem, což je, že pro zprùmìrování každého fluktuaèního
pixelu se bere jeho 8 nejbližších sousedù ze stejného snímku a jeho 2 èasové sousedy (z pøedchozího a následujícího snímku). 
Pokud hodnota každého pixelu je uvnitø zadané hodnoty, pak je zahrnut do zprùmìrování. 
Pokud ne, není zprùmìrován. FluxSmoothT provádí jen èasové zprùmìrování.<br>
<br>
Tento filtr jak se zdá, odstraòuje témìø veškerý šum z málo zašumìlých zdrojù (jako DVD) a hodnì šumu ze silnì zašumìlých zdrojù 
(jako nahrávky z kabelových TV), a zachovává dobré množství detailù.<br>
<br>
Pokud vaše CPU podporuje Integer SSE operace (Intel Pentium III a lepší, AMD Athlon a lepší) bude použita optimalizovaná verze
algoritmu.<br>
<br>
Použití FluxSmoothT místo FluxSmoothST pro pouze èasové vyhlazení je mnohem, mnohem rychlejší (o 50% rychlejší na mém systému).</p>
<h2>Použití</h2>
<blockquote>
  <p><code>FluxSmoothT</code> (<var>clip, int &quot;temporal_threshold&quot;</var>)<br>
  <br>
  <code>FluxSmoothST</code> (<var>clip, int &quot;temporal_threshold&quot;, int
  &quot;spatial_threshold&quot;</var>)</p>
</blockquote>
<table border="1">
  <tbody>
    <tr>
      <th>Parametr</th>
      <th>Význam</th>
      <th>Výchozí</th>
    </tr>
    <tr>
      <td><i>temporal_threshold</i></td>
      <td>
        <p>Èasové sousední pixely uvnitø této prahové hodnoty od aktuálního
        pixelu jsou zahrnuty do prùmìru.</p>
        <p>Pokud jej nastavíte na -1, nedojde k žádnému èasovému vyhlazení. (Nelze nastavit na -1 ve <code>FluxSmoothT</code>.)</p>
      </td>
      <td>7</td>
    </tr>
    <tr>
      <td><i>spatial_threshold</i></td>
      <td>
        <p>Prostorové sousední pixely uvnitø této prahové hodnoty od aktuálního pixelu
        jsou zahrnuty do prùmìru.</p>
        <p>Pokud jej nastavíte na -1, nedojde k žádnému prostorovému vyhlazení.</p>
      </td>
      <td>7</td>
    </tr>
  </tbody>
</table>
<h2>Známé problémy</h2>
<ul>
  <li>Okraje snímku se nezpracovávají.
  <li>První a poslední snímek klipu se nezpracovává.
  <li> Vyvolává chybu access violation pøi použití ve víceprùchodovém enkódování v CCE. Nejsem schopen tuto chybu vyvolat. 
  Možná se vztahovala k pøetékání pamìti ve starších verzích spravených od fabrice.</li>
</ul>
<h2>Na dopracování</h2>
<ul>
  <li>Optimalizace SSE kódu.</li>
</ul>
<h2>Autor</h2>
<p>Ross Thomas &lt;<a href="mailto:ross@grinfinity.com">ross at grinfinity.com</a>&gt;</p>
<h2>Historie</h2>
<ul><li>1.1b  Fixed assuming previous and next frame pitches were the same as
					the current frame pitch.
  <li>1.1a 	Yet another "oops" release. Current pixel is once again considered in the averaging code -- I found the lack of it
   too aggressive, especially during fast motion. Also fixed stupid "3am bug" involving a couple of variables I'd declared 
   static that shouldn't've been. Thanks to krieger2005 for spotting that one, and ARDA for diagnosing it.</li>
  <li>1.1 	Changed the averaging code so that the current pixel is excluded, which produces better noise reduction. 
  Also split the code into two different filters, FluxSmoothT and FluxSmoothST. The former does temporal-only smoothing 
  (equivalent to setting "spatial_threshold=-1" in FluxSmoothST) and is about 50% faster. Removed Avisynth 2.0x version 
  to tidy up the code base. Does anyone actually use it any more? My thanks to fabrice and sh0dan for the 1.01 release 
  during my extended absence :).</li>
  <li>1.01 	Added by sh0dan:<br>
    - Removed leak in AviSynth 2.5 YV12 mode (code by fabrice)<br>
    - Aligned tables and variables.<br>
    - Use AviSynth BitBlt for copying chroma.<br>
    - Don't use streaming store. (movntq)<br>
    All in all an approximate 15% speedup compared to previous version. All changes are marked with "sh0:".</li>
  <li>1.0 	First "stable" release. I think it's been tested enough, but wait for a bunch of bugs to emerge and make
  me a liar... Fixed a bug that, in conjunction with a bug in the built-in resizers, caused an access violation under 
  certain circumstances. Thanks to sh0dan for spotting that one :). Added "SetCacheHints" and upgraded to 
  "AvisynthPluginInit2" in 2.5 version.</li>
  <li>0.4 	Implemented iSSE-optimized version, which runs roughly double the speed of the C++ version. Some small 
  optimizations to C++ version. Now smooths chroma as well as luma.</li>
  <li>0.3 	Fixed bad bug that caused incorrect smoothing: no more in-place filtering. Changed defaults back to 
  what they were, now that the algorithm works correctly. Spent some time benchmarking and tweaking various pieces of code, 
  so should now be significantly faster.</li>
  <li>0.2 Fixed non-fatal bug that caused a request for one frame beyond the end of the clip. Changed to in-place filtering 
  so could squeeze a few optimizations here and there. Changed too-high defaults. First Avisynth 2.5/YV12 release.</li>
  <li>0.1 	First release. Alpha code.</li>
</ul>
<p><kbd>$English Date: 2004/08/13 21:57:25 $</kbd></p>
<p><kbd>Èeský pøeklad:23.4.2009</kbd></p>
</body>
</html>
