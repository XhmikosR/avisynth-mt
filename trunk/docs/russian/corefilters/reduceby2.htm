<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="ru">
<head>
<meta http-equiv="Content-Language" content="ru">
   <meta http-equiv="Content-Type" content="text/html; charset="win-1251">
<title>ReduceBy2 / HorizontalReduceBy2 / VerticalReduceBy2</title>
<link rel="stylesheet" type="text/css" href="../../avisynth.css">
<!--
Automatically generated, don't change:
$Id: reduceby2.htm,v 1.8 2008/12/28 21:46:59 fizick Exp $
-->
</head>
<body >
<h2><a name="ReduceBy2"></a>HorizontalReduceBy2 / VerticalReduceBy2 / ReduceBy2</h2>
<p><code>HorizontalReduceBy2 </code>(<var>clip</var>)<br>
  <code>VerticalReduceBy2 </code>(<var>clip</var>)<br>
  <code>ReduceBy2 </code>(<var>clip</var>)</p>
<p><code>HorizontalReduceBy2</code> 
уменьшает горизонтальный размер изображения вдвое,
а <code>VerticalReduceBy2</code> 
уменьшает вертикальный размер изображения вдвое. Если их
связать в цепочку, то изображение будет уменьшено вдвое по каждой оси,
для чего можно использовать просто <code>ReduceBy2</code>, 
что то же самое, что уменьшить сначала по горизонтали, потом по вертикали
или наоборот.
</p>
<p>
Фильтр использует матрицу с весами (1/4,1/2,1/4), такую же как и фильтр
"2:1 reduction (high quality)" в VirtualDub. Это предотвращает алиазинг 
(ступенчатость),
возникающий в случае матрицы (1/2,1/2). Фильтр "resize" VirtualDub'a
использует третью, еще более навороченную матрицу для уменьшения
2:1, но я экспериментировал с ней  и заметил, что на самом деле она дает
чуть худший результат на MPEG файлах -- возможно потому, что перешарпливает
картинку (излишняя резкость), а этого кодеки не любят.
</p>
<p>
Если исходное видео - чересстрочное (interlaced), то 
<code>VerticalReduceBy2</code> еще и преобразует его в прогрессивное
в качестве побочного эффекта (путем смешивания полей). Если планируется вывод видео размером,
например, 320x240, то я советую делать захват с полным вертикальным 
разрешением в чересстрочном режиме и использовать <code>VerticalReduceBy2</code>. 
Результат будет выглядеть намного лучше.
Программа Huffyuv сжимает захваченный поток примерно 2:1, без потерь качества,
так что можно записать 320x480 примерно на то же дисковое пространство,
что и 320x240. (Если хватит места, можно даже ставить разрешение 640x480 
и использовать как <code>HorizontalReduceBy2</code>, так и <code>VerticalReduceBy2</code>.
Однако это не сильно улучшит качество.)
</p>
<p>
Заметьте, что это быстрый и упрощенный фильтр (компромисс по производительности). 
В отличие от стандартных фильтров изменения размеров <a href="resize.htm">XXXresize</a>, 
фильтр <code>ReduceBy2</code> не сохраняет положение центра изображения. 
Он смещает цветовые плоскости на полпиксела. Фактически, <code>ReduceBy2()</code> эквивалентен: 
</p>
<p><code>BilinearResize(Width/2, Height/2, 0.5, -0.5)</code> для RGB,</p> 
<p><code>MergeChroma(BilinearResize(Width/2,Height/2,0.5,0.5),BilinearResize(Width/2,Height/2,1.0,1.0))</code>  для YV12,</p> 
<p><code>MergeChroma(BilinearResize(Width/2,Height/2,0.5,0.5),BilinearResize(Width/2,Height/2,1.0,0.5))</code> для YUY2.</p> 
<p><kbd>$English Date: 2008/12/24 19:19:07 $<br>
Русский перевод 25.05.2005 Alexander Nickolsky (anickol@yahoo.com)<br>
Обновления 24.12.2008 Fizick http://www.avisynth.org.ru</kbd></p>
<FORM>
<INPUT TYPE="Button" VALUE="Back"
onClick="history.go(-1)">
</form>
</body>
</html>