<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="ru">
<head>
<meta http-equiv="Content-Language" content="ru">
<title>Layer Avisynth Filter</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" type="text/css" href="../../avisynth.css">
<!--
Automatically generated, don't change:
$Id: layer.htm,v 1.8 2008/09/08 16:43:48 fizick Exp $
-->
</head>
<body >
<h2><a name="Layer"></a>Layer <em>[yuy2][rgb32]</em></h2>
<p><code>Layer </code>(<var>base_clip, overlay_clip, string &quot;op&quot;, int &quot;level&quot;, 
  int &quot;x&quot;, int &quot;y&quot;, int &quot;threshold&quot;, bool &quot;use_chroma&quot;</var>)</p>
<p>Этот фильтр может наложить два клипа разных размеров (но с одинаковым форматом цвета) используя разные режимы работы. 
<br>

Для попиксельной прозрачности информация из 4-го цветового канала RGB32 (А- или альфа-канал) используется как маска.
</p>

<p><var>Base_clip</var>: подлежащий клип, который определяет размер и все остальные видео и аудио свойства результата.
<br>
  <var>Overlay_clip</var>: клип, который накладывется на клип. Этот клип может содержать альфа слой.
<br>
  <var>op</var>: производимая операция наложения, которая может быть: &quot;add&quot;, &quot;subtract&quot;, 
  &quot;lighten&quot;, &quot;darken&quot;, &quot;fast&quot;, &quot;mul&quot;.
<br>
  <var>level</var>: 0-257, интенсивность выполняемой операции. 0: base_clip возвращается неизмененным, 
  257 (256 для YUY2): используется максимальная интенсивность.
<br>
  <var>x, y</var>: сдвиг положения overlay_clip
<br>
  <var>threshold</var>: (порог) - реализовано только для &quot;lighten&quot; and &quot;darken&quot;. 
<br>
  <var>use_chroma</var>: использовать цвет overlay_clip, по умолчанию =true. Когда false, используется только яркость.
</p>

<p>В поведении фильтра и разрешенных параметрах есть различия в зависимости от формата цвета и операции:
</p>
<ul>
  <li>В YUY2 нет маски (альфа-канала), так что альфа-канал предполагается непрозрачным везде.
  <br>
  </li>
  <li>В RGB32 альфа-канал <var>overlay_clip</var> умножается на <var>level</var>, так что результирующая альфа= (alpha_mask * level + 1) / 256.
   Это означает, что для полной интенсивности операции alpha должна быть 255 и <var>level</var> должен быть 257. 
  </li>
</ul>

<p>Эти операции работают одинаково для RGB32 или YUY2:
</p>
      <pre>&quot;fast&quot;: <i>use_chroma</i> должно быть TRUE, <i>level</i> и <i>threshold</i> не используется.
        Результат просто среднее между <i>base_clip</i> и <i>overlay_clip</i>.

&quot;add&quot;:  <i>threshold</i> не используется. 
        Разница между base_clip и overlay_clip умножается на alpha и добавляется к base_clip.
        alpha=0 -&gt; виден только base_clip,
        alpha=128 -&gt; base и overlay одинаково смешаны,
        alpha=255 -&gt; виден только overlay.
	Используется формула :-
	  RGB32 :: base += ((overlay-base)*(alpha*level+1)>>8)>>8
	  YUY2  :: base += ((overlay-base)*level)>>8

&quot;subtract&quot;: также как add, но overlay_clip предварительно инвертируется.
</pre>
    <p>Эти операторы похоже работают правильно только в YUY2:
</p>
      <pre>&quot;mul&quot;: <i>threshold</i> не используется. 
      The base_clip окрашивается как overlay_clip, так что <i>use_chroma</i> должно быть TRUE.
      alpha=0 -&gt; виден только base_clip, alpha=255 -&gt; примерно такая же яркость как Base,
      но цвета из Overlay

&quot;lighten&quot;: <i>use_chroma</i> должно быть TRUE. производит аналогичное дейтсвие как &quot;add&quot;,
           но только когда результат ЯРЧЕ, чем base, то используются новые значения.
           С большим значением <i>threshold</i>, действие более вероятно,
           так что с <i>threshold</i>=255 это аналогично &quot;add&quot;,
           с threshold=0, base_clip более вероятно проходит без изменений,
           в зависимости от разницы между base_clip и overlay_clip.

&quot;darken&quot;:  аналогично &quot;lighten&quot;, но это производится только когда результат ТЕМНЕЕ, чем base.</pre>
    
<p><br>
Также см <a href="../syntax.htm#multiclip" target="_self">здесь</a> для информации о свойствах результирующего клипа.</p>

<p>&nbsp;
</p>
<h2><a name="Mask"></a>Mask 
  <em>[rgb32]</em></h2>
<p><code>Mask </code>(<var>clip, mask_clip</var>)</p>

<p>Прикладывает определенную альфа-маску к <var>clip</var> для использования с <code>Layer</code> конвертируя <var>mask_clip</var>
 в бесцветный (серый) и используя результат как маску (альфа-канал) в RGB32. 
 В этом канале "черное" означает полностью прозрачное, "белое" означает полностью непрозрачное. 
</p>

<p>&nbsp;
</p>
<h2><a name="ResetMask"></a>ResetMask <em>[rgb32]</em></h2>

<p><code>ResetMask </code>(<var>clip</var>)</p>

<p>Прикладывает "полностью непрозрачную" (то есть белую) альфа-маску к <i>clip</i> для использования с <tt>Layer</tt>.
<br>
</p>
      <pre>Альфа-канал RGB32-клипа не всегда хорошо определен (в зависимости от источника),
       этот фильтр является наиболее быстрым путем приложения полностью белой маски:

clip=ResetMask(clip)</pre>
    <p>&nbsp;</p>
<h2><a name="ColorKeyMask"></a>ColorKeyMask 
  <em>[rgb32]</em></h2>

<p><code>ColorKeyMask </code>(<var>clip, int &quot;color&quot;, int &quot;tolB&quot;, int &quot;tolG&quot;, int &quot;tolR&quot;</var>)</p>

<p>Очищает пикселы в альфа-канале путем сравнения с <var>color</var> (по умолчанию черным).
  Каждый писел со цветом, отличающимся менее чем на <var>tolB, tolG, tolR</var> (по умолчанию 10),
  устанавливается прозрачным (то есть черным), иначе он остается неизменным, то есть он НЕ устанавливается непрозрачным.
  (значит он не устанавливается белым, вот почему Вам может понадобиться ResetMask перед применением данного фильтра).
  Если <var>tolR</var> или <var>tolG</var> не установлены, они получают величину <var>tolB</var> 
  (что отражает старое поведение).  
  Обычно вы начинаетсе с ResetMask, затем делаете несколько вызовов
  ColorKeyMask, чтобы сделать прозачные дырки там, где имеется интересующий цвет.
<b>См <a href="overlay.htm">Overlay</a>
для примеров.</b></p>
</p>
<p>Для версий AviSynth ранее v2.58, не было отдельных уровней точности для
  синего, зеленого и красного. Был только один уровень точности называемый
  <var>tolerance</var> и он использовался для всех цветовых каналов одновременно.</p>

<p><kbd>$English Date: 2008/02/06 16:40:23 $ <br>
Русский перевод 10.05.2005 Drakon Rider <a href="http://drakan.ru">drakan.ru</a>
<br>Обновление 24.11.2006-06.02.2008 Fizick avisynth.org.ru</kbd></p>
<FORM>
  <INPUT TYPE="Button" VALUE="Назад"
onClick="history.go(-1)">
</form>
</body>
</html>
