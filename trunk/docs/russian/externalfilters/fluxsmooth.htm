<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ru">
<head>
<title>FluxSmooth</title>
  <meta content="text/html;charset=windows-1251" http-equiv="Content-Type">
<link rel="stylesheet" type="text/css" href="../../avisynth.css">
<!--
Automatically generated, don't change:
$Id: fluxsmooth.htm,v 1.1 2005/07/21 21:15:19 fizick Exp $ 
-->
</head>
<body>
<h1>FluxSmooth</h1>
<h2>Общая информация</h2>
<b>Автор:</b>  Ross Thomas (Sansgrip)
<br><b>Версия:</b>     1.1a<br>
<b>Загрузка:</b> <a href="http://www.avisynth.org/warpenterprises/">http://www.avisynth.org/warpenterprises/</a>
<br><b>Категория:</b>  пространственно-временные сглаживатели
<br><b>Требования:</b>&nbsp;
<ul>
  <li>Цветовое пространство YV12 или YUY2</li>
  <li>поддержка набора инструкций ISSE</li>
</ul>

<hr size=2 width="100%" align=center>

<h2>Описание</h2>
<p>Одно из основных свойств шума – его случайность. Одно из основных свойств движения – “неслучайность”. Эта 
предпосылка лежит в основе работы фильтра FluxSmooth. Он анализирует каждый пиксел кадра и сравнивает его с 
соответствующим пикселом предыдущего и следующего кадров. Сглаживание производится, если значения в предыдущем и 
следующем кадрах одновременно больше либо одновременно меньше, чем в текущем кадре.</p> 
<p>Я называю такую ситуацию “флуктуирующим” пикселом и борюсь с такими пикселами, заменяя их на усреднённые по соседним 
пикселам значения. В фильтре FluxSmoothST это сглаживание (по умолчанию) делается пространственно-временнЫм образом, то 
есть для флуктуирующего пиксела в усреднение берутся 8 соседних пикселей в том же кадре и два – в предыдущем и 
следующем кадрах. Если величина пиксела в пределах порога, он включается в усреднение (<i>прим.перев.: имеется в виду
разность между рассматриваемым “флуктуирующим” пикселом и данным соседним; если они тем не менее не сильно отличаются, 
то этот соседний берётся в расчёт при усреднении</i>). FluxSmoothT выполняет только временнОе усреднение.</p>
<p>Этот фильтр успешно убирает практически весь шум из малошумных источников видео (таких как DVD), и значительную 
часть шума из сильно зашумлённых (типа ТВ трансляций), при этом сохраняя достаточное количество деталей.</p>
<p>Если процессор поддерживает набор инструкций Integer SSE (Intel Pentium III и старше, AMD Athlon и старше), 
будет использоваться оптимизированная версия алгоритма.</p>
<p>Для чисто временнОй фильтрации используйте FluxSmoothT вместо FluxSmoothST – это гораздо быстрее (на 50% на моей 
системе).</p>

<h2>Использование</h2>
<blockquote>
  <p><code>FluxSmoothT</code> (<var>clip, int &quot;temporal_threshold&quot;</var>)<br>
  <br>
  <code>FluxSmoothST</code> (<var>clip, int &quot;temporal_threshold&quot;, int
  &quot;spatial_threshold&quot;</var>)</p>
</blockquote>
<table border="1">
  <tbody>
    <tr>
      <th>Параметр</th>
      <th>Описание</th>
      <th>Значение по умолчанию</th>
    </tr>
    <tr>
      <td><i>temporal_threshold</i></td>
      <td>
        <p>Порог для временнЫх соседей (пикселы в пределах этого порога включаются в усреднение).<br>
        Если задать -1, временное сглаживание не производится. (Нельзя задать -1 в <code>FluxSmoothT</code>.)</p>
      </td>
      <td>7</td>
    </tr>
    <tr>
      <td><i>spatial_threshold</i></td>
      <td>
        <p>Порог для пространственных соседей (аналогично предыдущему). Задание -1 отключает пространственное 
        сглаживание.</p>
      </td>
      <td>7</td>
    </tr>
  </tbody>
</table>
<h2>Особенности</h2>
<ul>
  <li><p>Края изображения не обрабатываются.</p></li>
  <li><p>Первый и последний кадр видеоклипа не обрабатываются.</p></li>
  <li><p>Вроде бы вызывает ошибку access violation при многопроходном кодировании в CCE.
  Мне не удалось воспроизвести ошибку; возможно, она была вызвана утечками памяти в ранних версиях, исправленных 
  fabrice.</p></li> 
</ul>
<h2>В планах</h2>
<ul>
  <li>Оптимизация кода под SSE.</li>
</ul>
<h2>Автор</h2>
<p>Ross Thomas &lt;<a href="mailto:ross@grinfinity.com">ross at grinfinity.com</a>&gt;</p>
<h2>История версий</h2>
<ul>
  <li>1.1a Ещё одна “опа!”-версия:). Рассматриваемый пиксел вновь включён в усреднение – я решил, что его выбрасывание 
  делает фильтрацию слишком агрессивной, особенно при быстром движении. Также исправлена ошибочное объявление static
  некоторых переменных (спасибо krieger2005 и ARDA).</li> 
  <li>1.1 Процедура усреднения изменена таким образом, что текущий пиксел не участвует в усреднении, это даёт лучшее 
  шумоподавление. Код разделён на два фильтра – FluxSmoothT и FluxSmoothST. Первый производит чисто пространственное 
  сглаживание, эквивалентное установке <code>spatial_threshold=-1</code> в FluxSmoothST, но гораздо быстрее (около 50%).
  Ликвидирована поддержка версии для Avisynth 2.0x. Кому-нибудь она нужна?
  Мои благодарности fabrice и sh0dan за версию 1.01, выпущенную во время моего длительного отсутствия:).</li> 
  <li>1.01 Добавлено sh0dan:<br>
    - Устранены утечки памяти в режиме AviSynth 2.5 YV12 (fabrice)<br>
    - Выровнены таблицы и переменные.<br>
    - Используется AviSynth функции BitBlt для копирования цветовых плоскостей.<br>
    - Не исплоьзуется потоковое хранение (movntq)<br>
   Всё вместе даёт ускорение примерно на 15%. Изменения отмечены "sh0:".</li>
  <li>1.0 Первый стабильный релиз. Я думаю, что тестировали его достаточно, но подождём пары всплывших ошибок и можно 
  называть меня лжецом. Исправлена ошибка, которая вместе с ошибками во встроенных фильтрах масштабирования приводила
  в некоторых случаях к ошибке access violation. Спасибо sh0dan за ловлю этого глюка.:). 
  Добавлено "SetCacheHints" и обновлено до "AvisynthPluginInit2" версии 2.5.</li> 
  <li>0.4 Реализована оптимизированная под iSSE версия, которая примерно вдвое быстрее. Небольшие оптимизации в обычной 
  версии. Теперь цветовые каналы также сглаживаются.</li> 
  <li>0.3 Исправлена неприятная ошибка, приводящая к некорректному сглаживанию. Вернул на место значения по умолчанию.
  Оптимизированы некоторые участки кода – должно быть заметно быстрее.</li> 
  <li>0.2 Исправлена несущественная ошибка – запрашивался кадр за концом клипа. Изменил слишком высокие значения 
  по умолчанию. Первый релиз под версию Avisynth 2.5/YV12.</li> 
  <li>0.1 Первая сырая версия.</li>
</ul>
<p><kbd>$English Date: 2004/08/13 21:57:25 $</br>
Русский перевод 21.07.2005 Eugene Vasiliev (eugvas<span>&#64;</span>mccme.ru)</kbd></p>
</body>
</html>
