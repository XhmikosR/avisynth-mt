<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html lang="ru">
<head>
  <title>VagueDenoiser плагин для Avisynth</title>
  <meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
  <link rel="stylesheet" type="text/css" href="../../avisynth.css">
<!--
Automatically generated, don't change:
$Id: vaguedenoiser.htm,v 1.3 2006/12/13 21:01:40 fizick Exp $
-->
</head>
<body>
<h1>VagueDenoiser</h1>
<h2>Общая информация</h2>
<b>авторы:</b>   Lefungus, Kurosu, Fizick<br>
<b>версия:</b>        0.35.1<br>
<b>скачать:</b>  <a href="http://bag.hotmail.ru/vague/vaguedenoiser.dhtml">http://bag.hotmail.ru/vague/vaguedenoiser.dhtml</a><br>
<b>категория:</b>   Пространственные сглаживатели<br>
<b>требования:</b>
<ul>
  <li>YV12 &amp; YUY2 &amp; RGB цветовые пространства</li>
</ul>
<p><b>лицензия:</b> GPL</p>

<h2>Введение</h2>

<p>Это основанный на вейвлетах (коротких волнах) шумоподавитель. <br>
 По существу, он преобразует каждый кадр входного видео в пространство вейвлетов,
используя различные вейвлет-фильтры. Затем он применяет некоторую фильтрацию к
полученным коэффициентам. Потом он делает обратное
вейвлет-преобразование. Благодаря свойствам вейвлетов, это дает хороший
сглаженный результат и снижение шума, без размазывания деталей
изображения. Данное вейвлет-преобразование может быть сделано для
каждой плоскости цветового пространства. Данный фильтр использует
вейвлеты из руководства Брислауна (Brislawn).<br>


</p><h2>Синтаксис фильтра VagueDenoiser:</h2>

<p>
<code>VagueDenoiser</code>(<var>int "threshold", int "method", int "nsteps", float "chromaT",
bool "debug", bool "interlaced", int "wavelet", bool "Wiener", float "wratio",
integer "percent", clip "auxclip"</var>)</p>
<h4>Параметры:</h4>


<p><var>threshold</var>: число с плавающей точкой (по умолчанию=0)<br>
&nbsp;&nbsp;&nbsp;&nbsp; Сила фильтрации. Чем выше, тем более фильтрованным будет клип.
При жестком установлении порогов можно использовать более высокий порог чем при
мягком, до того как клип выглядит чрезмерно фильтрованным.<br>
&nbsp;&nbsp;&nbsp; Если установлен &lt;0, то шумопонижение канала яркости будет отменено<br>
&nbsp;&nbsp;&nbsp; Если установлено =0, то порог оценивается автоматически (адаптивно)</p>

<p><var>method</var>: от -1 до 3 (по умолчанию=3)<br>
&nbsp;&nbsp;&nbsp; Метод фильтрации, который будет использоваться.<br>
&nbsp;&nbsp;&nbsp; -1: Нет установления порогов (для целей отладки)<br>
&nbsp;&nbsp;&nbsp; 0: Жесткое установление порогов. Все величины коэффициентов ниже порога будут занулены.<br>
&nbsp;&nbsp;&nbsp; 1: Мягкое установление порогов. Все величины ниже порога будут занулены.
Все величины выше порога будут снижены на значение порога.<br>
&nbsp;&nbsp;&nbsp; 2: адаптивное установление порогов (метод NormalShrink). Масштабирует входной порог в
зависимости от локальных вейвлет данных (локальных - на уровне подзоны вейвлет
декомпозиции-разложения).<br>
&nbsp;&nbsp;&nbsp; 3: Промежуточное установление порогов (по Qian), удавка. Масштабирует
или зануляет коэффициенты - промежуточный между (сильнее)
мягким и (слабее) жестким методами установления уровней порогов.
&nbsp;&nbsp;&nbsp; 4: Всюду гладкая функция сокращения.
</p>

<p><var>nsteps</var>: целое (по умолчанию=4)<br>
&nbsp;&nbsp;&nbsp;&nbsp; Число шагов вейвлет разложения изображения.
Более высокие величины могут работать медленнее, но результаты будут лучше. <br>
&nbsp;&nbsp;&nbsp; Предлагаемые величины 3-6.<br>
&nbsp;&nbsp;&nbsp; Изображение не может быть разложено выше определенного предела (типично
8 для кадрa 640x480 - так как 2^9 = 512 &gt; 480)<br>
&nbsp;&nbsp;&nbsp; Максимальная величина зависит от цветовой плоскости и флага чересстрочности.<br>
&nbsp;&nbsp;&nbsp; Если введен 0 или слишком большая величина, то <var>nsteps</var> будет
автоматически ограничен максимально допустимой величиной
</p>

<p><var>chromaT</var>: число с плавающей точкой (по умолчанию=-1)<br>
&nbsp;&nbsp;&nbsp;&nbsp; Устанавливает величину порога для фильтрации цвета (цветоразностных каналов).&nbsp;&nbsp; &nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp; Это замедляет, но дает лучшие результаты<br>
&nbsp;&nbsp;&nbsp; Если установлено &lt;0, то шумопонижение цвета отменено (по умолчанию)<br>
&nbsp;&nbsp;&nbsp; Если установлено =0, то порог оценивается автоматически (адаптивно)
</p>

<p><var>debug</var>: true (истина) или false (ложь)<br>
&nbsp;&nbsp;&nbsp; Деактивирует обратное преобразование для отображения прямого 
(но не нормализованные коэффициенты теперь).<br>
&nbsp;&nbsp;&nbsp; Также разрешает вывод для утилиты Debugview
</p>

<p><var>interlaced</var>: true или false (по умолчанию=false)<br>
&nbsp;&nbsp;&nbsp; Пытается обрабатывать поля клипа отдельно.
</p>

<p><var>wavelet</var>: 1 или 2 или 3 (по умолчанию=1)<br>
&nbsp;&nbsp;&nbsp; Выбирает тип вейвлета:<br>
&nbsp;&nbsp;&nbsp; 1 - Cohen-Daubechies-Feauveau 9/7 - популярный, вероятно наилучший<br>
&nbsp;&nbsp;&nbsp; 2 - Brislawn 10/10 (резкий, использовался как единственный во всех
предыдущих версиях от 0.23 до 0.29)<br>
&nbsp;&nbsp;&nbsp; 3 - Villasenor-Belzer-Liao 6/10
</p>

<p><var>Wiener</var>: true или false (по умолчанию=false)<br>
&nbsp;&nbsp;&nbsp; Активирует двух этапный режим WienerChop шумоподавления для сильного
шумоподавления с высокими порогами (медленный).<br>
&nbsp;&nbsp;&nbsp; Первый этап - оценка шума путем преобразования с первым вейвлетом
(отличным от выбранного вейвлета с указанными настройками.<br>
&nbsp;&nbsp;&nbsp; Второй этап - оптимальная фильтрация по Винеру (Wiener) со вторым
(выбранным) вейвлетом.<br>
&nbsp;&nbsp;&nbsp; Второй вейвлет 1 используется с первым (оценочным) вейвлетом 3.<br>
&nbsp;&nbsp;&nbsp; Второй вейвлет 2 используется с первым (оценочным) вейвлетом 1.<br>
&nbsp;&nbsp;&nbsp; Второй вейвлет 3 используется с первым (оценочным) вейвлетом 1.
</p>

<p><var>wratio</var>: число с плавающей точкой (по умолчанию=0.5)<br>
&nbsp;&nbsp;&nbsp; Величина стандартного отклонения шума для
шумопонижения по Винеру как относительное значение к величине порога.
</p>

<p><var>percent</var>: целое от 0 до 100 (по умолчанию=85)<br>
&nbsp;&nbsp;&nbsp; Частичное или полное шумоподавление (ограниченное
сокращение коэффициентов).
</p>

<p><var>auxClip</var>: дополнительный клип для первого прохода в режиме Винера (по умолчанию=нет, клип-источник)<br>
&nbsp;&nbsp;&nbsp; Предварительно фильтрованный клип источник, предпочтительно с временным или
пространственоо-временным фильтром (таким как DeGrainMedian) для наилучшего шумопонижения и подавления артефактов.
</p>

<h2>Примеры использования фильтра VagueDenoiser</h2>

<p>Все строки Avisynth скриптов здесь только примеры.</p>

<h3>Некоторые настройки (когда-то) нравящиеся Lefungus:</h3>

<p>Для легкой фильтрации кино (средняя -&gt; <var>threshold</var>=1-1.5;
сильная -&gt; <var>threshold</var>=2-3)</p>

<pre>VagueDenoiser(threshold=0.8, method=1, nsteps=6, chromaT=0.8)
</pre>

<p>Для легкой фильтрации мультфильмов аниме
(средняя -&gt; <var>threshold</var>=2; &nbsp;сильная -&gt; <var>threshold</var>=4) </p>

<pre>VagueDenoiser(threshold=1.5, method=1, nsteps=6, chromaT=2.0)
</pre>

<p>Использование установления порогов Qian предпочтительно как более подобного оптимальному (байесовому).</p>

<h3>Некоторые мощные (но медленные) настройки от Fizick</h3>

<p>Для сильной фильтрации (с высоким порогом) шумного
чересстрочного аналогового видео. При этом характерно появление
артефактов типа "капель", особенно при жестком установлении
порога (оптимально использования режима Qian). Это следствие
использования метода быстрого прореженного вейвлет преобразования, а
также импульсов от "горячих" пикселов. Используем оптимальную
фильтрацию по Винеру. То есть сначала делаем оценку мощности
сигнала и шума в одном вейвлет базисе. Затем и использум другой вейвлет
базис (почти некоррелированный) для собственно фильтрации, то есть
уменьшения амплитуд слабых составляющих (с использованием ранее
сделанной оценки мощности). Дополнительно уменьшаем влияние
"горячих" пикселов, предварительно устраняя их медианным временным фильтром 
(undot, degrainmedian), и используя результат как дополнительный клип для оценки шума.
 Данный дополнительный клип может быть весьма агрессивно отфильтрован, 
 так как мы не используем его как входной для VagueDenoiser. 
 (Кстати получили не строго пространственное сглаживание.)
 Смотри пример (но работает медленно): <br>
</p>

<pre>LoadPlugin("vaguedenoiser.dll")
LoadPlugin("degrainmedian.dll")
avisource("input.avi")
aux=DeGrainMedian(mode=0, limity=7, interlaced=true)
VagueDenoiser(threshold=7, auxclip=aux, interlaced=true, wiener=true)
</pre>

<h2>История версий и загрузка:</h2>

<u>v0.12 - July 4, 2003</u> Первый релиз (Lefungus)
<ul>
 <li>скорректирована проблема точности, 0 для порога теперь беспотерьный.</li>
</ul>
<u>v 0.13</u>
<ul>
 <li>Метод жесткое установление порогов включен.</li>
 <li>Avisynth параметры изменены.</li>
</ul>
<u>v 0.2</u>
<ul>
 <li>Реализованы много новых вейвлет фильтров, благодаря конструктору вейвлет кодировщика,<br>смотри http://www.geoffdavis.net/ для дополнительной информации.</li>
 <li>Реализован параметр <var>nsteps</var>, который позволяет Вам использовать n шагов в выбранно вевлет преобразовании.</li>
 <li>Некоторые величины <var>nsteps</var> могут приводить к плохим результатам, уменьшение этой величины обычно решает проблему.</li>
 <li>Небольшая оптимизация от Shodan и Bidoche.</li>
</ul>
<u>v 0.22</u>
<ul>
 <li>Поддержка цветового формата YUY2.</li>
 <li>Опциональная фильтрация цветности,(<var>chroma</var>=true/false).</li>
 <li>Косметические изменения, код очищен.</li>
 <li>Html документация.</li>
</ul>
<u>v 0.23</u>
<ul>
 <li>Код очищен, удален класс фильтров.</li>
 <li>Лучшие параметры для компиляции. Должно реально работать на любом процессоре теперь.</li>
 <li>Удалены все фильтры исключая Brislawn 10/10, так что параметр <var>filter</var> удален.
(Это подобно <var>filter</var>=7).</li>
 <li>Небольщое увеличение скорости (3-5fps на кадре 640x256 с <var>nsteps</var>=6).</li>
</ul>
<u>V0.24</u>
<ul>
 <li>Другое увеличение скорости, некоторые критические циклы развернуты (до бесконечности и за пределы!)</li>
</ul>
<u>V0.241</u>
<ul>
 <li>высота и ширина должны быть кратны на 4, добавлено сообщение об ошибке если не так</li>
 <li>Очищены include благодаря Kurosu</li>
</ul>
<u>V0.242</u>
<ul>
 <li>Удалены ограничения на высоту/ширину, исправлены ошибки</li>
 <li>Некоторые улучшения от Kurosu</li>
</ul>
<u>V0.243</u>
<ul>
 <li>Код очищен</li>
</ul>
<u>V0.25</u>
<ul>
 <li>Небольшое увеличение скорости (благодаря некоторым профилям и векторизациям)</li>
 <li>добавлены умолчания</li>
 <li>добавлена компилированная с visual.net dll для целей совместимости. Эта dll медленнее</li>
</ul>
<u>V0.26 (Kurosu)</u>
<ul>
 <li>Присоедены (C++ безумна) все ассеммблерные части от версии Kurosu в одну dll</li>
 <li>Сдедовательно, увеличение скорости</li>
 <li>Отменены предыдущие оптимизации векторизации</li>
 <li>Все улучшения доступны только для YV12</li>
</ul>
<u>V0.26.1 (Kurosu)</u>
<ul>
 <li>Присоединено от Sh0dan по copy</li>
 <li>Более ясное и безопасное управление от Bidoche</li>
 <li>Исправлена авария, которая могла затронуть пользователей P4 (Athlon с поддержкой SSE не были затронуты, так как
3DNow! код, будучи быстрейшим, всегда выбирался).</li>
 <li>Добавлен отладочный вывод и беспороговый (NOOP) метод (для отладки)</li>
</ul>
<u>V0.27.0 (Kurosu)</u>
<ul>
 <li>Продолжена интеграция и добавлен каркас для вейвлета Haar (пока не функционален, деактивирован)</li>
 <li>Все оптимизации предложенные Sh0dan, ARDA и Bidoche</li>
 <li>Некоторое повторное использование регистров (AMD-64 идет камень) для немного большей скорости (5%)</li>
 <li>Добавлено установление порогов по Qian</li>
</ul>
<u>V0.27.1 (Kurosu)</u>
<ul>
 <li>Исправлен режим YUY2</li>
 <li>Добавлены режимы RGB24 и RGB32</li>
 <li>Вышеупомянутые режимы врядли получат оптимизацию по скорости</li>
</ul>
<u>V0.28.0 (Kurosu)</u>
<ul>
 <li>Исправлены все режимы чтобы правильно обрабатывать то что надо обрабатывать (небольшое ускорение)</li>
 <li>Развернуто преобразование float2byte, небольшое ускорение</li>
 <li>Добавлен параметр <var>interlaced</var> (смотри описание параметра) для поддержки чересстрочного&nbsp; YV12 формата</li>
 <li>Рабочее пространство совместимо с Intel
ICL7. DLL не компилирована в этом режиме по законным причинам (я не имею ICL)</li>
 <li>Обнаружено большое замедление для ширины кратной 64 (MOD64).
  Избегайте их, так что применение этого фильтра перед изменением размеров 
  может быть быстрее фактически (в частности справедливо для ширины 512)</li>
</ul>
<u>V0.28.1 (Kurosu)</u>
<ul>
 <li>Замедление для ширины кратной 64 - из-за чего-то требующего полного переписывания, та что не исправлено</li>
 <li>Реализован более чистый подход для YUY2 и RGB24/32 </li>
 <li>Чересстрочный режим теперь работает во всех режимах (обработка в чересстрочном режиме немного быстрее, но Вы теряете точность)</li>
</ul>
<u>V0.28.2 (Kurosu)</u>
<ul>
 <li>Перенесены в nasm ассемблерные части</li>
</ul>
<u>V0.29 - December 10, 2003 (Kurosu)</u>
<ul>
 <li>Больше nasm</li>
 <li>Больше исправлений ошибок</li>
</ul>
<u>V0.30 - 2 Июля 2004 (Fizick)</u>
<ul>
 <li>Добавлен (восстановлен) вейвлет CDF 9/7&nbsp;(C версия только) и выбор вейвлета <var>wavelet</var></li>
 <li>Добавлен WienerChop двух-проходный (двух шаговый) режим, использующий два различных базиса вейвлетов.</li>
 <li>Заменен двоичный параметр <var>chroma</var> на <var>chromaT </var>с плавающей точной как пороговое&nbsp; значение для плоскостей цветности</li>
 <li>Добавлено автоматическое (адаптивное)оценивание порога</li>
 <li>3DNow режим жесткого порога временно заменен на SSE или C версии.</li>
 <li>Исправлена возможная ошибка утечки памяти для не-YV12 режимов</li>
</ul>
<u>V0.31 (Fizick)</u>
<ul>
 <li>Добавлен параметр отношения шума <var>wratio</var> дляr этапа Винера</li>
 <li>Исправлен чересстрочный режим. Кажется он теперь работает.</li>
 <li>3DNow режим порога Qian временно заменен на SSE или C версии.</li>
</ul>
<u>V.0.32 - 9 июля 2004 (Выпущена Fizick, но часть работы была сделана Kurosu)</u>
<ul>
 <li>Добавлен вейвлет Villasenor-Belzer-Liao 6/10 (неоптимизированная C версия только)</li>
 <li>Изменены вейвлеты оценки на более оптимальные пары для режима WienerChop.</li>
 <li>3DNow оптимизированная версия WienerChop и AutoThreshold - спасибо Kurosu.</li>
 <li>3DNow режим жесткого и Qian порогов вновь разрешены после устранения ошибок, сделанное Kurosu и Fizick.</li>
 <li>Небольшое увеличение скорости главным образом благодаря обратному порядку копирования</li>
 <li>Но большое замедлении для ширины кратной 64 (особенно 512!) еще существует).</li>
 <li>SSE float-byte преобразование имеет ошибку для некоторой ширины, временно заменено на C версию.</li>
 <li>Перенесены в NASM memcopy ассемблерная функция (нет больше не-NASM ассемблера).</li>
</ul>
<u>V.0.32.1 - 10 июля 2004 (Fizick)</u>
<ul>
 <li>Исправлена ошибка в функции копирования, введенная в v.0.32</li>
 <li>Вновь восстановлены SSE оптимизированное float-byte и byte-float cпреобразования после исправления некоторых ошибок</li>
</ul>
<u>V.0.33 - 11 июля, 2004 (Fizick)</u>
<ul>
 <li>Исправлено замедление для ширины кратной 64 путем дополнения (padding) (спасибо MfA)</li>
 <li>Добавлен режим частичного подавления шума <var>percent</var>(путем смешивания с исходным)</li>
 <li>Исправлена ошибка с AutoThreshold для 3DNow.</li>
 <li>AutoThreshold теперь также зависит от параметра <var>wratio</var>.</li>
 <li>Добавлены сообщения для утилиты Debugview.</li>
 <li>Изменены значения по умолчанию некоторых параметров на более оптимальные (для меня?):
 <var>thresh=0 (auto), method=3, nsteps=4, wavelet=1, percent=75.</var></li>
</ul>
<u>V.0.33.1 - 13 июля 2004 (Fizick)</u>
<ul>
 <li>Исправлена ошибка с шириной кратной 64 для SSE (путем увеличения дополнения с 2 до 4)</li>
</ul>
<u>V.0.33.2 - 17 июля 2004 (Fizick)</u>
<ul>
 <li>Исправлена ошибка с величинами по умолчанию (спасибо SILICON за доклад).</li>
</ul>
<u>V.0.33.3 - 21 июля 2004 (Fizick)</u>
<ul>
 <li>Исправлена ошибка с YUY2 (введенная в v.0.32.1)</li>
</ul>
<u>V.0.33.4 - 23 августа 2004 (Fizick)</u>
<ul>
 <li>Исправлена ошибка с отраженными добавленными пикселами (спасибо Eugen65 за доклад).</li>
</ul>
<u>V.0.33.5 - 28 сентября 2004 (Fizick)</u>
<ul>
 <li>Исправлена ошибка с AutoThreshold для чересстрочного режима Винера (спасибо Viperzahn и LigH за доклад).</li>
</ul>
<u>V.0.33.6 - 13 октября 2004 (Fizick)</u>
<ul>
 <li>Параметр <var>nsteps</var> теперь автоматически ограничен до максимально допустимой величины,
 если введенная слишком велика или =0 (не беспокойся, Viperzahn :-) </li>
 <li>Некоторое улучшение обработки исключений (try-catch-throw).</li>
</ul>
<u>V.0.33.7 -17 октября 2004 (Fizick)</u>
<ul>
 <li>Снижена максимально допустимая величина <var>nstep</var> чтобы исправить некоторую внутреннюю ошибку (или особенность)
(спасибо Viperzahn за настойчивый доклад :-)</li>
</ul>
<u>V.0.34 - 24 ноября 2004 (Fizick)</u>
<ul>
 <li>Добавлен дополнительный (auxiliary) (некоторый префильтрованный) клип для первого прохода режима Винера.</li>
</ul>
<u>V.0.34.1 - 19 декабря 2004 (Fizick)</u>
<ul>
 <li>Некоторое исправление mem_set для совместимости со старыми процессорами (P2).</li>
</ul>
<u>V.0.34.2 - 11 марта 2005 (Fizick)</u>
<ul>
 <li>Исправлена маленькая ошибка (синяя точка) для <var>chromaT</var>&gt;=0 в YV12 для Athlon (спасибо Pavico за доклад).</li>
 <li>Добавлен pitch для внутренних буферов. </li>
</ul>
<u>V.0.34.2.0 - 13 июня 2005 (Fizick)</u>
<ul>
 <li>Обновлена документация.</li>
</ul>
<u>V.0.34.3 - 11 Сентября 2005 (Fizick)</u>
<ul>
  <li>Исправлен алгоритм автоматического определения порога.</li>
</ul>
<u>V.0.35 - 17 Сентября 2005 (Fizick)</u>
<ul>
  <li>Улучшил <var>method=1</var> - больше не фильтрует самый низкий уровень, не меняется среднюю интенсивность картинки.</li>
  <li>Восстановил <var>method=2</var> многоуровневого позонного адаптивного установления порогов, реализовал как метод NormalShrink;</li>
  <li>Добавил <var>method=4</var> равномерно гладкой функции сокращения;</li>
  <li>Заменил режим частичного шумопонижения смешением на ограниченное сокращение малых коэффициентов для всех функций установления порогов;</li> 
  <li>Изменил значение по умолчанию <var>percent=85</var>;</li>
  <li>Реализовал новые SSE версии для <var>method=0,3,4</var> и C версии для остальных (3DNow исключена с 4% падением скорости);</li> 
  <li>Добавил 3DNow оптимизированную версию для преобразования вайвлетов 1 и 3 (10% скорости).</li>
</ul>
<u>V.0.35.1 - 26 Сентября 2005 (Fizick)</u>
<ul>
  <li>Добавил YUY2 и RGB форматы для auxclip.</li>
</ul>

<h2>Благодарности :</h2>

<ul>

<li>Всем на Doom9.org за обсуждение.</li>
<li>MarcFD за его mpegdec3 html документацию. Этот html - тот же самый но с
модифицированным содержимым.</li>
<li>Lefungus за его VagueDenoiser html документацию. Этот html - тот же самый но с
модифицированным содержимым. :)</li>
<li>Kurosu за его VagueDenoiser html документацию. Этот html - тот же самый но с
модифицированным содержимым. :-) (но теперь формат уже изменен)</li>
<li>Geoff Davis, автор конструктора кодера вейвлет преобразования.</li>
<li>Lefungus, создатель VagueDenoiser.</li>
<li>Kurosu, реорганизация и оптимизация кода.</li>
<li>Fizick, некоторая деорганизация и деоптимизация кода. :-)</li>
</ul>

<h2>Лицензия распространения кода:</h2>

<p>Это свободная программа распространяется с
соответствии с условиями лицензии GNU-GPL версии 2 </p>

<h2>Контакты:</h2>

<p>Вы можете направить e-mail Lefungus по: <u>lefungus (at) altern (dot) org</u> для
большинства предложений, сообщений об ошибках, запросу особенностей, и прочее.<br>
Web страница Lefungus: <a href="http://perso.wanadoo.fr/reservoir/avisynth.html"><cite>http://perso.wanadoo.fr/reservoir/avisynth.html</cite></a><br>
Вопросы оптимизации есть вопросы Kurosu.<br>
Еще должно быть очевидным, что Вы можете достичь Kurosu здесь: <u>kurosu (at) inforezo (dot) org</u> <br>
Fizick не ответственен ни за что, но обычно стремится к совершенству :-)<br>
Fizick доступен по: <u>bag (at) hotmail (dot) ru</u>, <br>
и его web страница с последними версиями должна быть на: <a href="http://bag.hotmail.ru"><cite>http://bag.hotmail.ru</cite></a> или ее зеркале.
</p>

<p>Идите на форум <a href="http://forum.doom9.org/showthread.php?s=&amp;threadid=56871"><cite>http://forum.doom9.org/showthread.php?s=&amp;threadid=56871</cite></a>
за поддержкой.</p>

<p><kbd>$English Date: 2005/10/05 18:12:43 $<br>
Русский перевод 13.06.2005-05.10.2005 Fizick http://bag.hotmail.ru</kbd>
</p>
</body>
</html>