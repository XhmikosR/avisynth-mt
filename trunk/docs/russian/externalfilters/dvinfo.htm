<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ru">
<head>
  <meta content="text/html;charset=windows-1251"
 http-equiv="Content-Type">
  <title>DVInfo</title>
  <link rel="stylesheet" type="text/css" href="../../avisynth.css">
<!--
Automatically generated, don't change:
$Id: dvinfo.htm,v 1.3 2007/12/03 18:56:30 fizick Exp $ 
-->
</head>
<body>
<h1>DVInfo</h1>
<h2>Общая информация</h2>
<b>Автор:</b> WarpEnterprises<br>
<b>Версия:</b> &nbsp;<br>
<b>Загрузка: </b><a href="http://www.avisynth.org/warpenterprises/">http://www.avisynth.org/warpenterprises/</a><br>
<b>Категория:</b> Разнообразные плагины<br>
<b>Требования:</b> &nbsp;
<ul>
  <li>входной файл DV-AVI</li>
</ul>
<hr>
<h2>Описание</h2>
<p>DVInfo считывает код времени (Timecode) и другую информацию о дате
из DV-AVI файла.</p>
<h3>Синтаксис</h3>
<p><tt><code>DVInfo</code> </tt>(<var>clip, string "filename", string "output",
int "x", int "y", string "font", int "size", int "text_color", int "halo_color",
string "rec_format", string "tc_format", bool "show_error", float "threshold", int "autoframes"</var>)</p>
<p>DVInfo открывает файл DV-AVI (Тип-1 или Тип-2, функции открытия
openDML &gt; 4ГБ поддерживаются) и читает код времени (timecode) и
записанную в каждый считываемый кадр информацию о времени (timestamp of
the frame). Обратите внимание: функция НЕ загружает видео или звуковое
содержание AVI-файла, это необходимо сделать непосредственно до DVInfo
с помощью <code>AviSource</code>!</p>
<p>Код времени и служебная информация о записи затем впечатывается в
кадр как-будто вы используется функция субтитров <code>Subtitle()</code> и параметры
<var>x, y, font</var>(шрифт), <var>size</var> (размер), 
<var>text_color</var> (цвет шрифта) и <var>halo_color</var> (цвет гало-обрамления)
 подаются непосредственно в субтитры.</p>
<p>Переменные "времени исполнения" ("run-time"): "current_frame",
"tc_time", "rec_time" устанавливаются таким образом, что Вы можете
использовать их в выражениях для вывода 
<var>"output"</var> (это работает как со скрипт-клипом
(<code>ScriptClip</code>), загляните в документацию за подробностями).</p>
<p>Можно установить генерируемый формат информации о времени с помощью
параметров <var>rec_format</var> и
<var>tc_format</var>.</p>
<p>С параметром <var>"threshold"</var>&gt;0 включается вывод информации, если
разница данных о времени записи текущего и предыдущего кадра
оказывается больше значения порога <var>"threshold"</var> в секундах. По истечении
количества кадров <var>"autoframes"</var> вывод отключается. Таким образом вы
получаете информацию о записи только в моменты смены сцен.<br>
Внимание: используется последний <i>обработанный (processed) </i>кадр,
а не просто предыдущий при передвижениях
(seek) по клипу (работает только при линейном воспроизведении).<br>
Таким образом при <var>threshold</var>=0.5 и <var>autoframes</var>=2 Вы сможете выводить
данные каждую секунду длительностью в 2 кадра.</p>
<p>Лучше всего объяснить на примерах:</p>
<table border="1" width="75%">
  <tbody>
    <tr>
      <td>
      <pre>LoadPlugin("c:\myprojects\dvinfo\release\dvinfo.dll")
      
file = "c:\myprojects\type2.avi" # чтобы не вводить имя файла дважды

Avisource(file)          # открыть видео файл

DVInfo(file, "rec_time") # считать данные о времени и
                         # вывести их в формате по умолчанию в переменную "rec_time",
                         # выполнение этого выражения (содержащего единственную переменную)
                         # отображает результат, используя параметры Subtitle по умолчанию</pre>
      </td>
    </tr>
  </tbody>
</table>
<p>Можно пропустить даже <var>"rec_time"</var>, т.к. это тоже параметр по
умолчанию для вывода в <var>"output"</var>.</p>
<table border="1" width="75%">
  <tbody>
    <tr>
      <td>
      <pre>DVInfo(file)   # выполнит то же, что и ранее приведенная строка</pre>
      </td>
    </tr>
  </tbody>
</table>
<br>
<hr>
<p>Следующий скрипт не должен корректно работать (с более чем одним
файлом):</p>
<table border="1" width="75%">
  <tbody>
    <tr>
      <td>
      <pre>LoadPlugin("c:\myprojects\dvinfo\release\dvinfo.dll")

file1 = "c:\myprojects\type2a.avi"
file2 = "c:\myprojects\type2b.avi"

Avisource(file1)+Avisource(file2)  #до этого места все в порядке

DVInfo(file1, "rec_time")  # но здесь DVInfo пытается прочесть в file1 номера кадров файла file2!
DVInfo(file2, "rec_time")  # и наоборот</pre>
      </td>
    </tr>
  </tbody>
</table>
<p>Вместо этого следует написать:</p>
<table border="1" width="75%">
  <tbody>
    <tr>
      <td>
      <pre>LoadPlugin("c:\myprojects\dvinfo\release\dvinfo.dll")

file1 = "c:\myprojects\type2a.avi"
file2 = "c:\myprojects\type2b.avi"

Avisource(file1).DVInfo(file1, "rec_time") + Avisource(file2).DVInfo(file2, "rec_time")
# теперь каждый вызов DVInfo считывает информацию из своего файла
</pre>
      </td>
    </tr>
  </tbody>
</table>
<p>И этот скрипт не должен корректно работать (с использованием <code>Trim</code>):</p>
<table border="1" width="75%">
  <tbody>
    <tr>
      <td>
      <pre>LoadPlugin("c:\myprojects\dvinfo\release\dvinfo.dll")
      
file1 = "c:\myprojects\type2a.avi"

Avisource(file1)
Trim(1000,2000)
DVInfo(file1, "rec_time")  # здесь DVInfo берет неверные номера кадров</pre>
      </td>
    </tr>
  </tbody>
</table>
<p>Вместо этого следует написать:</p>
<table border="1" width="75%">
  <tbody>
    <tr>
      <td>
      <pre>LoadPlugin("c:\myprojects\dvinfo\release\dvinfo.dll")
      
file1 = "c:\myprojects\type2a.avi"
file2 = "c:\myprojects\type2b.avi"

Avisource(file1).DVInfo(file1, "rec_time") + Avisource(file2).DVInfo(file2, "rec_time")
# теперь каждый вызов DVInfo считывает информацию из своего файла</pre>
      </td>
    </tr>
  </tbody>
</table>
<br>
<hr>
<h3>Другие примеры</h3>
<p>Вы можете изменить формат отображения времени (подробнее смотрите
документацию AviSynth &gt;&gt; Синтаксис (Syntax)
&gt;&gt; функция <code>Time</code>):</p>
<table border="1" width="75%">
  <tbody>
    <tr>
      <td>
      <pre>DVInfo(file, "rec_time", rec_format="%H:%M:%S") # выводит только время без даты

или

DVInfo(file, "rec_time", rec_format="%A, %H:%M:%S") # выводит полное название дня недели и время</pre>
      </td>
    </tr>
  </tbody>
</table>
<p>Параметр tc_time содержит позицию на ленте в часах, минутах,
секундах и кадрах.<br>
Я вывожу счетчик кадров в позицию, предназначенную для номера дня в
месяце, это несколько грубо, но Вы можете легко отобразить номер кадра
используя форматный символ "month":<br>
</p>
<table border="1" width="75%">
  <tbody>
    <tr>
      <td>
      <pre>DVInfo(file, "tc_time", tc_format="%d") # вывести только номер кадра</pre>
      </td>
    </tr>
  </tbody>
</table>
<p>Можно использовать и более сложные выражения в поле <var>"output"</var>:</p>
<table border="1" width="75%">
  <tbody>
    <tr>
      <td>
      <pre>DVInfo(file, "tc_time + chr(32) + rec_time + chr(32) + current_frame")
# отобразить код времени (timecode), время записи и номер кадра, разделенные пробелами</pre>
      </td>
    </tr>
  </tbody>
</table>
<p>Возможно добавить и другой текст:</p>
<table border="1" width="75%">
  <tbody>
    <tr>
      <td>
      <pre>text = "Здравствуй, Мир!"
DVInfo(file, "text + rec_time") # отобразить "Здравствуй, Мир!" и время записи.</pre>
      </td>
    </tr>
  </tbody>
</table>
<p>Необходимо делать это именно таким образом (присвоив значение
переменной <var>text</var>), так как нельзя использовать кавычки в этом месте
строки.</p>
<p>Как Вы заметили, можно использовать любую переменную скрипта в поле
<var>"output"</var>.</p>
<p>А в этом примере выводится данные о записи только в момент смены
сцен:</p>
<table border="1" width="75%">
  <tbody>
    <tr>
      <td>
      <pre>DVInfo(file, threshold=1)   # данные будут отображаться в течении 25 кадров при разнице &gt;1 секунды</pre>
      </td>
    </tr>
  </tbody>
</table>
<h3>Трактовка ошибок</h3>
<p>Если запрашиваемый номер кадра больше общего количества кадров
(такого не должно случаться) сообщение об ошибке выдается в переменные
rec_time и tc_time.<br>
Если не найден код времени или информация о записи, или произошла иная
ошибка чтения, сообщение об ошибке выдается в переменные rec_time и
tc_time.</p>
<p>Эти сообщения об ошибке подавляются при использовании <var>show_error</var> =
false.</p>
<p>Если AVI-файл не удается открыть, или результат в <var>"output"</var> не
строка, AviSynth выдаст ошибку.</p>
<hr>
<h3>Технические заметки</h3>
<p>Для чтения AVI-данных я использовал код из продукта kino от Arne
Schirmacher.<br>
Я изменил его, чтобы он работал с openDML - файлами &gt; 2ГБ,
скомпилировал под Win32
и убрал все не относящееся к функциям чтения.</p>
<p>Ernst Pech&eacute;, 2003-12-16</p>
<p><kbd>$English Date: 2004/08/13 21:57:25 $<br>
Русский перевод 12.06.2005 Turyst04 <a
 href="mailto:Turyst04@nextmail.ru">Turyst04@nextmail.ru</a></kbd></p>
</body>
</html>
