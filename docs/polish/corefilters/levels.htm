<HTML>
<head>
<meta http-equiv="Content-type" content="text/html; charset=iso-8859-2" />   
<TITLE>Levels</TITLE>

<link rel="stylesheet" type="text/css" href="style2.css">

</HEAD>
<h3>[yv12][yuy2][rgb32][rgb24]</h3>
<h1>Levels</h1>
<h2><b>Levels</b>(clip, int input_low, float gamma, int input_high, int output_low, int output_high, bool "coring")</h2>

<hr>

<p><i><b>input_low </b></i> i<i><b> input_high</b></i>: okre¶laj± jakie warto¶ci pikseli w materiale
wej¶ciowym traktowane s± jako czysta czerñ i czysta biel
<br>
<br>
<i><b>output_low </b></i> i<i><b> output_high</b></i>: okre¶laj± warto¶ci w materiale wyj¶ciowym odpowiadaj±cy czerni i bieli<br>
<br>
<i><b>gamma</b></i>: kontroluje w konwersji stopieñ nieliniowy
<br>
<br>
<i><b>coring</b></i>: mo¿liwe warto¶ci to &#8221;true&#8221; (&#8221;prawda&#8221;) &#8211; przycina kana³y lumy do [16,235] &#8211; i &#8221;false&#8221; (&#8221;fa³sz&#8221;) &#8211; opcja wy³±czona</p>

<hr>

<p>Filtr <b> Levels</b> modyfikuje jasno¶æ, kontrast i gammê. Argumenty <b><i> input_low</i></b> i
<b><i> input_high</i></b> okre¶laj± jakie warto¶ci pikseli w materiale wej¶ciowym traktowane s± jako czysta czerñ i czysta biel; argumenty
<b><i> output_low</i></b> i <b><i> output_high</i></b> okre¶laj± warto¶ci w materiale wyj¶ciowym odpowiadaj±cy
czerni i bieli; argument <b><i> gamma</i></b> kontroluje stopieñ nieliniowy w konwersji. ¦ci¶le mówi±c,
funkcja konwersji wygl±da nastêpuj±co:<br><br>

<i>output = [(input - input_low) / (input_high - input_low)]<sup><span lang="EN-US" style="font-size:8.0pt;mso-bidi-font-size:7.5pt;font-family:Verdana;color:black;
mso-ansi-language:EN-US">1/gamma</span></sup> (output_high -
output_low) + output_low</i><br>
<br>

<p>Levels jest jednym z tych filtrów, dla których mi³± spraw± by³oby mieæ nak³adkê GUI. Przedtem nie
mo¿na by³o zaproponowaæ nak³adki GUI (przynajmniej nie w obecnej formie AviSynth), zdecydowano przynajmniej zrobiæ ten filtr kompatybilny z VirtualDub, kiedy klip ma przestrzeñ kolorów RGB. W tym przypadku
mo¿na bez problemu spisaæ liczby z okna dialogowego Levels w VirtualDub i wpisaæ je jako argumenty do filtra Levels w AviSynth, a otrzymane rezultaty bêd± identyczne.&nbsp;<br>
Kiedy obróbka danych nastêpuje w przestrzeni YUY2, Levels w VirtualDub podaje tylko poprawn±
warto¶æ gammy dla lumy (jasno¶æ), a dla chromy (kolor) - nie. Korekcja gammy jest rzeczywi¶cie wykorzystywana w RGB i nie
wiadomo jak zrobiæ to odpowiednio dla YUY2. Jednak¿e, je¶li gamma = 1.0, filtr powinien dawaæ ten sam efekt w RGB i YUY2.</p>
<hr>
<p><b>Przyk³ady:</b>
  <table border="0" cellpadding="0" cellspacing="0" width="100%" height="94">
    <tr>
      <td width="163" valign="top" align="left"><p>Levels(0, 1, 255, 0, 255)</p></td>
            <td width="11" valign="top" align="left">
        <p>#</p>
      <td width="661" valign="top" align="left"><p>
        obraz pozostaje nietkniêty</p></td>
    </tr>
    <tr>
      <td width="163" valign="top" align="left"><p></p></td>
      <td width="11" valign="top" align="left">
        </td>
      <td width="661" valign="top" align="left">
        </td>
    </tr>
  <tr>
      <td width="163" valign="top" align="left"><p>Levels(0, 1.3, 255,0, 255)</p></td>
            <td width="11" valign="top" align="left">
        <p>#</p>
      <td width="661" valign="top" align="left"><p>
        poprawia gammê w wy¶wietlanym obrazie w otoczeniu jasno¶ci</p></td>
    </tr>
    <tr>
      <td width="163" valign="top" align="left"><p></p></td>
      <td width="11" valign="top" align="left">
        </td>
      <td width="661" valign="top" align="left">
        </td>
<tr>
      <td width="163" valign="top" align="left"><p>Levels(0, 1, 255, 255, 0)</p></td>
            <td width="11" valign="top" align="left">
        <p>#</p>
      <td width="661" valign="top" align="left"><p>
        odwraca kolory obrazu (robi negatyw)</p></td>
    </tr>
  </table>
<hr>

<h3>translated by Slim</h3>
</HTML>