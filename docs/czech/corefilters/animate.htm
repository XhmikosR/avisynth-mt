<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">
   <title>Animate/ApplyRange Avisynth Filter</title>

   <link rel="stylesheet" type="text/css" href="../../avisynth.css">
</head>
<body>
<h2>
<a NAME="Animate"></a>Animate
/ ApplyRange
</h2>
<p><code>Animate </code>(<var>clip, int start_frame, int end_frame, string filtername,
start_args, end_args</var>)<br>
  <code>ApplyRange </code>(<var>clip, int start_frame, int end_frame, string
filtername, args</var>)
<p><code>Animate</code> 
je&nbsp;meta-filtr, který vyvolá&nbsp;filtr uvedený v jeho parametru <var>filter</var> s plynule se mìnícími&nbsp;argumenty. Pro snímky do&nbsp; <var>start_frame</var> vèetnì, se filtr&nbsp;
<var>filtername</var>
     vyvolává s&nbsp;argumenty&nbsp; <var>start_args</var>. Pro 
snímky&nbsp;od <var>end_frame</var>, 
se filtr&nbsp; <var>filtername</var>      vyvolá&nbsp;s argumenty <var>end_args</var>. Pro snímky mezi <EM><FONT 
color=#660033>start_args</FONT></EM> a&nbsp;<EM><FONT 
color=#660033>end_frame</FONT></EM>
   se pro hladký pøechod hodnoty argumentù lineárnì interpolují.
<p><code>ApplyRange</code>    je speciální&nbsp;typ <code>Animate</code>&nbsp;kde <var>start_args</var>
= <var>end_args</var>, a objevil se ve verzi <em>v2.51</em>        
 . Mù¾e být pou¾it, kdy¾ chcete&nbsp;aplikovat urèitý&nbsp;filtr na urèitém rozsahu snímkù klipu - 
 na rozdíl od Animate, jsou snímky mimo rozsah <var>start_frame</var> a¾ <var>end_frame</var> 
po prùchodu nedotèeny</span>.
Dal¹í
rozdíl&nbsp;od <code>Animate</code> je, ¾e argumenty&nbsp; <var>args</var> nemohou obsahovat klip. Poèínaje
verzí <em>v2.53</em> podporuje&nbsp;audio, a <var>start_frame</var>  mù¾e být rovno
<var>end_frame</var>
(tzn., ¾e se zpracuje jen jeden snímek).
<p>V pøípadech kdy velký poèet rozsahù&nbsp;potøebuje&nbsp;podobnéé&nbsp;zpracování za&nbsp;pou¾ití mnoha volání
<code>ApplyRange</code> &nbsp;mù¾e zpùsobit problémy resourcù. Alternativou
mù¾e být pou¾ití <A href="conditionalreader.htm#ApplyRange">ConditionalReader</A>&nbsp;spolu 
 s&nbsp;
<A href="conditionalfilter.htm">ConditionalFilter</A>    pro
výbìr mezi nezpracovanou a zpracovanou verzí zdroje.
<p>Jméno pou¾itého filtru musí být v uvozovkách (tzn. je to 
øetìzec -&nbsp;string), a dva vlo¾ené seznamy argumentù nejsou ohranièeny 
závorkami.&nbsp;Øetìzce (strings) a videoklipy nemohou být interpolovány, a 
proto musí mít&nbsp;stejné hodnoty v obou seznamech&nbsp;argumentù. Dùle¾ité 
upozornìní: Jestli pou¾íváte klip jako první argument <FONT face=Courier 
color=#660033>Animate</FONT>              
          
           
       , pak stejný klip nesmí být zahrnut
v seznamu pøedávaných argumentù <var>start_args</var> a <var> end_args</var> 
 .&nbsp;Pøíklad:
<pre>v = Version()
Animate(v,0,149,&quot;Crop&quot;, v,0,0,64,32, v,316,0,64,32)</pre>
<p>      vyvolá chybu, proto¾e první snímek&nbsp;je stejný jako neplatná syntaxe
Crop(v, v, 0, 0, 64, 32).
<p>            
Filtr bude nesprávnì zpracovávat zmìnu&nbsp;zvukové stopy, proto jej nedoporuèuji&nbsp;pou¾ívat s&nbsp;filtry, které mìní zvukovou
stopu. A nepokou¹ejte se zadávat poèáteèní a koncové parametry vedoucí k rùzným
rozmìrùm snímku.
<p>Argument &nbsp; <var>filtername</var>&nbsp;dokonce mù¾e být samotným filtrem&nbsp; <code>Animate</code> , jestli chcete
radìji kvadratickou interpolaci ne¾ lineární.
<p><b>Nìkolik pøíkladù:</b><p>

<pre># Vytvoøit protoèení (scrolling) videa s verzí &quot;Version&quot;:
ver = Version() 
Animate(0,149,&quot;Crop&quot;, ver,0,0,64,32, ver,316,0,64,32) 

# nebo, co¾ je stejné:
ver = Version()
Animate(ver,0,149,&quot;Crop&quot;, 0,0,64,32, 316,0,64,32)

# Stmívání (Fade) do bíla
AviSource(&quot;E:\pdwork\DO-Heaven.AVI&quot;)
Animate(100,200,&quot;Levels&quot;, 0,1,255,0,255, 0,1,255,255,255)

# Postupné zvìt¹ení støední èásti videa s rozli¹ením 320x240 , 
#poèínaje od zvìt¹ení 1:1 ve snímku 100 a konèe s mìøítkem 4:1 
#ve snímku 200:
clip = AviSource(&quot;E:\pdwork\DO-Heaven.avi&quot;)
Animate(100,200,&quot;BicubicResize&quot;, clip,320,240,0,0,320,240, clip,320,240,120,90,80,60)
# Animate(clip, 100,200,&quot;BicubicResize&quot;, 320,240,0,0,320,240, 320,240,120,90,80,60) # also works

# Zvìt¹it text &quot;Hello, World!&quot; ze støedu videa velikosti 320x240:
BlankClip(width=320, height=240)
Animate(0,48,&quot;Subtitle&quot;, &quot;Hello, World!&quot;,160,120,0,99999,&quot;Arial&quot;,0,
&nbsp; \&nbsp; &quot;Hello, World!&quot;,25,130,0,99999,&quot;Arial&quot;,48)</pre>

<p><b>Zvìt¹ení klipu c2 se souèasným pøekrytím na c1:</b></p>
<pre>Function myfunc(clip c1, clip c2, int x, int y, int w, int h)
{
  w = w - w%2
  h = h - h%2
  my_c2 = BicubicResize(c2,w,h)
  Overlay(c1,my_c2,x,y)
}

c1 = AviSource(&quot;D:\Captures\jewel.avi&quot;) # c1 je vìt¹í ne¾ c2
c2 = AviSource(&quot;D:\Captures\atomic.avi&quot;).BicubicResize(320,240)
Animate(0,1000,&quot;myfunc&quot;,c1,c2,10,10,10,10,c1,c2,300,300,360,288) 
# nebo 
# Animate(c1,0,1000,&quot;myfunc&quot;, c2,10,10,10,10, c2,300,300,360,288) 

# ale následující zápis nebude pracovat, proto¾e byly pøedány tøi klipy funkci 
# myfunc (c1, c1 and c2), namísto dvou:
# Animate(c1,0,1000,&quot;myfunc&quot;,c1,c2,10,10,10,10,c1,c2,300,300,360,288)</pre>

<p><b>Malý obraz zvìt¹it na èerný klip dokud se nezamìní hlavním klipem (sám sebou):</b></p>
<pre>function res(clip clip, clip &quot;LClip&quot;, int &quot;width&quot;, int &quot;height&quot;, int &quot;centerX&quot;, int &quot;centerY&quot;) {  LClip = BicubicResize(LClip, width, height)
  Overlay(clip, LClip, centerX-LClip.width/2, centerY-LClip.height/2)
}

function resize(clip clip, clip &quot;LClip&quot;,
  \ int &quot;end_frame&quot;, int &quot;end_width&quot;, int &quot;end_height&quot;, int &quot;centerX&quot;, int &quot;centerY&quot;) {
  return Animate(start_frame, end_frame, &quot;res&quot;, clip, LClip, start_width, start_height, centerX, centerY,

\   clip, LClip, end_width,   end_height,   centerX, centerY)
}

clip = AviSource(&quot;D:\captures\jewel.avi&quot;)
clip = clip.BicubicResize(640,480)
clip = clip.ConvertToRGB()
black = BlankClip(clip)

resize(black, clip, 0, 120, 120*clip.height/clip.width, 500, 640, 480, clip.width/2, clip.height/2)</pre>
<p><b>Pøíklady vyu¾ívající ApplyRange:</b></p>
<pre>ver = Version() 
return ver.ApplyRange(0,149,&quot;Crop&quot;, 158,0,64,32)
# dává chybu, proto¾e nemù¾e mít rùzné velikosti snímkù v klipu</pre>
<pre>Version()
ApplyRange(100,149,&quot;Blur&quot;, 1.0)</pre>
<pre>AviSource(&quot;E:\pdwork\DO-Heaven.avi&quot;).BicubicResize(320,240) 
ApplyRange(0,48,&quot;Subtitle&quot;,&quot;Hello World!&quot;,25,130,0,99999,&quot;Arial&quot;,48) 

#nebo, co¾ je stejné:
clip = AviSource(&quot;E:\pdwork\DO-Heaven.avi&quot;).BicubicResize(320,240)
ApplyRange(clip,0,48,&quot;Subtitle&quot;,&quot;Hello World!&quot;,25,130,0,99999,&quot;Arial&quot;,48)

# ale proto¾e rozsah snímkù lze poskytnout do Subtitle samotného, je to stejné jako: 
AviSource(&quot;E:\pdwork\DO-Heaven.avi&quot;).BicubicResize(320,240)
Subtitle(&quot;Hello, World!&quot;,25,130,0,48,&quot;Arial&quot;,48)</pre>
<p><kbd>$English Date: 2008/12/06 17:50:04 $</kbd></p>
<P><KBD>Èeský pøeklad:12.2.2009</KBD></P>
<form><input TYPE="button" VALUE="Zpìt"
 onClick="history.go(-1)"></form>
</body>
</html>









