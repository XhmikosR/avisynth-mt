<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN">
<!-- DGDecode User Manual 2.0.5 -->
<!-- Created by Cyberia (04/28/05) -->
<html>
<head>
	<title>DGDecode</title>
	<meta HTTP-EQUIV="Content-Type" LANG="en-us" CONTENT="text/html; charset=iso-8859-2">

	<style type="text/css">
		body	      { font-family: verdana, arial, helvetica, sans-serif;
				font-size: 12px;
				color: #0000000;
				background-color: #C8D4D8;
				text-align: left;
				line-height: 150%;
				width: 98.5%;
				padding: 0px;
				margin: 8px 0px 8px 8px; }

		ul	      { padding: 0px;
				margin: 0px 62px 0px 60px; }

		ol	      { padding: 0px;
				margin: 0px 62px 0px 60px; }

		table	      { width: 99%; }

		h1	      { font-size: 26px;
				background-color: #90A0C0;
				text-align: center;
				line-height: 150%;
				margin: 12px 0px 12px 0px; }

		h2	      { font-size: 22px;
				background-color: #90A0C0;
				line-height: 150%;
				padding-left: 8px;
				margin: 12px 0px 12px 0px;
				border-style: solid;
				border-color: #003366;
				border-width: 2px; }

		h3	      { font-size: 18px;
				line-height: 150%;
				padding-left: 8px;
				margin: 12px 0px 12px 50px;
				border-style: solid;
				border-color: #003366;
				border-width: 1px; }

		pre	      { font-family: "Courier New", Courier, monospace;
				font-size: 15px;
				background-color: #D0D0C0;
				padding: 12px;
				margin: 10px 0px 10px 0px;
				border-style: solid;
				border-color: #908030;
				border-width: 1px; }

		code	      { font-family: "Courier New", Courier, monospace;
				font-size: 15px;
				color: #002266;
				letter-spacing: 1px; }

		a	      { font-size: 12px;
				color: #404A58;
				text-decoration: none; }

		a:visited     { color: #0000ff; }

		a:hover	      { background-color: #EEE; }

		#right	      { text-align: right; }

		#justify      { text-align: justify; }

		#quote	      { font-style: italic;
				margin: 0px 50px 0px 50px; }

		#precode      { color: #002266;
				background-color: #B6C0CA;
				padding: 0px 0px 0px 12px;
				margin: 0px;
				border-style: none; }

		#section      { color: #002266;
				width: 300px;
				line-height: 75%;
				text-align: right; }
	</style>
</head>

<body>
<a name="Top"></a>

<br>
<h1><hr>DGDecode<hr></h1>


<h2>Pøehled</h2>
<b>autoøi:</b>  MarcFD, Nic, trbarry, Sh0dan, Graft and others
<br><b>verze:</b>   1.5.5<br>
<b>kategorie:</b> MPEG Dekodér
<br><b>stáhnout:</b>   <a href="http://neuron2.net/dgmpgdec/dgmpgdec.html"> http://neuron2.net/dgmpgdec/dgmpgdec.html</a>
<br><b>po¾adavky:<br>
licence:</b>  GPL
<hr>
<h2>Obsah</h2>

<ul>
	<br>
	<br>
	<A href="#WhatIsDGDecode">Co 
  je&nbsp;DGDecode?</A><br>
	<br>

	<A href="#Syntax">Syntaxe filtru</A><br>
	&nbsp;&nbsp;&nbsp;<A href="#MPEG2Source">MPEG2Source()</A><br>
	&nbsp;&nbsp;&nbsp;<A href="#LumaYV12">LumaYV12()</A><br>
	&nbsp;&nbsp;&nbsp;<A href="#BlindPP">BlindPP()</A><br>
	&nbsp;&nbsp;&nbsp;<A href="#DeBlock">Deblock()</A><br>
	<br>

	<A href="#Examples">Pøíklady pou¾ití</A><br>
	&nbsp;&nbsp;&nbsp;<A href="#LoadPlugin_Example">LoadPlugin()&nbsp;- pøíklad</A><br>
	&nbsp;&nbsp;&nbsp;<A href="#MPEG2Source_Examples">MPEG2Source()&nbsp;- pøíklady</A><br>
	&nbsp;&nbsp;&nbsp;<A href="#LumaYV12_Examples">LumaYV12()&nbsp;- pøíklady</A><br>
	&nbsp;&nbsp;&nbsp;<A href="#BlindPP_Examples">BlindPP()&nbsp;- pøíklady</A><br>
	&nbsp;&nbsp;&nbsp;<A href="#DeBlock_Examples">Deblock() - pøíklady</A><br>
	<br>

	<A href="#AppendixA">Pøíloha&nbsp;A: BlindPP() - poznámky</A><br>
	<A href="#AppendixB">Pøíloha B: iDCT Algoritmus - poznámky</A><br>
	<A href="#AppendixC">Pøíloha&nbsp;C: SIMD Instrukce</A><br>
	<br>

	<A href="#Credits">Podìkování</A><br>
	<A href="#License">Licence</A><br>
	<br>
</ul>

<a name="WhatIsDGDecode"></a><br>
<h2>
	<table><tr>
		<td width="75%"> Co je&nbsp;DGDecode?
		<td id="right"><A href="#Top">Obsah</A></td></tr>
	</table>
</h2>

<ul id="justify">
	<p>DGDecode,&nbsp;èást balíku&nbsp;<a href="dgmpgdec_quickstart.htm">DGMPGDec</a>,&nbsp;je to MPEG-1/2 dekodér (plug-in)&nbsp;navr¾ený pro&nbsp; <a href="http://www.avisynth.org/"
	 target="blank">AviSynth</a> 
  v2.5 nebo vy¹¹í. Je schopen dekódovat&nbsp;jakýkoliv MPEG-1&nbsp;nebo MPEG-2 
  stream&nbsp;èitelný v&nbsp;DGIndexu.&nbsp;Dal¹í funkce zahrnují: YV12, I420, a YUY2 výstupní barevné
	prostøedí (a RGB24&nbsp;pøes <a href="dgvfapi.htm">DGVfapi</a>), optimalizovaná iDCT, post-process deblocking (odstraòování kostkatìní) a
        deringing (odstraòování zvonìní, chvìní hran), jasové (luminosity)
	filtrování, a více!</p>
	<p>DGDecode je zalo¾en na MPEG2Dec3 v1.10,&nbsp;který sám je zalo¾en na&nbsp;MPEG2Dec2&nbsp;ze SourceForge projektu "save-oe".</p>
	<p><u>Dùle¾itá poznámka:</u>&nbsp;Tento filtr&nbsp;byl pøejmenován na&nbsp;DGDecode&nbsp;aby se zabránilo zmatkùm v
	názvech&nbsp;a&nbsp;pro jasnìj¹í&nbsp;spojení s&nbsp;neuron2 verzí&nbsp;programu DVD2AVI&nbsp;zvanou DGIndex. Neuron2 chce vynalo¾it velké úsilí pro&nbsp;uznání&nbsp;pùvodu DGDecode,&nbsp;jak je popsáno ní¾e od&nbsp;MarcFD! Ano, neuron2 pokraèoval ve vývoji
	a&nbsp;udìlal nìkteré opravy, ale&nbsp;stojí na ramenou&nbsp;obrù uvedených ní¾e&nbsp;v kapitole podìkování.</p>
	<p>Poslední verze programu a zdrojového kódu&nbsp;DGMPGDec&nbsp;mù¾ete stáhnout na <a href="http://neuron2.net/dgmpgdec/dgmpgdec.html"
	 target="blank" 
 >http://neuron2.net/dgmpgdec/dgmpgdec.html</a></p>
	<p>Toto je svobodný (free) software&nbsp;¹íøený pod 
  podmínkami GNU GPL v2 license.&nbsp;Musíte&nbsp;souhlasit s podmínkami této licence ne¾ zaènete&nbsp;tento
	plug-in&nbsp;nebo jeho&nbsp;zdrojový kód pou¾ívat. Pro podrobnosti se podívejte prosím do kapitoly <A href="#License">Licence</A>   .</p>
</ul>

<a name="Syntax"></a><br>
<h2>
	<table><tr>
		<td width="75%">Syntaxe filtru
		<td id="right"><A href="#Top">Obsah</A></td></tr>
	</table>
</h2>

	<a name="MPEG2Source"></a><br>
	<h3>
		<table><tr>
			<td width="75%">MPEG2Source()
			<td id="right"><A href="#Top">Obsah</A></td></tr>
		</table>
	</h3>

	<ul><ul>
		<code>
			MPEG2Source(str "d2v", int "idct", int "cpu", bool "iPP", int "moderate_h", int "moderate_v", str "cpu2",
			int "upConv", bool "iCC", bool "i420", int "info", bool "showQ", bool "fastMC")&nbsp;
		</code>
		<br><br>

		Aèkoliv DGDecode mù¾e nyní dekódovat jak MPEG-1&nbsp;tak i&nbsp;MPEG-2,&nbsp;je tato funkce stále nazývána MPEG2Source()<br>
		pro kompatibilitu&nbsp;s existujícími skripty. Mù¾ete ji pou¾ít&nbsp;jak pro&nbsp;MPEG-1&nbsp;tak pro&nbsp;MPEG-2 stream.
                <br><br>
		<b>d2v</b>: "[CESTA\]project.d2v"<br>
		<ul>
			<i>DGIndex Projektový soubor.<br>
			vy¾adovaný&nbsp;parametr!<br>
			<u>Poznámka&nbsp;1:</u>&nbsp;CESTA mù¾e být 
      ignorována&nbsp;pokud "projekt.d2v" je ve stejné&nbsp;slo¾ce jako vá¹&nbsp;
			<a href="http://www.avisynth.org/" target="blank">AviSynth</a> (*.avs)	skript.</i><br>
		</ul>
		<br>

		<b>idct</b>: 0&nbsp;a¾ 7  (výchozí: 0)<br>
		<ul>
			<i>iDCT Algoritmus.<br>
			Pro více infomací&nbsp;o iDCTs se podívejte do <A href="#AppendixB">Pøílohy B</A>.<br>
			Podívejte se 
			prosím do <A href="#AppendixC">Pøílohy C</A> na podporované CPU.</i><br>
			- 0:&nbsp;Pou¾ije hodnotu zadanou DGIndexem<br>
			- 1: 32-bit MMX<br>
			- 2: 32-bit SSEMMX<br>
			- 3: 32-bit SSE2MMX<br>
			- 4: 64-bit Floating Point<br>
			- 5: 64-bit IEEE-1180 Reference<br>
			- 6: 32-bit SSEMMX (Skal)<br>
			- 7: 32-bit Simple MMX (XviD)<br>
		</ul>
		<br>

		<b>cpu</b>: 0&nbsp;a¾ 6  (výchozí: 0)<br>
		<ul>
			<i>Mo¾nosti rychlého 
      nastavení zpracování (Post-Processing).<br>
			(Y=luma - 
      jas, C=chroma -barevnost, H=horizontální, V=vertikální)</i><br>
			- 0: VYPNUTÉ ZPRACOVÁNÍ (POST-PROCESSING)<br>
			- 1: DEBLOCK_Y_H<br>
			- 2: DEBLOCK_Y_H, DEBLOCK_Y_V<br>
			- 3: DEBLOCK_Y_H, DEBLOCK_Y_V, DEBLOCK_C_H<br>
			- 4: DEBLOCK_Y_H, DEBLOCK_Y_V, DEBLOCK_C_H, DEBLOCK_C_V<br>
			- 5: DEBLOCK_Y_H, DEBLOCK_Y_V, DEBLOCK_C_H, DEBLOCK_C_V, DERING_Y<br>
			- 6: DEBLOCK_Y_H, DEBLOCK_Y_V, DEBLOCK_C_H, DEBLOCK_C_V, DERING_Y, DERING_C<br>
		</ul>
		<br>

		<b>iPP</b>: true/false  (VÝCHOZÍ: auto)<br>
		<ul>
			<i>Re¾im zpracování.<br>
			DGDecode 
			automaticky pou¾ívá PROGRESSIVE_FRAME&nbsp;flag 
      (znak progresivního snímku)&nbsp;pro pøepínání&nbsp;mezi zpracováním
			zalo¾eném na polích/snímcích&nbsp; <u> podle skladby snímkù</u>.<br>
			Mìli 
			by jste zadat parametr iPP <u>pouze</u> 
      pokud chcete&nbsp;vynutit, aby&nbsp;DGDecode&nbsp;pou¾il&nbsp;konkrétní
			re¾im zpracování.</i><br>
			 - [nezadané]: následuje PROGRESSIVE_FRAME flag<br>
			- 
			true:&nbsp;vynutí na  polích zalo¾ené (prokládané) zpracování<br>
			- false:&nbsp;vynutí na&nbsp;snímcích zalo¾ené&nbsp;(progresivní) zpracování<br>
		</ul>
		<br>


		<b>moderate_h</b>,<b> moderate_v</b>: 
    0&nbsp;a¾ 255  (výchozí: moderate_h=20, moderate_v=40)<br>
		<ul>
			<i>Citlivost detekce blokù.<br>
			(moderate_h=horizontal, moderate_v=vertical)<br>
			Men¹í hodnoty jsou&nbsp;silnìj¹í, pou¾ívejte s opatrností.</i><br>
		</ul>
		<br>

		<b>cpu2</b>: (výchozí: "")<br>
		<ul>
			<i>U¾ivatelské mo¾nosti zpracování.<br>
			   Zadává&nbsp;¹estiznakový øetìzec "x" a "o" v souladu se seznamem ní¾e. (case-insensitive)<br>
			   Ka¾dý&nbsp;"x"&nbsp;zapíná odpovídající funkci zpracování.<br>
			   Ka¾dý&nbsp;"o"&nbsp;vypíná odpovídající funkci zpracování.</i><br>
				znak&nbsp;1: 
      luma 
				horizontal deblocking (horizontální 
      odstranìní kostkatìní jasu - deblokování)<br>
				znak 2: luma vertical deblocking (vertikální odstranìní kostkatìní jasu)<br>
				znak 3: chroma horizontal 
      deblocking (horizontální odstranìní kostkatìní barevnosti)<br>
				znak 4: chroma vertical deblocking (vitikální odstranìní kostkatìní barevnosti)<br>
				znak 5: luma 
      deringing 
				(odstranìní zvonìní hran jasu)<br>
				znak 6: 
      chroma deringing (odstranìní zvonìní hran barevnosti)<br>
			<br>
			Napøíklad, pro zapnutí zpracování jen barevnosti&nbsp;(chroma) pou¾ijte:<br>

			<pre>MPEG2Source("project.d2v", cpu2="ooxxox")</pre>
			<br>
		</ul>

		<b>upConv</b>: 0&nbsp;a¾ 2  (výchozí: 0)<br>
		<ul>
			<i>Nadvzorkuje z 4:2:0&nbsp;do YUY2 (4:2:2)&nbsp;nebo RGB24.</i><br>
			- 0: neprovede nadvzorkování<br>
			- 1: Nadvzorkuje do YUY2 (ignorováno&nbsp;pokud&nbsp;je vstup u¾&nbsp;4:2:2)<br>
			- 2:  Nadvzorkuje do RGB24<br>
		</ul>
		<br>

		<b>iCC</b>: true/false  (výchozí: auto)<br>
		<ul>
			<i>Re¾im nadvzorkování.<br>
			DGDecode automaticky pou¾ívá PROGRESSIVE_FRAME flag 
      (znak progresivního snímku) pro pøepínání mezi&nbsp;nadvzorkováním 
      zalo¾eném na polích/snímcích&nbsp;<U>podle skladby snímkù</U>.<br>
			Mìli by 
			jste zadat&nbsp; <u>jen</u> 
      iCC parametr&nbsp;pokud chcete vynutit, aby&nbsp;DGDecode pou¾il
			konkrétní&nbsp;re¾im nadvzorkování.</i><br>
			  - [nezadáné]:&nbsp;následuje PROGRESSIVE_FRAME flag<br>
			- 
      true:vynutí&nbsp;na  polích zalo¾ené (prokládané) nadvzorkování<br>
			- false: vynutí&nbsp;na snímcích zalo¾ené (progresivní) nadvzorkování<br>
		</ul>
		<br>

		<b>i420</b>: true/false  (výchozí: false)<br>
		<ul>
			<i>Pøedává&nbsp;I420 barevné prostøedí.<br>
			Mù¾e být vy¾adováno nìkterými&nbsp;legacy aplikacemi.<br>
			Ignorováno&nbsp;jestli¾e vstup není&nbsp;YV12 (4:2:0),&nbsp;nebo&nbsp;pøi nadvorkování s <b>upConv</b>=1&nbsp;nebo 2.</i><br>
			- 
      true:&nbsp;Pøedává I420<br>
			- false:&nbsp;Pøedává YV12<br>
		</ul>
		<br>

		<b>info</b>: 0&nbsp;a¾ 3  (výchozí: 0)<br>
		<ul>
			<i>Ladící&nbsp;(Debug) Informace.</i><br>
			  - 0: Negeneruje ladící informaci<br>
			- 1: Ladící informace pøekrývání (Overlay) ve videu<br>
			- 2:&nbsp;Pøedává ladící&nbsp;informace&nbsp;pøes OutputDebugString()<br>
			- 3:&nbsp;Pøedává údaje (hints) ve videu (jak je&nbsp;definováno v utilities.cpp/utilities.h)<br>
		</ul>
		<br>

		<b>showQ</b>: true/false  (výchozí: false)<br>
		<ul>
			<i>Zobrazí kvantizery makroblokù.</i><br>
			- true:  Zobrazí kvantizery<br>
			  - false: Nezobrazí kvantizery<br>
		</ul>
		<br>

		<b>fastMC</b>: true/false  (výchozí: false)<br>
		<ul>
			<i>Vladova kompenzace rychlého pohybu.<br>
			Velmi malé urychlení, ale&nbsp;se sní¾enou pøesností.<br>
			Pro testovací úèely, a&nbsp;mù¾e být odstranìna v pøí¹tích verzích.<br>
			Vy¾aduje&nbsp;SSE&nbsp;nebo 3DNow!,&nbsp;podívejte se prosím do <A href="#AppendixC">Pøílohy C</A> na podporu CPU.</i><br>
		</ul>
		<br>

	</ul></ul>

	<a name="LumaYV12"></a><br>
	<h3>
		<table><tr>
			<td width="75%">LumaYV12()
			<td id="right"><A href="#Top">Obsah</A></td></tr>
		</table>
	</h3>

	<ul><ul>
		<code>
			LumaYV12(clip, integer "lumoff", float "lumgain")<br>
		</code>
		<br>
		<br>

		  Tato funkce nesouvisí s&nbsp; <i>Jasovým filtrem (Luminance Filter)</i> 
    DGIndexu.<br>
		 Transformace je: <code>Y =  (y * lumgain) + lumoff</code><br>
		<br>
		  LumaYV12() pøedává rozsah&nbsp;0-&gt;255 YUV , a&nbsp;ne CCIR-601 rozsah 16-&gt;235. Pou¾ijte
		místo nìj vestavìný filtr AviSynthu&nbsp; <a href="http://www.avisynth.org/ColorYUV" target="blank">ColorYUV()</a></I>, 
    jestli¾e potøebujete&nbsp;vynutit rozsah 16-&gt;235.&nbsp;Functionality&nbsp;LumaYV12() lze dosáhnout&nbsp;pou¾itím
		filtru AviviSyntu ColorYUV(),&nbsp;který má více mo¾ností,&nbsp;ale LumaYV12() je optimalizována pro&nbsp;rychlost&nbsp;
    pøi&nbsp;provádìní základních úprav
		jasu.
		<br>
		<br>
		<b>lumoff</b>: -255&nbsp;a¾ 255  (výchozí: 0)<br>
		<ul>
			<i>Posunutí jasnosti (svìtelnosti).<br>
			Upraví jas (luma)&nbsp;v¹ech pixelù&nbsp;o pevnou hodnotu.</i><br>
		</ul>
		<br>

		<b>lumgain</b>: 0.0&nbsp;a¾ 2.0  (výchozí: 1.0)<br>
		<ul>
			<i>Zesílení 
      (násobení)&nbsp;jasnosti.<br>
			Upraví jas (luma)&nbsp;v¹ech pixelù&nbsp;o proporcionální hodnotu.</i><br>
		</ul>
		<br>

	</ul></ul>

	<a name="BlindPP"></a><br>
	<h3>
		<table><tr>
			<td width="75%">BlindPP()
			<td id="right"><A href="#Top">Obsah</A></td></tr>
		</table>
	</h3>

	<ul><ul>
		<code>
			BlindPP(clip, int "quant", int "cpu", bool "iPP", int "moderate_h", int "moderate_v", str "cpu2")<br>
		</code>
		<br>
		<br>

		Deblokuje a/nebo&nbsp;odstraòuje zvonìní&nbsp;jakéhokoliv video zdroje.<br>
		Vy¾aduje YUY2&nbsp;nebo YV12 vstup.<br>
		Podívejte se 
    prosím&nbsp;do&nbsp; <A href="#AppendixA">Pøílohy A</A> na u¾ivatelské poznámky.<br>
		<br>

		<b>quant</b>: 0&nbsp;a¾ 31 (výchozí: 2) <br>
		<ul>
			<i>Emulovaný 
      (napodobený)&nbsp;kvantizer.<br>
			Urèuje&nbsp; <u>intenzitu</u>   procesu deblokování.</i><br>
		</ul>
		<br>

		<b>cpu</b>: 0&nbsp;a¾ 6 (default: 6)<br>
		<ul>
			<i>Stejná funkce jako v <A href="#MPEG2Source">MPEG2Source()</A>, ale s jinou výchozí hodnotou.</i><br>
		</ul>
		<br>

		<b>iPP</b>: true/false (výchozí: false)<br>
		<ul>
			<i>Stejná funkce jako v <A href="#MPEG2Source">MPEG2Source()</A>, ale s jinou výchozí hodnotou.<br>
			Automatický re¾im NENÍ dostupný.</i><br>
		</ul>
		<br>

		<b>moderate_h, moderate_v, cpu2</b>: (výchozí: moderate_h=20, moderate_v=40, cpu2="")<br>
		<ul>
			<i>Stejné funkce jako v&nbsp; <A href="#MPEG2Source">MPEG2Source()</A>, ale s jinými výchozími hodnotami.</i><br>
		</ul>
		<br>

	</ul></ul>

	<a name="Deblock"></a><br>
	<h3>
		<table><tr>
			<td width="75%">Deblock()
			<td id="right"><A href="#Top">Obsah</A></td></tr>
		</table>
	</h3>

	<ul><ul>
		<code>
		Deblock(clip, int "quant", int "aOffset", int "bOffset", bool "mmx", bool "isse")<br>
		</code>
		<br>
		<br>

		Manaùv H.264 Deblokovací filtr. (v0.9.5)<br>
		Vy¾aduje&nbsp;YV12 vstup.<br>
		 
    
		Oba&nbsp;(quant + aOffset) A (quant + bOffset) musí být &gt; =    16 jinak filtr nic neudìlá.<br>
		<br>

		<b>quant</b>: 0&nbsp;a¾ 51 (výchozí: 25) <br>
		<ul>
			<i>Emulovaný 
      (napodobený)&nbsp;kvantizer.<br>
			Urèuje&nbsp;<U>intenzitu</U>   procesu deblokování.</i><br>
		</ul>
		<br>

		<b>aOffset</b>: (výchozí: 0)<br>
		<ul>
			<i>Modifikátor k prahové hodnotì detektoru&nbsp;kostkatìní (blokù).<br>
			Jeho vy¹¹í nastavení znamená, ¾e bude deblokováno více hran.</i><br>
		</ul>
		<br>

		<b>bOffset</b>: (výchozí: 0)<br>
		<ul>
			<i>Modifikátor&nbsp;pro&nbsp;detekci blokù&nbsp;a&nbsp;pro intenzitu deblokování.<br>
			   Znovu,&nbsp;èím vy¹¹í,&nbsp;tím silnìj¹í.</i><br>
		</ul>
		<br>

		<b>mmx</b>: true/false (výchozí: true)<br>
		<ul>
			<i>Automaticky&nbsp;se vypne, kdy¾ ji&nbsp;CPU nepodporuje.</i><br>
			 -  true:&nbsp;Zapne MMX optimalizaci<br>
			 - false:&nbsp;Vypne MMX optimalizaci<br>
		</ul>
		<br>

		<b>isse</b>: true/false (výchozí: true)<br>
		<ul>
			<i>Automaticky&nbsp;se vypne, kdy¾ ji&nbsp;CPU nepodporuje.<br>
			Podívejte se 
      prosím&nbsp;do&nbsp; <A href="#AppendixC">Pøílohy C</A> na podporované CPU.</i><br>
			 -  true:&nbsp;Zapne SSE optimalizaci<br>
			 - false:&nbsp;Vypne SSE optimalizaci<br>
		</ul>
		<br>

	</ul></ul>

<a name="Examples"></a><br>
<h2>
	<table><tr>
		<td width="75%">U¾ivatelské pøíklady
		<td id="right"><A href="#Top">  Obsah</A></td></tr>
	</table>
</h2>

	<a name="LoadPlugin_Example"></a><br>
	<h3>
		<table><tr>
			<td width="75%">Naètení pluginu do AviSynthu -&nbsp;LoadPlugin()
			<td id="right"><A href="#Top">  Obsah</A></td></tr>
		</table>
	</h3>

	<ul><ul>
		Funkce 
		AviSynthu <i><a href="http://www.avisynth.org/AviSynthPlugins" target="blank">LoadPlugin()</a></i> musí být&nbsp;volána pøed&nbsp;pou¾itím funkcí&nbsp;DGDecode.<br> Pro 
    splnìní této podmínky,&nbsp;pøidejte&nbsp;na zaèátek va¹eho&nbsp; AviSynth (*.avs) skriptu následující øádek:<br>
		<pre>LoadPlugin("[PATH\]DGDecode.dll")</pre>
		<u>Poznámka:</u> PATH (CESTA) mù¾e být 
    ignorována&nbsp;pokud DGDecode.dll&nbsp;je&nbsp;ve výchozí slo¾ce pluginù&nbsp; <a href="http://www.avisynth.org/" target="blank">AviSynthu</a>
		   &nbsp;,&nbsp;jinak musí být&nbsp;PATH zadána.<br>
		<br>
		<br>
	</ul></ul>

	<a name="MPEG2Source_Examples"></a><br>
	<h3>
		<table><tr>
			<td width="75%">MPEG2Source() - pøíklady
			<td id="right"><A href="#Top">  Obsah</A></td></tr>
		</table>
	</h3>

	<ul><ul>
		<A href="#MPEG2Source">MPEG2Source()</A>&nbsp;by mìl být pou¾ij jen s&nbsp;MPEG-1 a MPEG-2 video zdroji.<br>
		<br>

		   Prosté&nbsp;YV12 dekódování:<br>
		<pre>MPEG2Source("[PATH\]project.d2v")</pre>
		<u>Poznámka:</u> PATH&nbsp;mù¾e 
    být&nbsp;ignorována&nbsp;jestli¾e "project.d2v"&nbsp;je ve stejné slo¾ce jako vá¹&nbsp;
		<a href="http://www.avisynth.org/" target="blank">AviSynth</a> (*.avs) skript.<br>
		<br>

		 Provedení pouze deblokování:<br>
		<pre>MPEG2Source("project.d2v", cpu=4)</pre>
		<br>

		Provedení deblokování&nbsp;prokládaného zdroje&nbsp;se zvý¹enou vertikální citlivostí:<br>
		<pre>MPEG2Source("project.d2v", cpu=4, iPP=true, moderate_v=20)</pre>
		<br>

		Provedení pouze "deringing" (odstranìní zvonìní, chvìní hran):<br>
		<pre>MPEG2Source("project.d2v", cpu2="ooooxx")</pre>
		<br>

		Výbìr optimalizace 32-bit SSE2 iDCT a&nbsp;také výstup do I420 barevného prostøedí:<br>
		<pre>MPEG2Source("project.d2v", idct=5, i420=true)</pre>
		<br>

		   Pøevedení do YUY2&nbsp;zalo¾ené na <i>PROGRESSIVE_FRAME</i> znaku:<br>
		<pre>MPEG2Source("project.d2v", upConv=1)</pre>
		<br>

		  Zobrazení informací o videu na obrazovce:<br>
		<pre>MPEG2Source("project.d2v", info=1)</pre>
		<br>
		<br>
	</ul></ul>

	<a name="LumaYV12_Examples"></a><br>
	<h3>
		<table><tr>
			<td width="75%">LumaYV12()&nbsp;- pøíklady&nbsp;
			<td id="right"><A href="#Top">  Obsah</A></td></tr>
		</table>
	</h3>

	<ul><ul>
		Následující pøíklady&nbsp; <A href="#LumaYV12">LumaYV12()</A>    jsou samozøejmì zcela&nbsp;subjektivní.<br> 
		Upravte si je poble libosti.<br>
		<br>

		 Ztmavení jasu:<br>
		<pre>MPEG2Source("project.d2v")<br>LumaYV12(lumoff=-10, lumgain=0.9)</pre>
		<br>

		 Zesvìtlení jasu:<br>
		<pre>MPEG2Source("project.d2v")<br>LumaYV12(lumoff=10, lumgain=1.1)</pre>
		<br>
		<br>
	</ul></ul>

	<a name="BlindPP_Examples"></a><br>
	<h3>
		<table><tr>
			<td width="75%">BlindPP()&nbsp;- pøíklady&nbsp;
			<td id="right"><A href="#Top">  Obsah</A></td></tr>
		</table>
	</h3>

	<ul><ul>
		<A href="#BlindPP">BlindPP()</A> by nemìlo být pou¾ito, kdy¾ je video otevøeno pomocí funkce<br>
                MPEG2Source() ,&nbsp;proto¾e její
		mo¾nosti zpracování&nbsp;budou pracovat lépe. Typicky je&nbsp;BlindPP() pou¾íváno&nbsp;pøi otvírání videa&nbsp;pomocí filtrù&nbsp;AviSynthu
		<i><a href="http://www.avisynth.org/AviSource" target="blank">AviSource()</a></i>&nbsp;nebo
		<i><a href="http://www.avisynth.org/DirectShowSource" target="blank">DirectShowSource()</a></i>.<br>
		<br>

		Provedení výchozího deblokování a odstranìní&nbsp;zvonìní hran (deringing):<br>
		<pre>AVISource("my_video.avi")<br>BlindPP()</pre>
		<br>

		 Provedení pouze deblokování:<br>
		<pre>AVISource("my_video.avi")<br>BlindPP(cpu=4)</pre>
		<br>

		   Provedení deblokování na prokládaném zdroji&nbsp;se zvý¹enou horizontální citlivostí:<br>
		<pre>AVISource("my_video.avi")<br>BlindPP(cpu=4, iPP=true, moderate_h=10)</pre>
		<br>

		Provedení silnìj¹ího deblokování a odstranìní zvonìní hran:<br>
		<pre>DirectShowSource("my_video.mpg")<br>BlindPP(quant=12)</pre>
		<br>

		Provedení pouze odstranìní zvonìní hran:<br>
		<pre>DirectShowSource("my_video.mpg")<br>BlindPP(cpu2="ooooxx")</pre>
		<br>
		<br>
	</ul></ul>

	<a name="Deblock_Examples"></a><br>
	<h3>
		<table><tr>
			<td width="75%">Deblock()&nbsp;- pøíklady&nbsp;
			<td id="right"><A href="#Top">  Obsah</A></td></tr>
		</table>
	</h3>

	<ul><ul>
		<A href="#Deblock">Deblock()</A>&nbsp;mù¾e být pou¾ito s&nbsp;MPEG-2 video&nbsp;zdrojem z&nbsp; <A href="#MPEG2Source" >MPEG2Source()</A>&nbsp;pokud 
    to&nbsp;upøednostòujete&nbsp;pøed&nbsp;zpracováním pomocí&nbsp;MPEG2Source(),&nbsp;nebo
to mù¾e být pou¾ito s jinými zdroji&nbsp;videa. V
		druhém pøípadì&nbsp;to obyèejnì znamená&nbsp;otvírání videa pomocí filtrù&nbsp;AviSynthu
		<i><a href="http://www.avisynth.org/AviSource" target="blank">AviSource()</a></i>&nbsp;nebo
		<i><a href="http://www.avisynth.org/DirectShowSource" target="blank">DirectShowSource()</a></i>.<br>
		<br>

		Provedení výchozího deblokování:<br>
		<pre>MPEG2Source("my_video.d2v")<br>Deblock()</pre>
		<br>

		nebo:<br>
		<pre>AVISource("my_video.avi")<br>Deblock()</pre>
		<br>

		 Provedení silného deblokování se zvý¹enou citlivostí:<br>
		<pre>DirectShowSource("my_video.mpg")<br>Deblock(quant=32, aOffset=16, bOffset=24)</pre>
		<br>
	</ul></ul>

<a name="AppendixA"></a><br>
<h2>
	<table><tr>
		<td width="75%">Pøíloha&nbsp;A: BlindPP()&nbsp;- Poznámky&nbsp;
		<td id="right"><A href="#Top">  Obsah</A></td></tr>
	</table>
</h2>

<ul id="justify">
	<p>Bloky (kostkatìní 
  obrazu)&nbsp;jsou dùsledkem 8x8-pixel DCT&nbsp;pou¾ívané MPEG 
  enkodéry.&nbsp;Tak¾e za prvé,&nbsp;musíte&nbsp;si být jisti, ¾e&nbsp;bloky 
  které chcete deblokovat (vyhladit,
	tzn. zbavit se kostkatìní) jsou stále zarovnány na&nbsp;8-pixelových hranicích. To znamená,&nbsp;neprovádìt ¾ádné oøezání obrazu (cropping) a&nbsp;¾ádné zmìny velikosti (resizing) pøed&nbsp;pou¾itím
	<A href="#BlindPP">BlindPP()</A>.&nbsp;Pokud je vá¹ zdroj kódován prokládanì,&nbsp;nastavte <b>iPP</b>=true,&nbsp;pokud
	je progresivní&nbsp;pak je výchozí nastavení správné (<b>iPP</b>=false).</p>

	<p> Parametry jsou: <b>quant</b>, <b>cpu2</b>, <b>moderate_h</b>, a <b>moderate_v</b>.</p>

	<p><b>quant</b>  &nbsp;udává celkovou <u>sílu</u>   se kterou je deblokovací proces provádìn.</p>

	<p>Nastavte&nbsp; <b>cpu2</b>&nbsp;na 
  "xxxxoo"&nbsp;pro horizontální a vertikální deblokování&nbsp;jasu
	a barevnosti,&nbsp;na "xooxoo"&nbsp;pro horizontální&nbsp;jasové a vertikální barevnostní&nbsp;deblokování, atd.&nbsp;Jak budete chtít.</p>

	<p><b>moderate_h</b> a <b>moderate_v</b>&nbsp;urèuje&nbsp;horizontální a vertikální citlivosti,&nbsp;to je,&nbsp; <u>kde</u> 
	      provést deblokování, a&nbsp;kde ho neprovádìt. Ovládají citlivost&nbsp;rozpoznávání zda jsou bloky pøítomny.</p>

	<p><b>quant</b>=2, <b>moderate_h</b>=35-45, <b>moderate_v</b>=45-55 vám dá&nbsp;velmi jemné zmìkèení&nbsp;pouze na silných,&nbsp;jasnì viditelných&nbsp;blocích. To zachová velmi mnoho detailù&nbsp;a ostrosti,&nbsp;ale&nbsp;také nechá nedotkuté
	slabé&nbsp;bloky, a&nbsp;ne zcela znièí ty silnìj¹í.</p>

	<p><b>quant</b>=16, <b>moderate_h</b>=15-20, <b>moderate_v</b>=       
	20-30 provede spí¹e silné deblokování&nbsp;na témìø&nbsp;v¹em co by snad mohlo být blokem,&nbsp;ale také vyhladí hodnì detailù a ostrosti.</p>

	<p>Zbytek je u¾ na vás,&nbsp;va¹em vkusu a va¹em zdrojovém&nbsp;materiálu.</p>

	<p>Jiný pøíklad...&nbsp;proto¾e&nbsp;výborný od¹umovaè&nbsp; <i>PixieDust()</i>&nbsp;mù¾e sám obèas
	zpùsobit&nbsp;kostkatìní&nbsp;v pohyblivých oblastech,&nbsp;dìlám obèas toto:</p>

	<pre>PixieDust(2).BlindPP(quant=8, cpu2="xxxxoo", moderate_h=45, moderate_v=55)</pre>

	<p>Toto odstraní slu¹né mno¾ství nejvíce viditelného kostkatìní,&nbsp;pokud a&nbsp;pouze jestli¾e&nbsp; <i>PixieDust()</i>    &nbsp;nìjaké
	vytváøí. Na zbývajících 99.8%&nbsp;kde <i>PixieDust()</i>&nbsp;neudìlal 
  bloky,&nbsp;toto neprovede témìø nic, tak jak to právì potøebujete.</p>
</ul>

<a name="AppendixB"></a><br>
<h2>
	<table><tr>
		<td width="75%">Pøíloha&nbsp;B: iDCT Algoritmus - Poznámky&nbsp;
		<td id="right"><A href="#Top">  Obsah</A></td></tr>
	</table>
</h2>

<ul id="justify">
	<p>       Textový soubor&nbsp;FlasKMPEG&nbsp;obsahuje výborný technický popis&nbsp;iDCT. Cituji:</p>

	<ul id="quote">
		<p>"Video informace uvnitø MPEG&nbsp;souborù&nbsp;jsou 
    uchovány&nbsp;spí¹e ve frekvenèním pásmu ne¾ v prostorovém 
    (spatial)&nbsp;pásmu (obrazy, které vidíme).&nbsp;Tak se stávají informace kompaktní a&nbsp;kompaktnost mù¾e
		být vyu¾ita ke kompresi (sní¾ení)&nbsp;mno¾ství informací, které musíte poslat&nbsp;pøes pøenosový kanál. MPEG pou¾ívá DCT
		(Discrete Cosine Transform - Diskrétní kosinová transformace)&nbsp;pro pøeklad prostorové&nbsp;informace&nbsp;na frekvenèní&nbsp;informaci. Pro navrácení&nbsp;prostorové informace&nbsp;z MPEG streamu&nbsp;musíte pou¾ít&nbsp;iDCT,&nbsp;to je,&nbsp;Inverse Discrete
		Cosine Transform (Inverzní diskrétní kosinová transformace),&nbsp;která obrátí&nbsp;DCT&nbsp;, jen¾ byla pou¾ita&nbsp;pøi kódování."</p>

		<p>"Aèkoli MPEG&nbsp;je&nbsp;témìø deterministický 
    (výstup daného MPEG streamu by mìl
		být identický&nbsp;ve v¹ech dekodérech),&nbsp;standard&nbsp;má urèitou volnosti&nbsp;pøi volbì&nbsp;pou¾itého iDCT.&nbsp;Tak,&nbsp;dekodér&nbsp;mù¾e být&nbsp;snadnìji implementován&nbsp;v závislosti&nbsp;na hardwaru&nbsp;pod ním. To co&nbsp;standard&nbsp;od dekodéru vy¾aduje, je aby iDCT&nbsp;splòovala
		IEEE-1180 specifikace,&nbsp;neboli prostými slovy, aby&nbsp;chyba z&nbsp;iDCT&nbsp;nepøekraèovala&nbsp;tyto specifikace uvedené v IEEE-1180."</p>
	</ul>

	<p>Kterou&nbsp;iDCT&nbsp;by jste mìli pou¾ít&nbsp;závisí primárnì&nbsp;na&nbsp;CPU&nbsp;a&nbsp;v men¹í míøe na pøesnosti iDCT kterou si pøejete. 
  Vìt¹ina lidí nebude schopna øíci&nbsp;rozdíl v kvalitì mezi&nbsp;tìmito
	algoritmy, ale&nbsp;lze ho snadno pozorovat&nbsp;kombinováním filtrù&nbsp;AviSynthu&nbsp; <i><a href="http://www.avisynth.org/Subtract" target="blank">Subtract()</a></i>
	a <i><a href="http://www.avisynth.org/Levels" target="blank">Levels()</a></i>       .&nbsp;V¹echny
	dostupné mo¾nosti splòjí IEEE-1180,&nbsp;kromì <b>SSE/MMX (Skal)</b>.</p>

	<p>Stupeò kvality: <b>IEEE-1180 Reference</b> &gt;  <b>64-bit Floating Point</b> &gt;  <b>Simple MMX (XviD)</b> &gt;&nbsp;Ostatní iDCTs.</p>

	<p>Stupeò rychlosti: <b>SSE2/MMX</b> a <b>SSE/MMX (Skal)</b> jsou obvykle nejrychlej¹í.&nbsp; <b>IEEE-1180 Reference</b>  je
	prostì nejpomalej¹í.</p>
</ul>

<a name="AppendixC"></a><br>
<h2>
	<table><tr>
		<td width="75%"> Pøíloha&nbsp;C: SIMD Instrukce
		<td id="right"><A href="#Top">  Obsah</A></td></tr>
	</table>
</h2>

<ul id="justify">
	<p>SIMD&nbsp;je zkratka pro&nbsp; <i>Single Instruction, Multiple Data (jedna instrukce, více dat)</i>. Je to termín, který odkazuje na sadu operací pro efektivní manipulaci s velkým
	mno¾stvím dat paralelnì.&nbsp;Je to&nbsp;obzvlá¹» produktivní pro&nbsp;aplikace,&nbsp;ve kterých&nbsp;jsou zpracovávány video&nbsp;nebo audio soubory. Co obvykle vy¾adovalo øadu instrukcí&nbsp;lze nyní&nbsp;vykonat v jedné
	instrukci.</p>

	<p>Existuje sedm rùzných sad SIMD instrukcí, které&nbsp;jsou k dispozici&nbsp;pro procesory Intel a AMD, ale ne
	ka¾dý procesor podporuje v¹echny tyto moderní instrukèní sady. To je dùvod, proè mnoho funkcí DGDecode nabízí mo¾nosti pro
	urèení, která sada optimalizací má  být pou¾ita. Ní¾e uvedená tabulka uvádí SIMD instrukce podporované DGDecode, a po¾adované procesory
	pro jejich vyu¾ití.</p>
</ul>
<br>
<ul>
	<ul>
		<table border="1" cellspacing="2" cellpadding="10">
		<caption><i>Tabulka 1: SIMD Instrukce&nbsp;podporované v&nbsp;DGDecode</i></caption>
			<tr>
				<th>
				<th>MMX
				<th>3DNow!
				<th>SSE
				<th>SSE2
			<tr>
				<th> Vy¾adované&nbsp;Intel CPU
				<td>V¹echny&nbsp;Intel CPU
				<td> Nepodporované v&nbsp;Intel CPU
				<td>Pentium 3, Pentium 4
				<td>Pentium 4
			<tr>
				<th> Vy¾adované&nbsp;AMD CPU
				<td>V¹echny&nbsp;AMD CPU
				<td>V¹echny&nbsp;AMD CPU
				<td>Athlon XP, Athlon 64
				<td>Athlon 64</td> </tr> 
		</table>
	</ul>
</ul>
<br>

<a name="Credits"></a><br>
<h2>
	<table><tr>
		<td width="75%">Podìkování
		<td id="right"><A href="#Top">  Obsah</A></td></tr>
	</table>
</h2>

<ul>
	<br>
	Abecední poøadí:<br><br>
	"ARDA",&nbsp;za filtr&nbsp;LumaYV12()<br>
	  Mathias Born, autor&nbsp;pùvodního MPEG2Dec<br>
	"Cyberia",&nbsp;za&nbsp;Pøílohy B a C, a modernizaci u¾ivatelského manuálu<br>
	"Didée",&nbsp;za&nbsp;Pøílohu A:&nbsp;Poznámky k pou¾ití&nbsp;BlindPP()<br>
	"fccHandler", MPEG dekódování opravy/vylep¹ení,&nbsp;dobré rady<br>
	Donald Graft ("neuron2"), oprava vypou¹tìní snímkù,&nbsp;pøesné indexování, podpora PVA, a dal¹í<br>
	  Peter Gubanov, autor MMX/SSEMMX iDCT<br>
	  Chia-chen Kuo ("jackei"), autor&nbsp;DVD2AVI<br>
	"Manao",&nbsp;za jeho filtr&nbsp;Deblock()<br>
	"MarcFD", YV12 podpora a dal¹í<br>
	"Nic", zpracování (post-processing) a dal¹í<br>
	   Miha Peternel, autor&nbsp;Floating Point a Reference iDCT<br>
	   Dmitry Rozhdestvensky, autor&nbsp;SSE2 iDCT<br>
	"sh0dan", optimalizace kódu<br>
	"Skal",&nbsp;za jeho&nbsp;SSEMMX iDCT<br>
	 "trbarry", transport parsing, a&nbsp;optimalizace kódu<br>
	"tritical", nadvzorkování (upsampling), pøekrytí informacemi, zdokonalení VFAPI, a&nbsp;oprava mno¾ství chyb<br>
</ul>
<br>

<a name="License"></a><br>
<h2>
	<table><tr>
		<td width="75%">Licence
		<td id="right"><A href="#Top">  Obsah</A></td></tr>
	</table>
</h2>

<ul><br>
Tento program je ¹íøen za podmínek GNU Public
License.&nbsp;Na podrobnosti se podívejte prosím do souboru&nbsp;COPYING.TXT&nbsp;zahrnutého do tohoto distribuèního balíku.
</ul>
<br>

<hr>
<br>
Copyright (C) 2004-2006 Donald A. Graft, V¹echna práva vyhrazena.<br>
<p><kbd>Èeský pøeklad:12.6.2009</kbd>
</body>
</html>


















