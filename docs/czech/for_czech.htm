<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">
  <title>For Czech users</title>
  <link rel="stylesheet" type="text/css" href="../avisynth.css">

</head>
<body>
<h2>
Úvod pro èeské u¾ivatele
<a name="for_czech"></a>   </h2>


<h3>Obsah</h3>
<p>
<A href="#translate">1. O pøekladu</A><br>
<A href="#begin">2. Jak zaèít?</A><br>
<A href="#examples">3. Pøíklady</A><br>
<A href="#example_1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Pøíklad 1: Zpracování kvalitnì nahraného (zachyceného filmu) z TV</A><br>
<A href="#example_2">   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Pøíklad 2: Zpracování&nbsp;mírnì za¹umìlého&nbsp;nahraného filmu z TV</A><br>
<A href="#example_3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Pøíklad 3: Zpracování&nbsp;více za¹umìlého&nbsp;nahraného filmu z TV vèetnì odstranìní prokládání</A><br>
<A href="#example_4">  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Pøíklad 4: Zpracování&nbsp;filmu nahraného&nbsp;z TV do více souborù</A><br>
<A href="#example_5">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Pøíklad 5: Silné od¹umìní pomocí RemoveDirt</A><br>
<A href="#example_6">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Pøíklad 6: Zpracování DVD a DVB videa</A><br>
<A href="#deinterlace">4. Odstraòování prokládání</A><br>
<A href="#example_7">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Pøíklad 7: Odstranìní prokládání u videí s posunutými poli pomocí filtru Telecide</A><br>
<A href="#example_8">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Pøíklad 8: Odstranìní prokládání u videí s posunutými poli pomocí vnitøních funkcí Avisynthu</A><br>
<A href="#other">5. Jiné úpravy videa</A><br>
<A href="#whats_up">6. Co dál se skriptem?</A><br>
<A href="#compression">7. Krátké odboèení ke kompresi</A><br>
<A href="#glossary">8. Malý slovník pojmù</A><br>
<A href="#links">9. Odkazy</A><br>
<A href="#license">10. Licence</A><br>
<A href="#summary">11. Závìrem</A><br>
</p>


<h3><a name="translate"></a>O pøekladu</h3>

<p>AviSynth je jeden 
z nejlep¹ích programù pro zpracování videa (a také audia), ale ponìkud 
jiný&nbsp;ne¾ vìt¹ina ostatních programù. Nemá GUI tzn. ¾e nemá ¾ádná dialogová okna, 
na plo¹e&nbsp;se po instalaci neobjeví ikona&nbsp;a nejde ho proto 
spustit a ovládat&nbsp;pomocí intuice, jako jiné programy. Proto je u nìj velmi dùle¾itá 
a nezbytná dokumentace, která se nainstaluje spolu s vlastním 
programem a je pøístupná v menu&nbsp;Start/Programy/AviSynth 2.5. Tato dokumentace obsahuje 
úplný pøehled v¹ech funkcí a jejich parametrù, 
vèetnì&nbsp;mnoha pøíkladù.&nbsp;Je dost rozsáhlá a pro snadné&nbsp;pou¾ívání programu je 
potøeba, aby jí u¾ivatel&nbsp;rozumìl. Proto vznikl tento pøeklad.&nbsp;Nemusí
být
v¾dy úplnì pøesný, ale je tu hlavnì proto,
aby&nbsp;pøiblí¾il
AviSynth èeským u¾ivatelùm, kteøí neumí anglicky.</p>
<P>Do èe¹tiny je z dokumentace pøelo¾eno&nbsp;prakticky v¹e co se týká AviSynthu 
samotného, tzn. vèetnì vnitøních filtrù. Pøeklad dokumentace externích filtrù je 
u¾ nad mé síly.&nbsp;Pøelo¾ená dokumentace bude také ke sta¾ení na stránkách <A 
href="http://www.cestiny.cz">www.cestiny.cz</A> . Jestli¾e se vám bude chtít 
mù¾ete tam poslat svùj pøeklad va¹eho oblíbeného externího filtru.</P>

<h3><a name="begin"></a>Jak zaèít?</h3>

<p> To základní se dozvíte v kapitole <A href="syntax.htm"><cite>Zaèínáme</cite></A> , 
kde je popsáno jak vlastnì AviSynth pracuje.&nbsp;Zde 
shrnu jen to, ¾e staèí vytvoøit skript t.j. krátký textový soubor&nbsp;(napøíklad 
v poznámkovém bloku, PSPadu, a jiných textových editorech kromì 
Wordu) a pøepsat u nìj pøíponu na&nbsp; .avs . Je-li skript správnì 
napsaný a vy máte nainstalované potøebné kodeky, pùjde otevøít ve VirtualDubu a 
videopøehrávaèích stejnì, &nbsp;jako by to bylo video.
</p>

<p>Skript se skládá z funkcí rùzných filtrù, napøíklad pro naètení videa, støih videa, oøíznutí&nbsp;obrazu videa, 
zvìt¹ení/zmen¹ení, od¹umìní,... . Filtry mohou být vnitøní -&nbsp;ty 
jsou souèástí programu a nebo externí (pluginy - pøipojované moduly), které je potøeba stáhnout z 
internetu a vlo¾it jejich dll soubory do slo¾ky plugins v nainstalované slo¾ce AviSynthu. Pøi 
pou¾ívání filtrù je potøeba øídit se dokumentací daného filtru. Návod 
na pou¾ití AviSynthu s praktickými ukázkami najdete taky&nbsp;na tìchto stránkách&nbsp; <A 
href="http://www.jech.webz.cz/avisynth.php">http://www.jech.webz.cz/avisynth.php</A>&nbsp;.
</p>

<p>AviSynth&nbsp;nabízí obrovské mo¾nosti ve zpracování 
videa a to i znaènì pokroèilé. Upravit lze témìø v¹e. Skripty mohou být také 
velmi slo¾ité a dlouhé.&nbsp;Ale bì¾ný u¾ivatel, který si chce sestøíhat, 
trochu vylep¹it a zkomprimovat nahrané video z TV karty a nebo který si chce&nbsp;pøevést 
film z DVD do MPEG4 pomocí DivX nebo Xvid kodekù, bude pou¾ívat vìt¹inou jen 
pár funkcí a jeho skripty budou velmi jednoduché. Budou doslova na pár øádkù. 
Jakmile je pak skript hotový, dá se pou¾ít pro zpracování dal¹ích videoklipù, staèí v
nìm jen upravit hodnoty pro&nbsp;konkrétní&nbsp;video nebo audio.
</p>
<P>Abych vám usnadnil zaèátek, uvedu zde pár pøíkladù skriptù 
které jsem pou¾il pro zpracování svých videí. V drtivé vìt¹inì si vystaèím s nìkolika vnitøními filtry (AviSource, Mpeg2Source, Trim, ++, 
Crop, nìkterýResize, AudioDub, DelayAudio, Tweak, SeparateFields, Weave) a nìkolika externími pluginy 
(KernelDeint, TemporalCleaner, MipSmooth, DGDecode, RemoveDirt, FluxSmooth, Decomb). Externí pluginy, 
které zde uvádím nechci protì¾ovat,&nbsp;jsou zde jen proto, ¾e 
jsem si na nì zvykl a pou¾ívám je 
pøi zpracování svých videí. Tady na nich uká¾u jak se dá odstranit prokládání z TV 
poøadù (KernelDeint nebo jeho rychlejší varianta LeakKernelDeint, Decomb), nebo jak s jejich pomocí sní¾it ¹um 
(TemporalCleaner, MipSmooth, RemoveDirt, FluxSmooth). Po seznámení 
s AviSynthem si i vy najdete své oblíbené pluginy podle va¹ich po¾adavkù 
na kvalitu a rychlost zpracování. <A href="externalplugins.htm"><cite>Zde</cite></A>&nbsp;je seznam externích pluginù (filtrù) rozdìlený 
podle oblasti pou¾ití&nbsp;a <A href="ext_filters_warp.htm"><cite>zde</cite></A> je (úplnìj¹í) abecední seznam externích pluginù. 
Oba obsahují&nbsp;struèné popisy pou¾ití jednotlivých filtrù.&nbsp; Dal¹í seznam externích 
filtrù rozdìlený podle funkce najdete na stránkách 
<A href="http://avisynth.org/mediawiki/External_filters"><cite>AviSynthu</cite></A>. Externích pluginù k AviSynthu je v pøilo¾eném abecedním seznamu témìø 300!</P>
<P>Je¹tì dodám, ¾e AviSynth zpracovává video jak ve formátech RGB (RGB24, RGB32) tak 
i ve formátech YUV (YUY2, YV12). Díky tomu a také proto, ¾e jeho kód je vysoce 
optimalizovaný se jedná o jeden z nejkvalitnìj¹ích a nejrychlej¹ích programù svého 
druhu.</P>

<h3><a name="examples"></a>Pøíklady zpracování videa</h3>

<p>Zde uká¾u v nìkolika pøíkladech skripty, které jsem pou¾il ke 
zpracování svých videí. Zaènu od jednodu¹¹ích. Pokud budete chtít pou¾ít stejný 
skript staèí ho zde jen vybrat, zkopírovat do schránky, vlo¾it do poznámkového bloku 
a upravit cestu se jménem videa podle va¹eho konkrétního. Kromì
vnitøních filtrù ve skriptech pou¾ívám také nìkolik externích filtrù. Jsou to&nbsp;KernelDeint (mù¾ete pou¾ít jeho optimalizovanou a tedy rychlej¹í verzi LeakKernelDeint), 
TemporalCleaner, MipSmooth, DGDecode, Telecide, RemoveDirt. Aby jste je mohli pou¾ít&nbsp;musíte si je&nbsp;stáhnout a vlo¾it do slo¾ky plugins v nainstalované slo¾ce AviSynth. 
Je¹tì dodám, ¾e rozli¹ení zdrojových souborù
bylo 768x576 (720x576).</p>

<h4><a name="example_1"></a>Pøíklad 1: Zpracování 
kvalitnì nahraného (zachyceného) filmu z TV</h4>
<P>Vytvoøil jsem tento skript: <b>Prelet nad kukaccim hnizdem.avs</b></P>

<pre>
Avisource ("d:\Filmy\Prelet nad kukaccim hnizdem_MJPG.avi")
Trim (5128,197550)
Crop(10,2,-18,-4)
TemporalCleaner()
LanczosResize(720,540)
</pre>

<p>Je¹tì jednou a s rozborem pou¾itých filtrù.</p>

<pre>
Avisource ("d:\Filmy\Prelet nad kukaccim hnizdem_MJPG.avi")  # Pomocí AviSource naètu nahrané video. 
                                                             # V uvozovkách se uvede celá cesta a název souboru videa. 

Trim (5128,197550)                                           # Proto¾e jsem mìl nahrávání naèasované, 
                                                             # mám ve videu konec pøedchozího a zaèátek 
                                                             # následujícího poøadu. Pomocí filtru Trim 
                                                             # vyberu (vystøihnu) jen potøebnou èást snímkù. 
                                                             # K urèení míst støihu je nejlep¹í VirtualDub,
                                                             # který zobrazuje èísla zobrazovaných snímkù. 

Crop(10,2,-18,-4)                                            # Filtr Crop oøízne okraje snímku o zadaný poèet øádkù 
                                                             # nebo sloupcù pixelù v tomto poøadí: levý, horní, 
                                                             # pravý, spodní (pravý a spodní jsou záporné).
                                                             # K urèení velikosti oøíznutí je opìt nejlep¹í
                                                             # VirtualDub s jeho filtrem "null transform". 
                                                             
TemporalCleaner()                                            # TemporalCleaner provede èasové (dynamické) od¹umìní obrazu. 
                                                             # Pou¾ívám ho prakticky v¾dy, proto¾e trochu usnadní kompresi, 
                                                             # a nerozmazává detaily, není toti¾ pøíli¹ silný. Jiný odstraòovaè 
                                                             # ¹umu u¾ nepou¾iju, proto¾e video je nahrané kvalitnì. 
                                                             # To, ¾e za názvem následují prázdné závorky znamená, ¾e se 
                                                             # pou¾ije výchozí nastavení filtru. Podobnì je to také u ostatních filtrù. 
                                                             # Pokud budete zesilovat intenzitu, pozor na rozmazání pohybu (duchy)! 
                                                             # Místo TemporalCleaneru mù¾ete zkusit napø. plugin FluxSmooth nebo TTempSmooth. 
                                                             
LanczosResize(720,540)                                       # LanczosRezize upravuje velikosti snímku. Zde pou¾ívám klasický pomìr 
                                                             # stran 4:3 (neboli 1,33). Zde pou¾itý pomìr tomu pøesnì odpovídá. Èasto 
                                                             # se také pro rozmìry (zvlá¹» pro kompresi do MPEG 4) pou¾ívají násobky 8, 
                                                             # pak by byly rozmìry takovéto :  720,544. Bylo to proto, ¾e je takové
                                                             # vy¾adovali kodeky. U Xvidu jsem ale s 540 problém nemìl.
                                                             # Kromì LanczosResize existují je¹tì dal¹í metody zmìny velikosti snímku
                                                             # a to BicubicResize a BilinearResize. Lanczos je nejostøej¹í a je nejlep¹í
                                                             # pro zvìt¹ení obrazu. Bilinear zase vyhlazuje a je vhodný pro výraznìj¹í
                                                             # zmen¹ování. Bicubic je nìkde mezi.
</pre>

<h4><a name="example_2"></a>Pøíklad 2: Zpracování&nbsp;mírnì za¹umìlého&nbsp;nahraného filmu z TV</h4>
<P>Vytvoøil jsem tento skript: <b>Leon.avs</b></P>

<pre>
Avisource ("d:\Filmy\Leon_MJPG.avi")
Trim (3892,41332)++Trim(50109,89300)++Trim(100458,138170)++Trim(149282,191020)
Crop (12,94,-12,-90)
TemporalCleaner()
MipSmooth (preset= "movieHQ")
LanczosResize (720,368)
</pre>

<p>Je¹tì jednou a s rozborem pou¾itých filtrù.</p>

<pre>
Avisource ("d:\Filmy\Leon_MJPG.avi")                         # Pomocí AviSource naètu nahrané video. 

Trim (3892,41332)++Trim(50109,89300)\                        # Funkcí Trim opìt vyberu ty èásti, které chci. 
++Trim(100458,138170)++Trim(149282,191020)                   # Funkcí ++ spojím jednotlivé èásti vystøíhaného videa. 
                                                             # Tolik støihù je zde kvùli tøem reklamám v prùbìhu filmu. 
                                                             # Obrácené lomítko na konci øádku znamená, ¾e pøíkaz  
                                                             # nekonèí, ale pokraèuje na dal¹ím øádku. 

Crop(12,94,-12,-90)                                          # Pomocí Crop oøíznu obraz. 
                                                             
TemporalCleaner()                                            # Provádím èasové (dynamické) od¹umìní obrazu. 

MipSmooth (preset= "movieHQ")                                # Provádím také prostorové (statické) od¹umìní obrazu,
                                                             # které je úèinnìj¹í ne¾ èasové, ale rozmazává detaily.
                                                             # pøednastavení "movieHQ" pøedstavuje ale pomìrnì citlivé od¹umìní
                                                             # bez velkého rozmazání.
                                                             # MipSmooth pou¾ije i mírné èasové vyhlazení, tak¾e by jste mohli 
                                                             # TemporalCleaner ze skriptu odstranit, nebo parametry èasového
                                                             # (temporal) nastavení u MipSmooth nastavit na nulu. Ze zku¹enosti ale
                                                             # vím, ¾e se nic hrozného nestane, kdy¾ zùstanou oba ve funkci.
                                                             # Místo MipSmooth mù¾ete zkusit pou¾ít napø. plugin VagueDenoiser.
                                                             
LanczosResize(720,368)                                       # Pomocí LanczosRezize upravím rozmìr snímku.
</pre>

<h4><a name="example_3"></a>Pøíklad 3: Zpracování&nbsp;více za¹umìlého&nbsp;nahraného filmu z TV vèetnì odstranìní prokládání</h4>
<P>V tomto pøípadì jsem pomocí KernelDeint odstraòoval prokládání, ne v¹ak z celého videa, ale jen z jeho úvodní èásti, proto¾e ve zbytku videa se prokládání u¾ neobjevovalo.</P>
<P>Vytvoøil jsem tento skript: <b>Okno do dvora.avs</b></P>

<pre>
Avisource ("d:\Filmy\Okno do dvora_MJPG.avi")

video_1 = Trim (270,3249)
video_1_deint = Kerneldeint(video_1, order=1)

video_2 = Trim (3250,52545)++Trim (54857,108519)++Trim (111070,166222) 

Okno_do_dvora = video_1_deint++video_2

Crop(Okno_do_dvora,10,2,-14,-10)
TemporalCleaner(ythresh=6,cthresh=12)
MipSmooth(preset="LQ")
LanczosResize (720,540)
</pre>

<p>Je¹tì jednou a s rozborem pou¾itých filtrù.</p>

<pre>
Avisource ("d:\Filmy\Okno do dvora_MJPG.avi")                # Pomocí AviSource naètu nahrané video.

video_1 = Trim (270,3249)                                    # Vytvoøím promìnnou video_1. Je to úvodní èást videa, ve 
                                                             # které se vyskytuje prokládání.
                                                             
video_1_deint = Kerneldeint(video_1, order=1)                # Vytváøím dal¹í promìnnou, která obsahuje video_1 
                                                             # s odstranìným prokládáním pomocí filtru  KernelDeint. 
                                                             # U KernelDeint musí být zadán parametr order (poøadí polí), 
                                                             # které je pro nás (systém PAL) rovno  1.

video_2= Trim (3250,52545)++Trim (54857,108519)\             # Vytvoøím dal¹í promìnnou, která obsahuje zbytek videa (bez artefaktù prokládání). 
++Trim (111070,166222) 

Okno_do_dvora = video_1_deint++ video_2                      # A teï vytvoøím poslední promìnnou, která spojuje obì èásti videa, 
                                                             # tedy první èást s odstranìným prokládáním a druhou èást, ve které 
                                                             # ¾ádné artefakty prokládání nebyly.

Crop (Okno_do_dvora, 10,2,-14,-10)                           # Pomocí Crop oøíznu obraz u promìnné Okno_do_dvora (t.j celého 
                                                             # sestøíhaného videa, které u¾ neobsahuje prokládání). Prvním parametrem 
                                                             # zde musí být promìnná (klip) Okno_do_dvora, proto¾e chci 
                                                             # zpracovat jen sestøíhané a prokládání zbavené video z promìnné Okno_do_dvora. 
                                                             # Kdybych nezadal ¾ádnou promìnnou, filtr Crop by zpracoval celý a neupravený   
                                                             # zdrojový soubor Okno do dvora_MJPG.avi.

TemporalCleaner(ythresh=6,cthresh=12)                        # Provádím èasové (dynamické) od¹umìní obrazu. Filtr bude zpracovávat výstup
                                                             # z pøedchozího filtru Crop, který u¾ zpracoval video sestøíhané
                                                             # a proto u¾ zde ¾ádnou promìnnou neuvádím. Naopak, kdybych zde pou¾il jako první
                                                             # parametr napø. promìnnou Okno_do_dvora, vynechal bych tím filtr Crop.

MipSmooth (preset= "movieLQ")                                # Provádím silnìj¹í èasovì-prostorové od¹umìní obrazu.

LanczosResize(720,540)                                       # Pomocí LanczosRezize upravím rozmìr snímku.
</pre>

<h4>Nebo jinak :</h4><P> Pro ty, kterým nebyla práce 
s promìnnými pøíli¹ jasná a zamotali se do toho, zde uvedu jiný zpùsob jak udìlat 
toté¾. Vytvoøím dva skripty. Ka¾dý bude zpracovávat jen jednu èást pùvodního videa rùznými sadami filtrù. 
</P>

<P>Tedy pro první èást videa ve které chci odstranit také prokládání bude skript s názvem napø. <b>Okno do dvora_1.avs</b> vypadat:</P>
<pre>
Avisource ("d:\Filmy\Okno do dvora_MJPG.avi")
Trim (270,3249)
Kerneldeint(order=1)
Crop(10,2,-14,-10)
TemporalCleaner(ythresh=6,cthresh=12)
Mipsmooth(preset="LQ")
LanczosResize (720,540)
</pre>

<P>Pro druhou èást videa ve které prokládání odstraòovat nemusím bude skript s názvem napø. <b>Okno do dvora_2.avs</b> vypadat takto:</P>
<pre>
Avisource("d:\Filmy\Okno do dvora_MJPG.avi")
Trim(3250,52545)++Trim(54857,108519)++Trim(111070,166222)
Crop(10,2,-14,-10)
TemporalCleaner(ythresh=6,cthresh=12)
Mipsmooth(preset="LQ")
LanczosResize (720,540)
</pre>

<P>Oba skripty mù¾eme spojit do jednoho výsledného skriptu s názvem <b>Okno do dvora.avs</b> velmi jednodu¹e:</P>
<pre>
Avisource ("d:\Filmy\AVS Skripty\Okno do dvora_1.avs")++\
Avisource ("d:\Filmy\AVS Skripty\Okno do dvora_2.avs")
</pre>

<h4><a name="example_4"></a>Pøíklad 4: Zpracování&nbsp;mírnì za¹umìlého&nbsp;nahraného filmu z TV do více souborù</h4>
<P>Chci zde popsat pøípad kdy jsem omylem pøeru¹il nahrávání filmu z TV karty bìhem reklamy a po jejím skonèení jsem nahrál zbytek filmu do druhého souboru.</P>
<P>Vytvoøil jsem tento pøedbì¾ný skript: <b>Obecna skola.avs</b></P>
<pre>
Avisource ("d:\Filmy\Obecna skola_1_MJPG.avi")++\
Avisource ("d:\Filmy\Obecna skola_2_MJPG.avi")
</pre>
<P>Tím jsem pouze naèetl a spojil oba soubory za sebe. Po otevøení tohoto skriptu ve VirtualDubu si najdu místa støihù a zapí¹u èísla pøíslu¹ných snímkù.
Jde o to, ¾e zde budou èísla snímkù u druhého souboru pokraèovat za snímky prvního souboru. Kdyby jste otevøeli druhý soubor ve VirtualDubu samostatnì,
zaèínaly by od 0 a nenavazovaly by tak na první soubor.</P>
<P>Koneèný skript pro zpracování videa pak vypadal takto: <b>Obecna skola.avs</b></P>
<pre>
Avisource ("d:\Filmy\Obecna skola_1_MJPG.avi")++\
Avisource ("d:\Filmy\Obecna skola_2_MJPG.avi")
Trim (9550,43367)++Trim (55453,90850)++Trim (102793,137108)++Trim (144554,185261)
Crop(10,32,-18,-44)
TemporalCleaner()
MipSmooth (Spatial= 4,\
	Temporal= 5,\
	Spatial_Chroma= 5,\
	Temporal_Chroma= 7,\
	Scenechange= 2.0,\
	Method= "SuperSoft",\
	Downsizer= "Bilinear",\
	Upsizer= "Bilinear",\
	Scalefactor= 0.85,\
	Weigh = true)
LanczosResize(720,472)
</pre>

<p>V¹e ostatní je u¾ obdobou z pøedchozích pøíkladù. Li¹í 
se jen zápis filtru MipSmooth. Zde je jsou vypsány v¹echny parametry tohoto 
filtru. Hodnoty v¹ech parametrù odpovídají pøednastavení preset = "movieHQ", tzn. ¾e zápis MipSmooth z tohoto 
skriptu je shodný s MipSmooth (preset = "movieHQ").
V takovémto podrobnì vypsaném nastavení filtru si pak mù¾ete podle libosti upravovat v¹echny parametry. Nebo mù¾ete zapsat filtr normálnì s nìjakým pøednastavením
a k tomu dopsat nìkterý z parametrù, který chcete upravit s va¹í hodnotou. Já si obvykle pohrávám jen s parametrem Scalefactor. 
Èím je ni¾¹í, tím je vyhlazení (a rozmazání detailù) silnìj¹í a èím je vy¹¹í, tím je úèinek filtru slab¹í. Lze pou¾ít i hodnoty vìt¹í ne¾ 1 (ale ne pøesnì 1).</p>

<h4><a name="example_5"></a>Pøíklad 8: Silné od¹umìní pomocí RemoveDirt.</h4>
<p>Pøi slab¹ím odstraòování ¹umu rozdíly mezi jednotlivými od¹umovaèi tolik nevynikají. Pøi odstraòování silného ¹umu z videa se u¾ ale èasto zaèínají objevovat rùzné 
artefakty a zjistí se na to nìkteré filtry nestaèí ani svojí silou ani výslednou kvalitou.  
Nedávno jsem z VHS kazety nahrával jeden film, který byl pomìrnì za¹umìlý u¾ na této kazetì. Navíc to byla televizní inscenace a proto byly snímky prokládané.
Odstraòování prokládání ¹um èasto je¹tì více zesiluje a proto jsem hledal silný, kvalitní a pokud mo¾no i rychlý filtr pro od¹umìní. Narazil jsem na filtr RemoveDirt
který mì mile pøekvapil. Je to skriptová funkce, která vyu¾ívá nìkolik pluginù. Uká¾eme si na jak se taková funkce pou¾ije.
</p>
<P>RemoveDirt potøebuje ke své práci nìkolik pluginù - RemoveDirt, RemoveGrain a dále pak souborù AvsRecursion.dll a msvcr71.dll , které patøí do slo¾ky system32. 
V¹e je uvedeno v dokumentaci filtru.</P>
<P>Skript: <b>Kralovsky zivot otroka.avs</b></P>
<pre>
Avisource ("x:\Kralovsky zivot.avi")
Trim(147,107551)
LeakKernelDeint(order=1,threshold=5)     #odstranìní prokládání
FluxsmoothT(temporal_threshold=7)        #pøedbì¾né èasové od¹umìní

function RemoveDirt(clip input, bool "_grey", int "repmode")       #definování skriptové funkce RemoveDirt
{                                                                  #tímto se funkce je¹tì nespou¹tí
    _grey=default(_grey, false)
	repmode=default(repmode, 16)
	clmode=17
	clensed=Clense(input, grey=_grey, cache=4)
	sbegin = ForwardClense(input, grey=_grey, cache=-1)
	send = BackwardClense(input, grey=_grey, cache=-1)
	alt=Repair(SCSelect(input, sbegin, send, clensed, debug=true), input, mode=repmode, modeU = _grey ? -1 : repmode ) 
	restore=Repair(clensed, input, mode=repmode, modeU = _grey ? -1 : repmode)
	corrected=RestoreMotionBlocks(clensed, restore, neighbour=input, alternative=alt, gmthreshold=70, dist=1, dmode=2, debug=false, noise=10, noisy=12, grey=_grey)
	return RemoveGrain(corrected, mode=clmode, modeU = _grey ? -1 : clmode )
 }	

RemoveDirt()    #výzva RemoveDirt - nyní se chce aby pracovala

Tweak(sat=1.1)  #mírné pøidání sytosti barev
Crop(8,0,-24,-8)
LanczosResize(720,540)
</pre>

<P>Odstranìní prokládání je zde umístìno pøed od¹umìní. Mù¾ete se setkat s názorem, ¾e je lep¹í provést od¹umìní pøed odstranìním prokládání. Mì se víc líbil výsledek pøi tomto poøadí.
Zkuste posunout LeakKernelDeint za Removedirt, srovnejte výsledky a rozhodnìte se podle svého vkusu.</p>

<P>Aby jste nemuseli v¾dy vypisovat celou definici funkce RemoveDirt v ka¾dém skriptu kde ji chcete pou¾ít, mù¾ete si ji samotnou (jen definici bez výzvy) ulo¾it do
samostatného souboru s pøíponou .AVSI a vlo¾it do slo¾ky plugins k ostatním automaticky naèítaným pluginùm. Skripty s pøíponou .AVSI se budou také automaticky naèítat, tak¾e ve va¹em 
skriptu pro zpracování videa pak staèí jen vyzvat funci bez jejího definování. Dal¹í zpùsob jak naèítat takovou skriptovou funkci ulo¾enou samostatnì je, ulo¾it si nìkam její 
definici do souboru s pøíponou .AVS a pak ji pøed její výzvou v nìjakém skriptu importovat pomocí vnitøní funkce <code>Import</code>.</p>

<P>Silných od¹umovaèù mù¾ete najít samozøejmì více. Pokud vám jde pøedev¹ím o kvalitu, tak k nejlep¹ím patøí ty které pracují ve frekvenèní oblasti, jako 
<code>FFT3DFilter</code> nebo jeho analog <code>FFT3DGPU</code> , který vyu¾ívá výpoèetní výkon grafických karet. Dal¹í takový od¹umovaè je <code>dfttest</code>. 
Tyto filtry jsou ale také úmìrnì pomalej¹í.<br>
Jestli máte vícejádrový procesor, mù¾ete zkusit urychlit nìkteré filtry pou¾itím filtru <code>MT</code> , který umo¾ní maximální vyu¾ití výkonu vícejádrových procesorù.</P>

<h4><a name="example_6"></a>Pøíklad 5: Zpracování DVD a DVB videa.</h4>

<P>Pokud máte DVD film nebo film nahraný z digitální TV (DVB) a chcete ho zkomprimovat nìkterým MPEG4 kodekem (DivX, Xvid), musíte film zpracovat nejdøíve programem DGIndex 
(souèást balíku <a href="http://www.neuron2.net/dgmpgdec/dgmpgdec.html"><cite>DGMPGDec</CITE></a>), ve kterém po naètení 
pøíslu¹ných VOB-ù, nebo mpg-ù které chcete zpracovat, ulo¾íte projektový soubor s pøíponou .d2v . Pøi ukládání je¹tì mù¾ete zvolit demux audio stop. DGIndex zpracovává video dekodérem 
DGDecode.dll. Stejný soubor by jste mìli vlo¾it do slo¾ky pluginù AviSynthu, proto¾e s jeho pomocí pak video v AviSynthu otevøete. Pro naètení videa sice pou¾ijete funkci 
Mpeg2Source, ale ta je jednou z funkcí právì pluginu DGDecode. 
</P>

<P>Skript pro naètení DVD videa (bez zvuku), které nebude støíháno mù¾e vypadat takto: <b>Indiana Jones a chram zkazy.avs</b></P>
<pre>
Mpeg2source ("d:\Indiana Jones a chram zkazy\VTS_02_1.d2v")
Crop(2,72,-2,-72)
LanczosResize (720,304)
</pre>
<P>Pokud budete film støíhat, je pro zachování synchronizace nejlep¹í kdy¾ spolu s videem budete naèítat a støíhat souèasnì i audio. 
Demuxované audio (zpravidla ve formátu ac3 nebo mp2) je dobré pøevést na formát WAV, proto¾e takové audio se nejlépe naèítá a nejlépe se sním pracuje. Pøi naèítání audia je také dobré 
uvést pøíslu¹nou hodnotu zpo¾dìní (delay), která je uvedena v názvu souboru demuxovaného audia. Video a audio spojíme pomocí funkce AudioDub viz následující skript.</P>
<P>Skript pro naètení videa nahraného z DVB-T (se zvukem), které bude støíháno mù¾e vypadat takto: <b>Americka noc.avs</b></P>
<pre>
Video=Mpeg2source ("y:\Video\Americka noc.d2v")   #naètení videa
Audio=WAvsource("y:\Video\Americka noc Tc0 L2 2ch 48 192 DELAY -390ms.wav")   #naètení audia, v externím programu (napø. LameXP jsem ho pøevedl na wav)
AudioDub(video, audio)     #spojení videa a audia

DelayAudio(-0.390)         #nastavení zpo¾dìní audia v sekundách - beru ho ze 
                           #zpo¾dìní je uvedena v názvu souboru audia (DELAY -390ms) 

Trim(9600,176116)          #støih klipu (videa i zvuku)

LanczosResize(720,400)
</pre>

<p>Filmy na DVD mívají dobrou kvalitu a èasto není potøeba pou¾ít filtry pro vyhlazení nebo odstranìní prokládání, zvlá¹» u nových filmù.
Jinak samozøejmì mù¾ete v pøípadì potøeby pou¾ít i jiné filtry jako v pøedchozích pøíkladech. Zvlá¹tní pozornost vìnujte rozmìrùm snímkù u filtru Resize. 
U DVD bývá toti¾ ¹íøka násobena urèitým koeficientem, který se li¹í pøi pomìru stran 4:3 a 16:9.
Jak si v¹e pohlídat je popsáno <a href="http://www.jech.webz.cz/dvdrip2.php"><cite>zde</cite></a>.</p>

<h3><a name="deinterlace"></a>Odstraòování prokládání</h3>
<p>Prokládání, nebo také roztøepení obrazu, je velmi viditelný artefakt ve videu. Úzce souvisí s televizním vysíláním, proto¾e televizní kamery 
zaznamenávají jeden snímek (rozdìlený na dvì pole) ve dvou èasových okam¾icích. Televize pak snímky zobrazí správnì, proto¾e je vysílají po jednotlivých polích,
ale poèítaèové monitory zobrazují v¾dy celý snímek, tedy obì èásti (pole) najednou. V pohyblivých scénách je pak vidìt roztøepený obraz. Podrobnìj¹í popisy o tom
jak vzniká a vypadá najdete <a href="http://jech.webz.cz/deinterlace.php"><cite>zde</cite></a> a nebo 
<a href="http://www.tvfreak.cz/art_doc-5E559746593300E2C125727C005965DB.html"><cite>zde</cite></a>.</p>

<p>Jsou vlastnì tøi mo¾nosti jak video zpracovat. Zachovat prokládání, odstranit prokládání pøi zachování pùvodní frekvence snímkù a odstranit prokládání pøi vytvoøení
dvojnásobné frekvence snímkù. Pøedpokládám, ¾e (napøíklad po pøeètení vý¹e uvedených odkazù) u¾ víte v jaké podobì budete chtít video mít. Ka¾dá metoda má svoje výhody a nevýhody. 
Nejuniverzálnìj¹í je odstranit prokládání pøi zachování pùvodní frekvence snímkù. Tuto metodu pou¾ívám a uká¾u na ní nìkolik pøíkladù.</p>

<h4>Jaké druhy prokládání (roztøepení) mohou v na¹em TV systému - PAL nastat?</h4>
                              
<p><b>1. Klasické TV prokládání</b> - pochází z èistì televizních programù snímaných televizními kamerami. Takové prokládání se øe¹í celkem jednodu¹e pou¾itím nìkterého filtru
pro odstranìní prokládání (napø. zmínìného <code>KernelDeint</code>, jeho optimalizované verze <code>LeakKernelDeint</code>, filtr <code>Yadif</code> nebo jiný). Viz pøíklad 3. Jen je potøeba si dát 
pozor na správné poøadí polí.</p>
<p><b>2. Roztøepení obrazu zpùsobené posunutím polí</b> - dochází k nìmu u filmù. U bì¾ných filmù natáèených klasicky pro kina by se na na¹ich televizích ani DVD nemìl
roztøepený obraz objevit, proto¾e obraz je v nich snímán po celých snímcích a i kdy¾ je pak vysílán v TV po polích, obì pole ka¾dého snímku do sebe pøesnì zapadají, 
proto¾e pochází z jednoho okam¾iku. Obèas ale u nìkterých filmù dochází k roztøepení obrazu kvùli tomu, ¾e nìjaké pole vypadne a pole se posunou tak, 
¾e spodní pole jednoho snímku se posune na pozici horního pole daného snímku a na pozici spodního pole se posune horní pole z pùvodnì dal¹ího snímku. Tak vznikne snímek slo¾ený
z polí ze dvou rùzných snímkù a to má za následek roztøepení obrazu. Tento pøípad se dá øe¹it prakticky s dokonalým výsledkem. Staèí toti¾ jen poskládat do sebe ty pravé pole.
Lze to provést pomocí filrù <code>Telecide</code> nebo <code>TFM</code> z pluginù Decomb nebo TIVTC - viz. pøíklad 6. 
Tyto filtry kontrolují roztøepení snímkù a kdy¾ ho posoudí jako roztøepený zkusí pøeuspoøádat pole tak, aby do sebe zapadly. Kdy¾ je ale ve snímku málo roztøepení, tøeba jen na mrkajících 
oèích, nechají ho obvykle tak. To je urèitá nedokonalost. Mù¾ete zkusit dal¹í zpùsob, který je dokonce kvalitnìj¹í a rychlej¹í. Pomocí vnitøních filtrù <code>SeparatField</code>, <code>Trim</code>, a <code>Weave</code> 
sma¾ete jedno pole z filmu. Tím se v¹echna pole posunou o jednu pozici a problém se tak vyøe¹í dokonale. Vlo¾te do va¹eho skriptu funkce z pøíkladu 7 a pak hned uvidíte jestli je roztøepený obraz
zpùsobený posunutím polí. Pokud ano, roztøepení úplnì zmizí. Tato metoda má proti filtrùm Telecide a TFM jen tu nevýhodu, ¾e pokud není roztøepený celý film, ale jen jeho èást, musíte sami 
urèit zaèátek a konec roztøepené èásti, na které pak tuto metodu pou¾ijete.</p>
<p><b>3. Roztøepení obrazu pøi pøevodu NTSC materiálu na PAL materiál</b> - je vidìt hlavnì v nìkterých pøevá¾nì star¹ích amerických nebo japonských filmech. Tam se toti¾ filmy musí
trochu komplikovanì pøevádìt na jinou frekvenci snímkù (z 24 na 30). Nazývá se to telecine. A na¹e televizní stanice nìkdy vysílají tyto NTSC materiály u nás a pøitom provádí pøevod zase na na¹i
frekvenci snímkù 25. Vznikne z toho roztøepený obraz, který navíc obsahuje smíchaná a duplikovaná pole. Toto je nejhor¹í pøípad, který se jen tì¾ko øe¹í. Takové filmy mívají obvykle trochu trhavý pohyb.
®e se jedná o tento pøípad poznáte tak, ¾e pomocí pøíkazu <code>SeparateFields</code> rozdìlíte snímky na pole a krokujete vpøed v èase. Kdy¾ uvidíte nìkterá pole normální (hladká) a 
nìkterá smíchaná ze dvou polí a také, ¾e se nìkterá pole opakují, jedná se o tento pøípad (zároveò si pøi tom zkontrolujete poøadí polí). 
Takový stav øe¹ím jednodu¹e jako u klasického prokládání, s tím, ¾e jsem smíøený s artefakty smíchaných polí a obèas 
zadrhávajícího pohybu. Existuje skriptová funkce <code>Restore24</code> pro øe¹ení tohoto problému, ale je pomìrnì slo¾itá a neumìl jsem ji moc dobøe pou¾ít. 
Pøesto ji mù¾ete vyzkou¹et.
</p>

<h4><a name="example_7"></a>Pøíklad 6: Odstranìní prokládání u videí s posunutými poli pomocí filtru Telecide.</h4>

<P>Skript pro pøeuspoøádání polí: <b>Rozmarne leto_Telecide.avs</b></P>
<pre>
Video=Mpeg2source ("y:\Video\Rozmarne leto.d2v")
Audio=WAVsource("y:\Video\Rozmarne leto Tc0 L2 2ch 48 192 DELAY 0ms.wav")
AudioDub(video, audio)

AssumeTFF()    #urèuji poøadí polí pro Telecide
Telecide()     #Telecide pøeuspoøádá pole, aby do sebe zapadaly

Trim(1394,110448)
Crop(10,4,-14,-4)
TemporalCleaner()
LanczosResize(720,540)
</pre>

<h4><a name="example_8"></a>Pøíklad 7: Odstranìní prokládání u videí s posunutými poli pomocí vnitøních funkcí Avisynthu.</h4>
<P>Toto øe¹ení je kvalitnìj¹í a rychlej¹í. Pokud jsou posunutá pole jen v èásti filmu, musíte oblasti ve kterých jsou pole posunutá urèit sami.
<P>Skript pro posunutí polí v celém filmu: <b>Rozmarne leto.avs</b></P>
<pre>
Video=Mpeg2source ("y:\Video\Rozmarne leto.d2v")
Audio=WAVsource("y:\Video\Rozmarne leto Tc0 L2 2ch 48 192 DELAY 0ms.wav")
AudioDub(video, audio)

SeparateFields()    #rozdìlím snímky na pole - z ka¾dého pole (pùlsnímku) se stane samostatný snímek
Trim(1,0)           #tímto vystøihnu první snímek (pùvodnì pole)
Weave()             #spojím pole do celých snímkù; pole jsou posunuta a prokládání zmizí

Trim(1394,110448)
Crop(10,4,-14,-4)
TemporalCleaner()
LanczosResize(720,540)
</pre>

<h3><a name="other"></a>Jiné úpravy videa</h3>
<P>Dal¹í úpravou mù¾e být tøeba zostøení videa, které je na vá¹ vkus a¾ pøíli¹ vyhlazené (rozmazané). To lze provést napøíklad filtrem <var>MSharpen</var>. 
Spojit video a audio z rùzných souborù mù¾ete pomocí filtru <a href="corefilters\audiodub.htm"><cite>AudioDub</cite></a> , 
upravit odstín, svìtlost a kontrast mù¾ete pomocí filtru <a href="corefilters\tweak.htm"><cite>Tweak</cite></a> , atd. 
Ka¾dý externí plugin mù¾ete také naèíst pomocí funkce LoadPlugin se zadáním patøièné cesty a názvu pluginu, ale je jednodu¹¹í 
mít plugin ve slo¾ce "Plugins", proto¾e pak se naète sám.
Mo¾ností úprav videa nebo audia je je¹tì spousta. Staèí se jen podívat na seznamy <a href="corefilters.htm"><cite>vnitøních</cite></a> 
a <a href="externalplugins.htm"><cite>externích</cite></a> filtrù.</P>


<h3><a name="whats_up"></a>Co dál se skriptem?</h3>

<p>Napsaný skript otevøete ve videopøehrávaèi a nebo nìjakém videoeditoru. Nejlep¹í je&nbsp;na to VirtualDub. V nìm si mù¾ete prohlédnout výsledek práce AviSynthu. 
Jestli jste spokojeni mù¾ete video zkomprimovat. Podle kontejneru do kterého chcete video ulo¾it pou¾ijte vhodný program (plus pøíslu¹né enkodéry):</p>
<p>AVI         - VirtualDub (zde pou¾ijte re¾im Fast recompress - Rychlá rekomprese)</p>
<p>MPG (m2v),   VOB&nbsp;- QuEnc, HC encoder</p>
<p>MP4, MKV    - MeGUI</p>

<p>Seznam vìt¹iny u¾iteèných programù pro práci s videem a zvukem najdete na 
<a href="http://www.doom9.org/software.htm" <cite>http://www.doom9.org/software.htm</CITE></a>  
</p>

<h3><a name="compression"></a>Krátké odboèení ke kompresi</h3>
<p>Na chvilku odboèím od AviSynthu ke kompresi videa. Nechci zde detailnì popisovat v¹echny formáty komprese, ale dát pár úvodních rad pro ty nejpou¾ívanìj¹í.
V souèasnosti jsou nejroz¹íøenìj¹í kompresní formáty MPEG2 a MPEG4-ASP (neboli také DivX, Xvid video).</p>

<p><b>MPEG2</b> je roz¹íøený pøedev¹ím díky tomu, ¾e je pou¾íván na DVD videu a video jím komprimované tam bývá ukládáno do kontejteru VOB. Jinak bývá takové video ukládáno 
do kontejneru mpg nebo mpeg (to kdy¾ je spolu se zvukem) a nebo do kontejneru m2v pokud se jedná o holé video bez zvuku. Ve vý¹e uvedených programech <var>QuEnc</var>
 a <var>HC encoder</var> se zadává datový tok - bitrate. Tento datový tok volte tak aby vám celoveèerní film vy¹el na 1 celé DVD. Pøi tom poèítejte s místem pro audio 
 (asi 1,5 - 2 MB na 1 minutu pro MP2 a pro AC3 a¾ dvakrát tolik - podle zvolého datového toku) a také poèítejte s pøibli¾nì 100 MB na spojení videa a zvuku.
 Jestli¾e si budete chtít vytvoøit DVD video zkontrolujte si, ¾e jsou nastaveny povolené hodnoty pro DVD formát t.j. maximální bitrate 9800 kb/s (obvykle se ale pou¾ívá 8000), 
 dále správnou frekvenci snímkù 25 snímkù za sekundu, rozmìry snímku 720(704)x576, velikost GOP a mo¾ná i dal¹í parametry. U HC to v¹e mù¾ete upravit jedním kliknutím. 
 Podrobný návod na tvorbu DVD najdete <a href="http://www.jech.webz.cz/dvd1.php"><cite>zde</CITE></a></p>
 
<p><b>MPEG4-ASP</b> je formát známý pøedev¹ím v podobì DivX a Xvid kodekù. Ukládá se nejèastìji do AVI kontejneru za pomoci napø. programu VirtualDub.
Xvid je zdarma a jeho pou¾ití je popsáno <a href="http://www.jech.webz.cz/vd_komprese.php"><cite>zde</CITE></a> a 
<a href="http://www.jech.webz.cz/dvdrip2.php"><cite>zde</CITE></a> je posáno jak silná komprese by se mìla volit podle tzv. indexu kvality. Je to vlastnì poèet bitù 
pøipadajících prùmìrnì na jeden pixel snímku. Tento index v¹ak nezohledòuje pøesnì míru za¹umìní ani míru pohybu v obrazu. Proto chci poukázat na výbornou mo¾nost 
kodeku Xvid pøi pou¾ití dvouprùchodového kódování. Xvid pøi prvním prùchodu pou¾ívá na v¹echna videa prakticky stejnou míru komprese (nemìníte-li vy svoje nastavení). 
Pro snímky P pou¾ívá kvantizer 2 a pro snímky B pou¾ívá kvantizer 4 co¾ je velmi dobrá kvalita. Výsledky prvního prùchodu pak ukládá do statistického souboru s 
pøíponou .pass. Výchozí název tohoto souboru je "video.pass" a kam se ukládá najdete po stisknutí 
tlaèítka "more" hned vedle okna s vybraným 1. prùchodem. Tento statistický soubor si mù¾ete pojmenovat tøeba podle svého filmu a nastavit cestu ulo¾ení podle libosti.
Tento soubor si taky mù¾ete otevøít v utilitce StatsReader, kterou najdete ve Start/Programy/Xvid. A po otevøení statistického soubou ve StatsReaderu si mù¾ete pøeèíst 
velikost videa komprimovaného v 1. prùchodu. A právì velikost videa je mìøítkem kvality komprese. Jestli¾e je malý, znamená to, ¾e i pøi výborné kvalitì se 
podaøilo video zkomprimovat pomìrnì silnì. Takové video má zøejmì málo ¹umu a málo pohybu. Pak ho staèí taky v druhém prùchodu zkomprimovat právì s ohledem na 
velikost videa z prvního prùchodu. Nemá smysl zadávat vìt¹í velikost komprimovaného videa ne¾ v prvním prùchodu (pøi vìt¹í velikosti o 40-50% dokonce Xvid ztrácí kontrolu
nad datovým tokem). Naopak, výsledná velikost se dá je¹tì trochu sní¾it pøi zachování 
velmi dobré kvality. Já se sna¾ím zadávat velikost výsledného videa nad 75% videa z prvního prùchodu. Va¹e nastavení závisí samozøejmì na va¹ich po¾adavcích na kvalitu.
Druhý prùchod mù¾u spustit tedy a¾ zhodnotím první prùchod a to tøeba i u více filmù. Pak mù¾u vybrat které filmy dát spoleènì na jedno DVD a mít u nich podobnou kvalitu.
Pøi nastavování více kompresí 1. prùchodu za sebou, si musím pro ka¾dou kompresi nastavit jiný název statistického souboru, jinak by se navzájem 
pøepisovali. Podobnì také, jestli¾e nastavuji více druhých prùchodù za sebou, nesmím zapomenout pou¾ít správný statistický soubor, který se volí opìt po 
stisku tlaèítka "more" vedle okna s vybraným 2. prùchodem, proto¾e jinak by se pou¾il ten z pøedchozí komprese.
<p>

<h3><a name="glossary"></a>Malý slovník pojmù</h3>

<p>Tento slovník pojmù vznikl ze slovníku v ruské verzi dokumentace AviSynthu a obsahuje vysvìtlení nejbì¾nìj¹ích termínù, 
které se ve zpracování videa a zvuku pou¾ívají. </p>
<P></P>

<p>bitrate - rychlost toku dat (v bitech za sekundu)
</p>

<p>bob-deinterlace - metoda odstranìní prokládání rozdìlením snímkù na pole a zdvojnásobením jejich vý¹ky
</p>

<p>border - okraj snímku
</p>

<p>blocking, blockiness - kostkatìní obrazu, obraz se skládá ze ètvereèkù (blokù); vzniká vlivem silné komprese
</p>

<p>clip - èást videa, mù¾e být se zvukem
</p>

<p>clip - ohranièit, oøíznout amplitudy (u zvuku)
</p>

<p>colorspace - barevné prostøedí (RGB, YUV)
</p>

<p>color format - barevný formát, konkrétní provedení barevného prostøedí (RGB24, YV12 atd.)</p>

<p>combing - roztøepení obrazu, høebínek, nebo taky zubatice - artefakt objevující se pøi snímkovém zobrazení prokládaného (TV)&nbsp;materiálu 
</p>

<p>deblocking - odstranìní kostkatìní
</p>

<p>deinterlace - odstraòování artefaktù prokládání
</p>

<p>demuxing - oddìlení jednotlivých streamù (video, audio) ze souboru AVI, MPG, VOB, ...
</p>

<p>deringing -  odstranìní zvonìní hran
</p>

<p>downmixer - smì¹ovaè, zmen¹uje poèet kanálù vícekanálových AC3 souborù na stereo
</p>

<p>edge - hrana, okraj objektu, obrys
</p>

<p>field - pole (polovina snímku tvoøená sudými a nebo lichými øádky), pùlsnímek
</p>

<p>fieldbased video - video zalo¾ené na polích, je to video umìle rozdìlené na pole
</p>

<p>fps - smímky za sekundu ("frames per second")
</p>

<p>framebased video - video zalo¾ené na snímcích
</p>

<p>framerate - frekvence snímkù
</p>

<p>frameserver - snímkový server
</p>

<p>frameserving - pøedávání snímkù jiným aplikacím
</p>

<p>frameserve - pøedávat snímky - naèíst AVS skript
</p>

<p>chroma - barevnost, barevná slo¾ka
</p>

<p>interlaced - prokládaný (formát obrazu televizních poøadù)
</p>

<p>interleaved - prolínané (napøíklad avi), znamená 
propojení video a audio streamu do jednoho soubory, pravidelnì se pøi tom støídají èásti videa 
a audia; úmyslnì je zde pou¾ité slovo prolínání,
aby nedocházelo k zámìnì s prokládaným televizním formátem obrazu
</p>

<p>inverse telecine - obrácený proces telecine, odstranìní pulldown
</p>

<p>luma - jas, jasová slo¾ka
</p>

<p>muxing - spojení jednotlivých streamù (video, audio) do jednoho souboru (kontejneru) AVI, MPG, VOB, ...
</p>

<p>pixel - bod obrazu
</p>

<p>plugin - pøipojitelný programový modul, v AviSynthu zpravidla vyu¾íván jako filtr
</p>

<p>pulldown - proces zmìny filmové frekvence snímkù na video frekvenci snímkù
 cestou pøidávání duplikovaných polí v urèitém poøádku, napø. pro NTSC se pou¾ívá 2:3 pulldown
</p>

<p>pulldown pattern - ¹ablona, struktura poøadí polí v pulldown</p>

<p>pulldown removal - odstranìní pulldown, obnovení pùvodního stavu filmu (pùvodní frekvence snímkù).
</p>
<P>resampling - pøevzorkování, zmìna poètu vzorkù</P>

<p>resize - zmìna rozmìru snímku
</p>

<p>ringing - zvonìní hran, obrysy nejsou èisté, ale jakoby rozechvìlé
</p>

<p>sample - vzorek
</p>

<p>sample rate - vzorkovací frekvence
</p>

<p>samples type - typ vzorku (u zvuku)
</p>

<p>sampling - vzorkování
</p>

<p>script - skript, posloupnost pøíkazù
</p>

<p>script function - skriptová funkce
</p>

<p>subsampling, downsampling - podvzorkování, sní¾ení poètu vzorkù
</p>

<p>taps - opìrné body, elementy jádra filtru, poèet vzorkù pou¾itých pro výpoèet nového vzorku
</p>

<p>telecine - proces pøevodu filmù na videomateriál, nejèastìji pou¾íván pro pulldown, nìkdy jsou to synonyma
</p>

<p>template - ¹ablona
</p>

<p>upsampling - nadvzorkování, zvý¹ení poètu vzorkù (interpolací)
</p>

<h3><a name="links"></a>Odkazy</h3>
<p>Prohlédnìte si èeské <a href="links.htm"><cite>odkazy</cite></a> na stránky u¾iteèné pro zpracování videa a zvuku.</p>

<h3><a name="license"></a>Licence</h3>
<p>Tento èeský pøeklad dokumentace AviSynthu je vytvoøen z anglické dokumentace off-line dokumentace.</p>
<p>Od 5.srpna 2007 je tato dokumentace vydávána za podmínek licence <a href="http://creativecommons.org/licenses/by-sa/3.0/">CC BY-SA 3.0</a>.
Pod touto licencí je vydávána také tato èeská dokumentace.</p>

<p>V podstatì to znamená, ¾e pou¾ijete-li èásti této dokumentace pro své èlánky, mìli by jste uvést odkud pochází, autorská práva, licenci atd.</p>

<h3><a name="summary"></a>Závìrem</h3>

<p>Tato kapitola mìla pøedev¹ím vám, novým èeským u¾ivatelùm pøiblí¾it AviSynth a na názorných ukázkách pøedvést tvorbu skriptù, tak
aby u¾ivatel dlouho netápal pøi psaní svých prvních skriptù. I kdy¾ v pøíkladech nebyly pou¾ity ¾ádné filtry pro zpracování zvuku, existuje
i øada audio filtrù. Jak u¾ zde bylo zmínìno, AviSynth umo¾òuje i pokroèilé zpracování videa napøíklad za pomoci podmínìného
filtrování. V¹e je podrobnì popsáno v této dokumentaci a objevení v¹ech mo¾ností AviSynthu je u¾ jen na vás.</p>

Pøelo¾il: <b>vlada_vm</b> (vlada_vm@centrum.cz)<br>
<kbd>Datum: 15.7.2009</kbd>
</body></html>

