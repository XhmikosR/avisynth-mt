<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<title>ReduceBy2 / HorizontalReduceBy2 / VerticalReduceBy2 Avisynth Filter</title>
<link rel="stylesheet" type="text/css" href="../../avisynth.css">
</head>
<body >
<h2><a name="ReduceBy2"></a>HorizontalReduceBy2 / VerticalReduceBy2 / ReduceBy2</h2>
<p><code>HorizontalReduceBy2 </code>(<var>clip</var>)<br>
  <code>VerticalReduceBy2 </code>(<var>clip</var>)<br>
  <code>ReduceBy2 </code>(<var>clip</var>)</p>
<p><code><span style="font-size:10.0pt;font-family:&quot;Microsoft Sans Serif&quot;;
mso-ansi-language:PT-BR;mso-fareast-language:PT-BR;mso-bidi-language:AR-SA">HorizontalReduceBy2
</span></code>reduz o tamanho horizontal de cada quadro à metade e VerticalReduceBy2 o vertical. Encadeia-os (em qualquer ordem) para reduzir a toda a imagem à metade. Você também pode usar ReduceBy2 que é igual a HorizontalReduceBy2 seguido por VerticalReduceBy2.
</p>
<p><span style="font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:&quot;Microsoft Sans Serif&quot;;mso-fareast-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:PT-BR;mso-fareast-language:
PT-BR;mso-bidi-language:AR-SA">O núcleo do filtro usado é (1/4,1/2,1/4) que é
igual ao filtro de redução do VirtualDub &quot;2:1 (alta qualidade)&quot;.
Isto evita os problemas de aliasing (graduação) que acontecem com um núcleo
(1/2,1/2). O filtro &quot;resize&quot; de VirtualDub usa um terceiro núcleo
mais caprichoso para redução a 2:1, mas eu o experimentei e achei que produziu
um arquivo MPEG de visual ligeiramente ruim - presumivelmente porque aguça bem
as extremidades e a maioria dos codecs não gosta de extremidades aguçadas.</span>
</p>
<p><span style="font-size:10.0pt;mso-bidi-font-size:12.0pt;
font-family:&quot;Microsoft Sans Serif&quot;;mso-fareast-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:PT-BR;mso-fareast-language:
PT-BR;mso-bidi-language:AR-SA">Se seu vídeo fonte for entrelaçado, o filtro
VerticalReduceBy2 vai desentrelaçá-lo com um efeito colateral. Se planejar
produzir vídeo em tamanho de 320x240, recomendo que você capture em resolução
vertical entrelaçada cheia (320x480) e use VerticalReduceBy2. Você obterá uma
muito boa produção. Minha utilidade Huffyuv comprimirá o vídeo capturado a
aproximadamente 2:1, sem perda, assim você pode capturar 320x480 no mesmo espaço
em que capturar 320x240. (Se seu disco tiver a capacidade e processamento para
suportar isso, você pode capturar até mesmo à 640x480 e usar
HorizontalReduceBy2 e VerticalReduceBy2. Mas isto não melhorará muito a
qualidade e se tiver que ir a MotionJPEG para conseguir 640x480, é
provavelmente melhor ir com Huffyuv à 320x480).</span>
</p>
<p><kbd>$Date: 2006/03/26 18:11:19 $ Portuguese translation by RoLon</kbd></p>
<FORM>
<INPUT TYPE="Button" VALUE="Back"
onClick="history.go(-1)">
</form>
</body>
</html>
