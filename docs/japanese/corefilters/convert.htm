<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <title>色空間変換フィルタ</title>
   <link rel="stylesheet" type="text/css" href="../../avisynth.css">
   <link rel="stylesheet" type="text/css" href="../ja.css">
</head>
<body>
<h2>
<a NAME="ConvertTo"></a>ConvertToRGB / ConvertToRGB24 / ConvertToRGB32<br>
  ConvertToYUY2 / ConvertBackToYUY2 / ConvertToYV12</h2>
<p><code>ConvertToRGB </code>(<var>clip [, string &quot;matrix&quot;] [, bool "interlaced"]</var>)<br>
  <code>ConvertToRGB24 </code>(<var>clip [, string &quot;matrix&quot;] [, bool "interlaced"]</var>)<br>
  <code>ConvertToRGB32 </code>(<var>clip [, string &quot;matrix&quot;] [, bool "interlaced"]</var>)<br>
  <code>ConvertToYUY2 </code>(<var>clip [, string &quot;matrix&quot;] [, bool "interlaced"]</var>)<br>
<code>ConvertToYV12 </code>(<var>clip [, string &quot;matrix&quot;] [, bool "interlaced"]</var>)<br>
  <code>ConvertBackToYUY2 </code>(<var>clip [, string &quot;matrix&quot;]</var>)

<p>
  <var>matrix</var>: デフォルトは "Rec601"。RGB- YUV 変換において使用される色係数と倍率を制御します。
  <ul>
  <li>&quot;Rec601&quot; : ITU-R BT.601 係数を使用。TV スケール [16,235] に圧縮される。
  <li>&quot;PC.601&quot; : ITU-R BT.601 係数を使用。フルスケール<a href="#footnote_1" title="PC スケールとも。" class="footnote_link">*1</a> [0,255] を保持する。
  <li>&quot;Rec709&quot; : ITU-R BT.709 係数を使用。TV スケールに圧縮される。
  <li>&quot;PC.709&quot; : ITU-R BT.709 係数を使用。フルスケールを保持する。
  </ul>
<p>
  <var>interlaced</var>: デフォルトは false。YV12 - YUY2/RGB 色差変換に対して、インターレースのレイアウトを使用します。
</p>
<p>v2.50 より前の AviSynth は、RGB と YUY2 の 2 つのカラーフォーマットを内部で扱うことができます。v2.50 から、AviSynth は YV12という第 3 のカラーフォーマットも扱うことができます。Convert フィルタは、それらのカラーフォーマット間の変換を行います。もしビデオがすでに指定されたフォーマットなら、そのまま素通しされます。このマニュアルでは、RGB は RGBA（RGB32） を指すという前提で書かれています。<code>ConvertToRGB</code> は、クリップが RGB24 でない限り、RGB32 に変換します。もし何らかの理由により 24 ビット RGB が必要なら明示的に <code>ConvertToRGB24</code> を使用し、その反対を行うには <code>ConvertToRGB32</code> を使用してください。
<p><code>ConvertToRGB24</code> のシンタックスと演算は、出力フォーマットが 24 ビットであるということを以外は、<code>ConvertToRGB</code> とまったく同じです。もしソースが RGB32 なら、アルファチャンネルは失われます。
<p>v2.51/v2.52 から、オプションの <var>interlaced</var> パラメータが追加されます（<var>interlaced</var><i>=</i>false がデフォルトの演算です）。false に設定すると <var>clip</var> がプログレッシブであると仮定され、true に設定すると <var>clip</var> がインターレースであると仮定されます。このオプションが追加されるのは、例えば（clip はインターレースの YV12 と仮定）:
<pre>SeparateFields(clip)
ConvertToYV12
Weave</pre>
は、正しくアップサンプリングされないからです。その代わりに interlaced オプションを使用すべきです:
<pre>ConvertToYV12(clip, interlaced=true)</pre>
<var>interlaced</var>=true という設定は、YV12 &lt;-&gt; YUY2/RGB 変換が要求される場合にのみ何かを行います。さもなければ、それは単に無視されます。詳細は「<a href="../advancedtopics/interlaced_fieldbased.htm">色変換とインターレース/フィールドベースのビデオ</a>」に書かれています。
<p>期待に反して、YUV を RGB に変換するユニークな方法はありません。AviSynth では、次の 2 つのもっとも一般的な方法が実装されています: （公式の規格書にちなんで名付けられた）Rec.601 と Rec.709。すべてのケースで正しいとは限りませんが、以下の内容はほとんどの場合において正しいでしょう<a href="#footnote_2" title="参考: ..." class="footnote_link">*2</a>:
<p>1 つ目の方法（Rec.601）は、ソースが DivX/XviD またはアナログキャプチャの時に使用します<a href="#footnote_3" title="matrix パラメータのデフォルト値は &quot;Rec601&quot; なので、" class="footnote_link">*3</a>:<pre>ConvertToRGB(clip)</pre>
<p>2 つ目の方法（Rec.709）は、ソースが DVD か HDTV の時に使用します:<pre>ConvertToRGB(clip, matrix=&quot;rec709&quot;)</pre>
<p>
<em>v2.56</em> から、この反対、すなわち、</p>
<pre>ConvertToYUY2(clip, matrix=&quot;rec709&quot;)</pre>
または
<pre>ConvertToYV12(clip, matrix=&quot;rec709&quot;)</pre>
も利用可能です。
<p>
<em>v2.56</em> から、<var>matrix</var>=&quot;pc.601&quot; （と <var>matrix</var>=&quot;pc.709&quot;）は、輝度の範囲を保持しながら RGB &lt;-&gt; YUV 変換すること、したがって（通常の/デフォルトの RGB [0,255] &lt;-&gt; YUV [16,235] の代わりに） RGB [0,255] &lt;-&gt; YUV [0,255] で変換することを可能にします。</p>
<p>
すべての VirtualDub フィルタ（LoadVirtualdubPlugin を使って読み込まれます。<a href="../syntax.htm#Plugins">プラグイン</a> を参照）は、RGB32 入力のみをサポートします。</p>
<p><b>RGB24, RGB32:</b> 色は、赤、緑、青の値として保存されます。RGB32 には、これに加えて不透明度を表すアルファチャンネルがあります。画像の大きさは、任意の値を取ることができます。
<p><b>YUY2:</b> 画像は、輝度の値 Y と 2 つの色の値 U、V として格納されます。水平方向の 2 ピクセルに対し、1 つの色差値と 2 つの輝度値を持ちます（2 つの Y、1 つの U、1 つの V）。そのため、画像の幅は 2 の倍数でなければなりません。
<p><b>YV12:</b> 4 ピクセル（2x2 の正方形）に対して 1 つの色差値しかないということ以外は、YUY2 と同じです。画像の高さと幅は、ともに 2 の倍数でなければなりません。もし映像がインターレースなら、2x2 の正方形はフレームではなくフィールドから取られるため、高さは 4 の倍数でなければなりません。
<p>ある関数は画像の大きさのルールに関するチェックを行い、ある関数はパラメータの丸め込みを行います。さらに画像の歪みやエラーが起こる関数もあります。
<p>YUY2 での作業は、RGB より高速です。YV12 はさらに高速で、ネイティブな MPEG フォーマットです。そのため、色空間変換の回数が少なくなります。
<p>相互変換は、ロスレスではありません。そのため、できるだけ変換の回数を少なくしてください。もし複数回の変換が必要なら、ソースが元々 YUY2 であった場合は、YUY2 に戻すのに <code>ConvertBackToYUY2</code> を使用してください。これによって色のぼけは減りますが、それでもまだ精度が失われます。
<p>たいていの場合、<code>ConvertToRGB</code> フィルタは必要ないはずです。AviSynth の出力が YUY2 フォーマットで、かつ、アプリケーションが RGB を要求するなら、システムはインストールされた YUY2 コーデックを使って変換するでしょう。しかし、もし YUY2 コーデックがインストールされていないか、あるいは（ATI やその他のいくつかの YUY2 コーデックの場合のように）コーデックが YUY2 から RGB へ不正確な変換を行うなら、その代わりとして AviSynth 内蔵フィルタを使って変換することができます。
<p><a href="http://neuron2.net/www.math.berkeley.edu/benrg/huffyuv.html" target="_parent">Huffyuv</a> は、ほかにインストールされているコーデックがない場合、システムの YUY2 コーデックとして機能します。そのため、もし Huffyuv をインストールし、<i>かつ、その他の YUY2 コーデックをすべてアンインストールした場合</i>、<code>ConvertToRGB</code> は必要なくなります。
<p><code>ConvertToRGB24</code> と <code>ConvertToRGB32</code> は、AviSynth に対して RGB データに関する特定の格納方法を使用するように強制するために使われます。RGB24 データは、RGB32 データより、処理にずっと時間がかかることが多いです。そのため、もしソースが RGB24 なら、RGB32 に変換することによって速度面の向上が得られるかもしれません。（TMPGEnc と VFAPI が RGB24 入力を必要とするということ以外） RGB24 を使用するメリットはありません。
<pre># YUY2 &lt;-&gt; RGB 間の変換によって、わずかな歪みが引き起こされます。
# 実際に目で見て確認してみましょう。
control = ConvertToYUY2()
test = ConvertToYUY2(ConvertToRGB(ConvertToYUY2(ConvertToRGB(control))))
test = ConvertToYUY2(ConvertToRGB(test))
return Subtract(test,control)</pre>
<p><kbd>原文 Date: 2006/09/27 18:41:25</kbd><br />
<kbd>日本語訳 $Date: 2008/06/22 07:41:10 $</kbd></p>
<form><input TYPE="Button" VALUE="戻る"
onClick="history.go(-1)"></form>

<hr />
<div id="footnote">
<ul>
  <li>訳者註:
    <ul>
      <li><a name="footnote_1" class="footnote_link">*1</a> <span class="footnote_text">PC スケールとも。</span></li>
      <li><a name="footnote_2" class="footnote_link">*2</a> <span class="footnote_text">参考: <a href="http://www.marumo.ne.jp/db2002_5.htm#15">まるも製作所 Diary 2002-5</a>、<a href="http://www.marumo.ne.jp/db2002_4.htm#17">まるも製作所 Diary 2002-4</a></span></li>
      <li><a name="footnote_3" class="footnote_link">*3</a> <span class="footnote_text">matrix パラメータのデフォルト値は &quot;Rec601&quot; なので、この例のように matrix の値を省略すると、&quot;Rec601&quot; が適用されます。</span></li>
    </ul>
  </li>
</ul>
</div>

</body>
</html>
