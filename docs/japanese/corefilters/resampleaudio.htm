<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <title>ResampleAudio フィルタ</title>
   <link rel="stylesheet" type="text/css" href="../../avisynth.css">
   <link rel="stylesheet" type="text/css" href="../ja.css">
</head>
<body >
<h2>
<a NAME="ResampleAudio"></a>ResampleAudio
</h2>
<p><code>ResampleAudio </code>(<var>clip, int new_rate_numerator[, int new_rate_denominator]</var>)
<p><code><tt>ResampleAudio</tt></code> は、音声のサンプリング周波数の高品質な変換を行います。サンプリング周波数がすでに与えられたレートである場合、変換はスキップされます。</p>
<p>分数リサンプリング<a href="#footnote_1" class="footnote_link">*1</a>を使用するとき、出力される音声のサンプリング周波数は以下の式によって与えられます:<br>
<pre>int(new_rate_numerator / new_rate_denominator + 0.5)</pre>
しかし、内部で使用されるリサンプリング係数は、以下の通りです:
<pre>new_rate_numerator / (new_rate_denominator * 古いサンプリング周波数)</pre>
このため、音声の持続時間がわずかに変更されます（これは、一般的には望ましいことです）。</p>
<p><em>v2.53</em> から、<tt>ResampleAudio</tt> は、何チャンネルでも受け付けます。<br>
<em>v2.56</em> から、<tt>ResampleAudio</tt> は、直接、浮動小数点サンプルを処理します。分数リサンプリングをサポート。</p>
<br>
<pre># 音声を 48kHz にリサンプリング
source = AviSource(&quot;c:\audio.wav&quot;)
return ResampleAudio(source, 48000)</pre>
<br>
<pre># PAL 方式のテレシネ用に正確な 4% の速度アップ
Global Nfr_num=25
Global Nfr_den=1
AviSource(&quot;C:\Film.avi&quot;) # 23.976 fps, 44100Hz
Ar=Audiorate()
ResampleAudio(Ar*FramerateNumerator()*Nfr_den, FramerateDenominator()*Nfr_num)
AssumeSampleRate(Ar)
AssumeFPS(Nfr_num, Nfr_den, False)</pre>
<p>正確なリサンプリングを行うには、中間のサンプリング周波数が 42293.706293 である必要があります。もしこれが 42294 に丸められると、1 時間あたりおよそ 30 ミリ秒の変化を引き起こします。</p>
<p><kbd>原文 Date: 2005/01/18 11:10:51</kbd><br />
<kbd>日本語訳 $Date: 2008/06/22 07:41:18 $</kbd></p>
<form><input TYPE="Button" VALUE="戻る"
onClick="history.go(-1)"></form>

<hr />
<div id="footnote">
<ul>
  <li>訳者註:
    <ul>
      <li><a name="footnote_1" class="footnote_link">*1</a> <span class="footnote_text">参考: <a href="http://www.gen-info.osaka-u.ac.jp/testdocs/tomocom/express/express19.html">リサンプリング</a></span></li>
    </ul>
  </li>
</ul>
</div>

</body>
</html>
