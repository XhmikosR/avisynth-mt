<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Subtract フィルタ</title>
<link rel="stylesheet" type="text/css" href="../../avisynth.css">
<link rel="stylesheet" type="text/css" href="../ja.css">
</head>
<body>
<h2>
<a name="Subtract"></a>Subtract 
</h2>
<p><code>Subtract </code>(<var>clip1, clip2</var>)</p>

<p><code>Subtract</code> は、すべてのピクセルが <i>clip1</i> と <i>clip2</i> の対応するピクセル間の差異によって設定される出力クリップを生成します。もっと具体的に言うと、各ピクセルを (50% 灰色) + (<i>clip1</i> のピクセル) - (<i>clip2</i> のピクセル) に設定します。もしコントラストを強めたいなら、このあとに <tt><a href="levels.htm">Levels</a></tt> を使用することができます。</p>

<p>また、生成されるクリップのプロパティに関しては、<a href="../syntax.htm#multiclip" target="_self">こちら</a>を参照してください。</p>

<p><b>使用例:</b></p>

<pre># clip1 と clip2 間の差異を明らかにする
Subtract(clip1, clip2).Levels(127, 1, 129, 0, 255)</pre>

<p>もし単一クリップの隣接するフレーム間の差分を見たいなら、このようにします:</p>

<pre>Subtract(clip.Trim(1,0), clip)</pre>
      
<p><b>輝度の範囲のオフセットについて:</b></p>
      
<p>YUV フォーマットの場合、有効な Y の範囲は 16 から 235 まで（16 と 235 を含む）で、Subtract はこれを考慮に入れます。つまり次のスクリプトは、輝度 = 126 の灰色のクリップを生成します:</p>

<pre>Subtract(any_clip, any_clip)</pre>

<p>PC スケールの YUV データ((訳者註: Y の範囲が [0,255] のデータ。))に対して Subtract 関数を必要とする人は、<a href="overlay.htm">Overlay</a> を使用してください:</p>

<pre>#Overlay(any_clip, any_clip, mode=&quot;Difference&quot;, pc_range=true) # 輝度 = 128 の灰色のクリップ
Overlay(clip1, clip2, mode=&quot;Difference&quot;, pc_range=true)</pre>
      
<p><kbd>原文 Date: 2006/09/27 18:41:25</kbd><br>
<kbd>日本語訳 $Date: 2008/08/13 02:48:39 $</kbd></p>
<FORM>
<INPUT TYPE="Button" VALUE="戻る"
onClick="history.go(-1)">
</form>
</body>
</html>
