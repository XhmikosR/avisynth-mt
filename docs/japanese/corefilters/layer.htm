<!doctype html public "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Layer フィルタ</title>
<link rel="stylesheet" type="text/css" href="../../avisynth.css">
<link rel="stylesheet" type="text/css" href="../ja.css">
</head>
<body>
<h2><a name="Layer"></a>Layer<em><a href="#footnote_1" class="footnote_link">*1</a> [yuy2][rgb32]</em></h2>
<p><code>Layer </code>(<var>base_clip, overlay_clip, string &quot;op&quot;, int &quot;level&quot;, 
  int &quot;x&quot;, int &quot;y&quot;, int &quot;threshold&quot;, bool &quot;use_chroma&quot;</var>)</p>
<p>このフィルタは、異なるサイズの（だが、同じカラーフォーマットの） 2 つのクリップを、さまざまな演算モードを使ってオーバーレイ<a href="#footnote_2" class="footnote_link">*2</a>することができます。<br>
ピクセルの透明度情報については、マスクとして RGB32 の第 4 の色チャンネル（A チャンネル、または、アルファチャンネル<a href="#footnote_3" class="footnote_link">*3</a>）が使用されます。</p>
<p>

<var>base_clip</var>: 生成されるクリップの大きさと他のすべてのビデオとオーディオのプロパティを決定する基礎をなす<a href="#footnote_4" class="footnote_link">*4</a>クリップ。<br>
<var>overlay_clip</var>: <var>base_clip</var> の上に合成されるクリップ。このクリップは、アルファレイヤを含むことができます。<br>
<var>op</var>: 実行される合成演算。次のいずれかの値を取ることができます: &quot;add&quot;、&quot;subtract&quot;、&quot;lighten&quot;、&quot;darken&quot;、&quot;fast&quot;、&quot;mul&quot;<br>
<var>level</var>: 実行される演算の強さ。0 から 257 まで。0: base_clip がそのまま返されます。257 （YUY2 は 256）: 最大の強さが使用されます。<br>
<var>x, y</var>: <var>overlay_clip</var> のオフセット<a href="#footnote_5" class="footnote_link">*5</a>位置。<br>
<var>threshold</var>: &quot;lighten&quot; と &quot;darken&quot; のみに実装されています。<br>
<var>use_chroma</var>: <var>overlay_clip</var> の色差を使用します。デフォルト true。false の場合、輝度のみ使用されます。</p>
<p>カラーフォーマットと演算の種類によって、挙動や許容されるパラメータにいくつかの違いがあります。詳細は以下の通りです:</p>
<ul>
  <li>YUY2 では、マスク（アルファチャンネル）がありません。このため、アルファチャンネルは、どの部分も完全に不透明であると仮定されます。<br>
  </li>
  <li>RGB32 では、<var>overlay_clip</var> のアルファチャンネルは、<var>level</var> を使って掛け算されます。このため、算出されるアルファ値は (マスクのアルファ値 * level + 1) / 256 になります。つまり、演算の最大限の効果を得るには、マスクのアルファ値が 255、<var>level</var> が 257 である必要があります。</li>
</ul>
<p>これらの演算子は、RGB32 でも YUY2 でも同様に機能します:</p>

<pre>&quot;fast&quot;: <i>use_chroma</i> は TRUE である必要があり、<i>level</i> と <i>threshold</i> は使われません。
        結果は、単に <i>base_clip</i> と <i>overlay_clip</i> の平均です。

&quot;add&quot;:  <i>threshold</i> は使われません。base_clip と overlay_clip の差は、
        アルファ値を使って掛け算され、base_clip に足されます。
          alpha=0 -&gt; base_clip のみ見える、
          alpha=128 -&gt; base_clip と overlay_clip が均一にブレンドされる、
          alpha=255 -&gt; overlay_clip のみ見える。
        使用される公式:-
          RGB32 :: base += ((overlay-base)*(alpha*level+1)&gt;&gt;8)&gt;&gt;8
          YUY2  :: base += ((overlay-base)*level)&gt;&gt;8

&quot;subtract&quot;: &quot;add&quot; と同じですが、overlay_clip は前もって反転されます。</pre>

<p>これらの演算子は、YUY2 でのみ正しく動作するようです:</p>

<pre>&quot;mul&quot;: <i>threshold</i> は使われません。base_clip は overlay_clip と同様に彩色されます。
       このため、<i>use_chroma</i> は TRUE でなくてはなりません。
       alpha=0 -&gt; base_clip のみ見える、alpha=255 -&gt; base_clip とほぼ同じ輝度だが、
       overlay_clip の色を持つ。

&quot;lighten&quot;: <i>use_chroma</i> は TRUE である必要があります。&quot;add&quot; と同じ演算を実行しますが、
       結果が base_clip より明るいときのみ新しい値が使われます。<i>threshold</i> が
       高いほど、この演算が行われる可能性が高くなります。つまり、<i>threshold</i>=255 なら 
       &quot;add&quot; と同じ、threshold=0 なら base_clip と overlay_clip の差によっては
       おそらく base_clip がそのまま変更なしで渡されます。

&quot;darken&quot;: &quot;lighten&quot; と同じですが、結果が base_clip より暗いときにのみ実行されます。</pre>
    
<p><br>
生成されるクリップのプロパティについては、<a href="../syntax.htm#multiclip" target="_self">こちら</a>も参照。</p>
<p>&nbsp;
</p>

<h2><a name="Mask"></a>Mask 
  <em>[rgb32]</em></h2>
<p><code>Mask </code>(<var>clip, mask_clip</var>)</p>
<p><code>Layer</code> と一緒に使用するために、<var>mask_clip</var> をグレースケールに変換し、それを RGB32 のマスク（アルファチャンネル）に使用することによって、定義されたアルファマスクを <var>clip</var> に適用します。このチャンネルでは、「黒」は完全に透明を意味し、「白」は完全に不透明を意味します。</p>
<p>&nbsp;
</p>

<h2><a name="ResetMask"></a>ResetMask <em>[rgb32]</em></h2>
<p><code>ResetMask </code>(<var>clip</var>)</p>
<p><tt>Layer</tt> と一緒に使用するために、<i>clip</i> に「100% 不透明な」（すなわち白色の）アルファマスクを適用します。</p>
<p>RGB32 クリップのアルファチャンネルは、（ソースによっては）つねに明確に定義されているとは限りません。このフィルタは、純白のマスクを適用するための手っ取り早い方法です:</p>
<pre>clip = ResetMask(clip)</pre>
    <p>&nbsp;</p>

<h2><a name="ColorKeyMask"></a>ColorKeyMask 
  <em>[rgb32]</em></h2>
<p><code>ColorKeyMask </code>(<var>clip, int color[, int tolB, int tolG, int tolR]</var>)</p>
<p><var>color</var> で指定された色（デフォルト 黒）を比較することによって、アルファチャンネル内のピクセルを消去します。色の差が (<var>tolB, tolR, tolG</var>)<a href="#footnote_6" class="footnote_link">*6</a> （デフォルト 10）より小さいピクセルは、それぞれ透明（つまり黒色に）に設定されます。それ以外のピクセルは変更されません。すなわち、不透明には設定され''ません''（白色には設定されません。そのため、このフィルタを適用する前に ResetMask が必要になるかもしれれません）。これは、統合マスクを複数回の呼び出しによって構築することを可能にします。<var>tolR</var> または <var>tolG</var> が設定されないときは、<var>tolB</var> の値が使われます（古いバージョンの挙動を反映）。通常は、まず ResetMask から始めます。それから、関係のある色が現れる透明な穴をつくるために ColorKeyMask を 2、3 回連続して呼び出します。<b>使用例については、<a href="overlay.htm">Overlay</a> を参照してください。</b></p>
<p>v2.58 より古いバージョンの AviSynth では、青、緑、赤に対する個別の許容レベルはありませんでした。唯一、<var>tolerance</var> と呼ばれる許容レベルがあり、青、緑、赤に対して同時に使用されていました。</p>

<p><kbd>原文 Date: 2008/02/06 16:40:23</kbd><br>
<kbd>日本語訳 $Date: 2008/08/13 02:48:39 $</kbd>
</p>
<FORM>
  <INPUT TYPE="Button" VALUE="戻る"
onClick="history.go(-1)">
</form>

<hr>
<div id="footnote">
<ul>
  <li>訳者註:
    <ul>
      <li><a name="footnote_1" class="footnote_link">*1</a> <span class="footnote_text">参考: <a href="http://ja.wikipedia.org/wiki/%E3%83%AC%E3%82%A4%E3%83%A4%E3%83%BC_%28DTP%29">レイヤー (DTP) - Wikipedia</a></span></li>
      <li><a name="footnote_2" class="footnote_link">*2</a> <span class="footnote_text">参考: <a href="http://allabout.co.jp/glossary/g_digital/w003149.htm">オーバーレイ - ［デジタルアイテム用語集］All About</a></span></li>
      <li><a name="footnote_3" class="footnote_link">*3</a> <span class="footnote_text">参考: <a href="http://e-words.jp/w/E382A2E383ABE38395E382A1E38381E383A3E383B3E3838DE383AB.html">IT用語辞典 e-Words ： アルファチャンネルとは 【alpha channel】　─　意味・解説</a></span></li>
      <li><a name="footnote_4" class="footnote_link">*4</a> <span class="footnote_text">原文では「underlying」。「基礎をなす」という意味のほかに、「下にある」という位置的な意味も持つ。</span></li>
      <li><a name="footnote_5" class="footnote_link">*5</a> <span class="footnote_text">参考: <a href="http://e-words.jp/w/E382AAE38395E382BBE38383E38388.html">IT用語辞典 e-Words ： オフセットとは 【offset】　─　意味・解説</a></span></li>
      <li><a name="footnote_6" class="footnote_link">*6</a> <span class="footnote_text">tolB、tolR、tolG の tol は英語の tolerance に由来し、B、R、G はそれぞれの色を示す（順に青、赤、緑）。tolerance は、日本語で「許容誤差」の意味。</span></li>
    </ul>
  </li>
</ul>
</div>

</body>
</html>
