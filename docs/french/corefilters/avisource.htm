<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>


  
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">

  


  
  <title>Filtre AviSynth AVISource / OpenDMLSource / AVIFileSource / WAVSource</title>
  <link rel="stylesheet" type="text/css" href="../../avisynth.css">
</head>


<body>


<h2><a name="AVISource"></a>AVISource /
OpenDMLSource / AVIFileSource / WAVSource</h2>


<p><code>AVISource </code>(<var>cha&icirc;ne
nom_de_fichier [, ...],&nbsp;</var><var>bool&eacute;en</var><var>
"audio" = vrai, cha&icirc;ne
"type_de_pixel" = YV12, [cha&icirc;ne fourCC]</var>)<br>


<code>OpenDMLSource </code>(<var>cha&icirc;ne
nom_de_fichier [, ...],&nbsp;</var><var>bool&eacute;en</var><var>
"audio" = vrai, cha&icirc;ne "type_de_pixel" = YV12,
[cha&icirc;ne fourCC]</var>)<br>


<code>AVIFileSource </code>(<var>cha&icirc;ne
nom_de_fichier [, ...],&nbsp;</var><var>bool&eacute;en</var><var>
"audio" = vrai, cha&icirc;ne "type_de_pixel" = YV12,
[cha&icirc;ne fourCC]</var>)<br>


<code>WAVSource </code>(<var>cha&icirc;ne
nom_de_fichier [, ...]</var>)
</p>


<p>Le filtre <code>AVISource</code>&nbsp;accepte
comme argument un ou plusieurs noms de fichiers plac&eacute;s entre
des guillemets. Il y acc&egrave;de en utilisant soit l'interface
"AVIFile" VFW(Video for Windows) ou le code OpenDML interne d'AviSynth
(import&eacute; de
VirtualDub).&nbsp;Ce filtre peut lire n'importe quels fichiers dans
lequel est inclus le processus de gestion (handler)
AVIFile.&nbsp;Cela
ne comprend pas seulement les fichiers AVI mais aussi les fichiers
WAV, les fichiers AVS (scripts AviSynth), et les fichiers VDR (serveur
d'images de VirtualDub).&nbsp;Si vous passez plusieurs noms de
fichiers comme arguments, les clips seront assembl&eacute;s avec le
filtre <code><a href="splice.htm">UnalignedSplice</a></code>.
L'argument <var>bool&eacute;en</var>&nbsp;audio
est optionnel et par d&eacute;faut &agrave; la valeur <code>vrai</code>.
</p>


<p>Le filtre <code>AVISource</code>&nbsp;examine
le fichier pour d&eacute;terminer son type et le transmet au
handler AVIFile ou OpenDML appropri&eacute;.&nbsp;Au cas ou
vous rencontriez un probl&egrave;me avec l'un ou l'autre
gestionnaire de processus, vous pouvez alors utilisez les filtres
<code>OpenDMLSource</code> et <code>AVIFileSource</code>
qui forceront
l'utilisation d'un des
handlers. Chacun peut lire normalement des fichiers AVI (&lt; 2Go),
mais seul le handler OpenDML peut acc&eacute;der &agrave; des
fichiers de taille
sup&eacute;rieure, et seul le handler AVIFile peut g&eacute;rer
d'autres types de
fichiers tels que WAV, VDR et AVS.
</p>


<p>Jusqu'&agrave; <em>v2.04</em>, <code>WAVSource</code>
&eacute;tait un alias de <code>AVIFileSource</code>.
Dans les version post&eacute;rieures, <code>WAVSource</code>
n'essaye plus d'ouvrir le flux video. Cela peut &ecirc;tre utile si
vous voulez r&eacute;cup&eacute;rer le flux audio d'un fichier
AVI dans le cas o&ugrave; le flux video est endommag&eacute; ou
lorsque son type de compression n'est pas support&eacute; par votre
syst&egrave;me.</p>


<p>Depuis <em>v2.04</em>, il y a un support pour les
flux audio de type ACM (Audio Compression Manager); par exemple les
fichiers AVI contenant une piste audio mp3. <code>AVISource</code>
n'est plus capable d'ouvrir les fichier WAV, qui doivent &ecirc;tre
ouvert avec <code>WAVSource</code>.
</p>


<p>Depuis <em>v2.06</em>, le param&egrave;tre <var>type_de_pixel</var>&nbsp;(par
d&eacute;faut YUY2) permet de choisir le format de couleur de sortie
adapt&eacute; au d&eacute;compresseur. Les valeurs possibles
sont&nbsp;"YUY2",
"RGB32" and "RGB24". Si ce param&egrave;tre est omis, AviSynth
utilise le premier format de couleur support&eacute; par le
d&eacute;compresseur (dans l'ordre suivant: YUY2, RGB32, RGB24). Ce
param&egrave;tre n'entre pas en compte si la video est dans un
format non compress&eacute; (YUY2, RGB32 ou RGB24), puisqu'aucun
d&eacute;compresseur n'est utilis&eacute; dans ce cas.</p>

<p>Depuis
<em>v2.5</em> le <var>type_de_pixel</var> par
d&eacute;faut est YV12. Autrement dit, si vous ne
sp&eacute;cifiez aucun <var>type_de_pixel</var>, il
essayera de transmettre le fichier AVI sous le format YV12. Si ce n'est
pas possible, il essayera le format YUY2, et si ce n'est toujours pas
possible, il essayera le format RGB.</p>


<p>Quelquefois, les couleurs peuvent subir une distorsion quand
vous chargez une video DivX dans AviSynth
<em>v2.5</em> (les canaux U et V sont invers&eacute;s).
Cela est d&ucirc; &agrave; un bug dans le codec DivX (versions
5.02 et ult&eacute;rieures). Vous pouvez corriger ce
probl&egrave;me
en utilisant le filtre&nbsp; <code><a href="swap.htm">SwapUV</a></code>.
</p>


<p>Depuis <em>v2.53</em> <code>AVISource</code>
peut &eacute;galement ouvrir les fichiers video DV de type 1
(seulement la
video, pas l'audio).
</p>


<p>Depuis <em>v2.55</em>, l'option <var>
fourCC</var> a &eacute;t&eacute; ajout&eacute;e. Le
FourCC, est l'acronyme de FOUR Character Code (code &agrave; quatre
caract&egrave;res) qui est pr&eacute;sent dans
l'ent&ecirc;te d'un fichier, et qui est principalement associ&eacute;
aux fichiers AVI. &nbsp;Il dit quel codec de votre
syst&egrave;me doit d&eacute;coder le fichier. Vous pouvez&nbsp;utiliser ce param&egrave;tre pour forcer&nbsp;<code>AVISource</code>
&agrave; ouvrir le fichier AVI avec un codec diff&eacute;rent
de celui choisit par d&eacute;faut. Une liste des&nbsp;FOURCC
est disponible
<a href="http://www.fourcc.org/index.php?http%3A//www.fourcc.org/codecs.php"><cite>ici</cite></a>.
Par d&eacute;faut, c'est le&nbsp;<var> fourCC</var>
du fichier AVI ouvert qui sera utilis&eacute;.</p>


<p>Certains codecs MJPEG/DV ne fournissent pas une sortie
comforme &agrave; la norme CCIR 601 en utilisant <code>AVISource</code>.
Ce probl&egrave;me peut survenir si les formats de couleur en
entr&eacute;e et en sortie sont diff&eacute;rents. Par exemple,
si le format d'entr&eacute;e est le YV12 alors que le format de
sortie est le RGB, ou le contraire. Il y a deux mani&egrave;res de
corriger cela:</p>


<p>1) Forcer le m&ecirc;me format de couleur en sortie que
celui en entr&eacute;e. Par exemple
(si le format de couleur d'entr&eacute;e est le RGB):
</p>


<pre>AVISource("file.avi", type_de_pixel="RGB32")</pre>


<p>2) Corriger avec le filtre <a href="coloryuv.htm">ColorYUV</a>:
</p>


<pre>AVISource("file.avi").ColorYUV(levels="PC-&gt;TV")</pre>


<p>Voici deux liens(en anglais) qui font
r&eacute;f&eacute;rence &agrave; ces probl&egrave;mes:
<br>


<cite><a href="http://forum.doom9.org/showthread.php?s=&amp;postid=330657">MJPEG
codecs</a></cite>
<br>


<cite><a href="http://forum.doom9.org/showthread.php?s=&amp;threadid=58110">DV
codecs</a></cite>
</p>


<p>Exemples:</p>


<pre>AVISource("d:\capture.avi")&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Note pour les programmeurs en C: les antislashs ne sont pas r&eacute;p&eacute;t&eacute;s deux fois<br>AVISource("c:/capture/00.avi")&nbsp;&nbsp;&nbsp;&nbsp; # Les slashes marchent &eacute;galement<br>WAVSource("f:\soundtrack.wav")&nbsp;&nbsp;&nbsp;&nbsp; # Cela marche<br>WAVSource("f:/soundtrack.wav")&nbsp;&nbsp;&nbsp;&nbsp; # Cela aussi<br>AVISource("cap1.avi","cap2.avi")&nbsp;&nbsp; # Identique &agrave; AVISource("cap1.avi")+AVISource("cap2.avi")<br>AVISource("cap.avi",false,"RGB32") # D&eacute;sactive l'audio et demande une d&eacute;compression dans le format de couleur RGB32<br>AVISource("cap.avi", false, fourCC="CDVC") # ouvre un fichier DV en utilisant le codec DV de Canopus<br>AVISource("cap.avi", false, fourCC="XVID") # ouvre un fichier AVI (par exemple DivX3) en utilisant le codec XviD</pre>


<p><b>Changements:</b></p>


<table border="1">


  <tbody>


    <tr>


      <td>v2.55</td>


      <td>Ajout du param&egrave;tre fourCC.</td>


    </tr>


  
  </tbody>
</table>


<p><kbd>$English date: 2005/08/11 21:11:50 $<br>


First French translation by jernst. Last update: 2005/10/10 JasonFly <a href="mailto:macpaille@users.sourceforge.net">macpaille@users.sourceforge.net</a></kbd></p>


<form><input value="Back" onclick="history.go(-1)" type="button"></form>


</body>
</html>
