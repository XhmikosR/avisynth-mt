<!DOCTYPE html PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>


  
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">


  
  <link rel="stylesheet" type="text/css" href="../../avisynth.css">

  
  <title>Filtre ImageReader / ImageSource</title>
<!-- Automatically generated, don't change: $Id: imagesource.htm,v 1.2 2006/01/23 22:50:30 macpaille Exp $ -->
</head>


<body>


<h2><a name="ImageSource"></a>ImageReader /
ImageSource
</h2>


<p> <code>ImageReader </code>(<var>string
"file", int "start", int "end", float "fps", bool "use_DevIL", bool
"info", string "pixel_type"</var>)<br>


<code>ImageSource </code>(<var>string "file", int
"start", int "end", float "fps", bool "use_DevIL", bool "info", string
"pixel_type"</var>)
</p>


<p><code>ImageReader</code> est pr&eacute;sent dans&nbsp;v2.52,
o&ugrave; il remplace le plugin de WarpEnterprises, avec quelques
changements au niveau des fonctionnalit&eacute;es. A partir
de&nbsp;v2.55 <code>ImageSource </code> est un &eacute;quivalent avec quelques changements de fonctionnalit&eacute;s mineurs.
<code>ImageSource </code>est plus rapide que <code>ImageReader</code> pour l'importation d'une image.
</p>


<p><var>file</var>: c'est le gabarit du/des fichier(s),
o&ugrave; le num&eacute;ro de l'image peut &ecirc;tre substitu&eacute; en utilisant la&nbsp;<cite><a href="http://www.cplusplus.com/ref/cstdio/sprintf.html">syntaxe sprintf</a></cite>. Par exemple, les fichiers cr&eacute;&eacute;s en utilisant les param&egrave;tres par d&eacute;faut de <code><a href="imagewriter.htm">ImageWriter</a></code>
peuvent &ecirc;tre r&eacute;f&eacute;renc&eacute;s avec <tt>"c:\%06d.ebmp"</tt>.
A partir de&nbsp;v2.56, si le gabarit renvoie vers une seule image,
alors le fichier est lu une fois et renvoy&eacute; pour toutes les
images demand&eacute;es.
</p>


<p><var>start</var> (d&eacute;but)= 0, <var> end</var>'fin)= 1000:
Indique les num&eacute;ros de d&eacute;part de de fin utilis&eacute;s
pour la cr&eacute;ation des noms de fichiers. Le fichier correspondant
&agrave; <var>start</var> est toujours l'image num&eacute;ro 0 dans le clip, le fichier correspondant &agrave;&nbsp;<var>end</var>
est l'image (end-start) (fin-d&eacute;but). Le clip obtenu a donc (end-start+1) (fin-d&eacute;but+1) images.&nbsp;'<i>end</i>=0'
ne signifie pas 'pas de limite sup&eacute;rieure' comme c'est le cas avec&nbsp;<tt><code><a href="imagewriter.htm">ImageWriter</a></code></tt>.
Le premier fichier de la s&eacute;quence, c'est &agrave; dire celui qui
correspond &agrave;&nbsp;'start', DOIT exister pour que les
param&egrave;tres du clip soient calcul&eacute;s. Chaque fichier
manquant dans la s&eacute;quence est remplac&eacute; par une image
vide.
</p>


<p><var>fps</var> = 24: nombre d'images par seconde du clip de sortie. C'est un entier pour les versions pr&eacute;c&eacute;dentes &agrave; v2.55
</p>


<p><var>use_DevIL</var> = false: Quand ce param&egrave;tre
est&nbsp;false, le filtre essaye de traiter les fichiers BMP avec le
processeur interne. Si le r&eacute;sultat donne une erreur, le
processeur DevIL est utilis&eacute;. Quand ce param&egrave;tre est sur
true, le filtre utilise directement le processus DevIL. Vous ne devriez
avoir besoin d'utiliser ce param&egrave;tre que si vous avez des
fichiers BMP dont vous ne voulez pas qu'ils soient lus par le
processeur interne d'<tt><code>ImageReader</code></tt>.
</p>


<p><u>NOTE</u> : La version 1.6.6 de DevIL telle qu'elle est fournit
dans&nbsp;Avisynth ne supporte pas correctement les fichiers DIB/BMP
qui utilisent une palette; cela inclut les fichiers RGB 8 bits, les
fichiers monochromes, RLE8 et RLE4. A cause de ce probl&egrave;me,
depuis la r&eacute;vision 2.56, le processeur interne des BMP ne
renvoie pas sur le processeur de&nbsp;DevIL. Il n'est pas
recommand&eacute; de forcer l'utilisation de DevIL avec ces types de
fichiers.
</p>


<p><var>info</var> = false (faux): quand ce param&egrave;tre est true
(vrai), le nom de fichier de l'image source est superpos&eacute; sur
chaque image de la video (ajout&eacute; dans <em>v2.55</em>).
</p>


<p><var>pixel_type</var> = rgb24: permet de sp&eacute;cifier le format
de sortie; rgb24 et rgb32 sont support&eacute;s. Le canal alpha est
charg&eacute; seulement pour les fichiers de type rgb32 et seulement si
DevIL le permet pour le type de fichier consid&eacute;r&eacute;.
(ajout&eacute; dans <em>v2.56</em>).
</p>


<p>L'espace de couleur du clip de sortie est RGB si DevIL est
utilis&eacute;, sinon, ce sera n'importe quel espace de couleur pour
lequel une s&eacute;quence EBMP
&agrave; &eacute;t&eacute; pr&eacute;vue et &eacute;crite (tout les
formats de couleurs support&eacute;s par AviSynth sont support&eacute;s
ici)
</p>


<pre># Param&egrave;tres par d&eacute;faut: lit une s&eacute;quence de 1000 images<br># S&eacute;quence EBMP AviSynth (&agrave; 24 images par seconde)<br>ImageSource()<br><br># Lit depuis le fichier "100.jpeg" jusqu'&agrave; "199.jpeg"<br># pour construire un clip NTSC.<br>ImageSource("D:\%d.jpeg", 100, 199, 29.97)<br># Note: le fps flottant est tol&eacute;r&eacute; dans v2.56<br><br># Lit depuis le fichier "00.bmp" jusqu'&agrave; "50.bmp" en contournant<br># le processeur BMP interne d'AviSynth.<br>ImageSource("D:\%01d.bmp", end=50, use_DevIL=true)<br><br># Lit une seule image et la r&eacute;p&egrave;te 300 fois<br>ImageSource("D:\static.png", end=300)<br># Beaucoup plus rapide depuis v2.56<br></pre>


<p>* "EBMP" est une extension d'AviSynth au standard de format d'image
RIFF de Microsoft. Il permet d'enregistrer des donn&eacute;es image raw
en&nbsp;YUY2 et en YV12. Voir <a href="imagewriter.htm">ImageWriter</a>
pour plus de d&eacute;tails.</p>


<p><kbd>$English date: 2005/07/09 13:04:12 $<br>


French translation date: 2006/01/23 JasonFly <a href="mailto:macpaille@users.sourceforge.net">macpaille@users.sourceforge.net</a></kbd>
</p>


<form><input value="Retour" onclick="history.go(-1)" type="button"></form>


</body>
</html>
