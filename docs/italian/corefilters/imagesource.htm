<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
	<link rel="stylesheet" type="text/css" href="../../avisynth.css">
   <title>ImageReader / ImageSource Filter</title>
<!--
Automatically generated, don't change:
$Id: imagesource.htm,v 1.1 2004/09/26 19:49:40 alex_e_basta Exp $
-->
</head>
<body>
<h2><a NAME="ImageSource"></a>ImageReader / ImageSource
</h2>
<p>
  <code>ImageReader </code>(<var>string &quot;file&quot;, int &quot;begin&quot;, int &quot;end&quot;, int &quot;fps&quot;, bool
&quot;use_devil&quot;</var>)<br>
  <code>ImageSource </code>(<var>string &quot;file&quot;</var>)
<p><code>ImageReader</code> &egrave; presente nella v2.52 e sostituisce un plugin 
  di WarpEnterprises. Dalla v2.56 <code>ImageSource</code> &egrave; equivalente, 
  con alcune piccole modifiche funzionali. E' utile (e pi&ugrave; veloce) quando 
  si importano immagini. 
<p><var>file</var>: nome del o dei files di immagini , dove il frame ennesimo 
  pu&ograve; essere specificato usando <cite><a href="http://www.cplusplus.com/ref/cstdio/sprintf.html">sprintf 
  syntax</a></cite>. Per esempio, i files scritti dai parametri di default di 
  <code><a href="imagewriter.htm">ImageWriter</a></code> possono essere referenziati 
  con "c:\%06d.ebmp". 
<p><var>start, end</var>: se viene richiesto un frame non in questo range, viene 
  restituito un frame nero e non viene eseguito nessun I/O. '<i>end</i>=0' NON 
  significa 'nessun limite superiore' come con<tt><code><a href="imagewriter.htm">ImageWriter</a></code></tt>. 
  Il primo file (i.e.,corrispondente al 'file' dopo che 'start' &egrave; stato 
  sostituito) DEVE esistere per far s&igrave; che i parametri dell'immagine siano 
  letti correttamente. 
<p><var>fps</var>: frames al secondo del clip restituito. Poich&egrave; accetta 
  solo valori interi , si potrebbe aggiungere un fps_denominator se lo si ritiene 
  necessario per matchare i clips. 
<p><var>use_devil</var>: quando &egrave; false, si cerca di analizzare il primo 
  file come EBMP, quindi DevIL dopo un eventuale errore. Quando true, l'esecuzione 
  salta direttamente a DevIL. Dovreste aver bisogno di usare questo se avete dei 
  files BMP che non volete leggere con l'analizzatore (E)BMP interno di <tt><code>ImageReader</code></tt>. 
<p>Il video clip che si ottiene &egrave; RGB24 se i usa DevIL , altrimenti &egrave; 
  qualunque cosa con cui &egrave; stato scritto EBMP (tutti i formati supportati 
  da AviSynth ). 
<pre># Default parameters: read a 1000-frame native Avisynth EBMP sequence (at 24 fps)
ImageSource()

# Read files &quot;100.jpeg&quot; through &quot;199.jpeg&quot; into an NTSC clip
ImageSource(&quot;D:\%d.jpeg&quot;, 100, 199, 29.97)  # floating-point fps available from v2.56

# Read files &quot;00.bmp&quot; through &quot;50.bmp&quot; bypassing AviSynth's internal BMP reader
ImageSource(&quot;D:\%01d.bmp&quot;, end = 50, use_devil = true)

# Read a single image, repeat 300 times
ImageSource(&quot;D:\static.png&quot;, end = 300)  # much, much faster from v2.56
</pre>
<p>* &quot;EBMP&quot; &egrave; una estensione di Avisynth del formato immagini 
  standard Microsoft RIFF che consente di salvare immagini in formato raw YUY2 
  e YV12 . Per maggiori dettagli vedere <a href="imagewriter.htm">ImageWriter</a> 
  .</p>
<p><kbd>$Date: 2004/09/26 19:49:40 $</kbd></p>
<form>
  <input TYPE="Button" VALUE="Indietro"
onClick="history.go(-1)">
</form>
</body>
</html>
