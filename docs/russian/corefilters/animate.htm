<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html lang="ru">
<head>

<meta http-equiv="Content-Language" content="ru">
   <meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
   <title>Animate/ApplyRange Avisynth Filter</title>

   <link rel="stylesheet" type="text/css" href="../../avisynth.css">
<!--
Automatically generated, don't change:
$Id: animate.htm,v 1.10 2008/12/06 17:51:58 fizick Exp $
-->
</head>
<body>
<h2>
<a NAME="Animate"></a>Animate
/ ApplyRange
</h2>
<p><code>Animate </code>(<var>clip, int start_frame, int end_frame, string filtername,
start_args, end_args</var>)<br>
  <code>ApplyRange </code>(<var>clip, int start_frame, int end_frame, string
filtername, args</var>)
<p><code>Animate</code> – это мета-фильтр, который вызывает указанный в параметре <var>filtername</var> фильтр с
непрерывно меняющимися аргументами. Для кадров до <var>start_frame</var> включительно, фильтр 
<var>filtername</var> вызывается с аргументами <var>start_args</var>. Для кадров, начиная с <var>end_frame</var>,
 фильтр <var>filtername</var> вызывается с аргументами <var>end_args</var>.
Для кадров между <var>start_frame</var> и <var>end_frame</var> значения аргументов линейно интерполируются.
<p><code>ApplyRange</code> – это специальный случай фильтра <code>Animate</code> с 
параметрами <var>start_args</var>=<var>end_args</var> (появился в версии <em>v2.51</em>). 
Используется для того, чтобы применить некоторый фильтр для определённого диапазона кадров в клипе -
в отличие от Animate, кадры вне диапазона от <var>start_frame</var> до <var>end_frame</var> передаются без обработки.
Другое отличие от <code>Animate</code> состоит в том, что аргументы <var>args</var> не могут содержать клип.
Начиная с версии <em>v2.53</em> фильтр поддерживает аудио, а начальный номер <var>start_frame</var> может быть равен
конечному <var>end_frame</var> (т.о. обрабатывается один кадр).
<p>В случаях когда большое число диапазонов нуждается в подобной обработке, использование многих вызовов 
<code>ApplyRange</code> может вызвать проблемы ресурсов. Альтернативой может быть 
использовать <a href="conditionalreader.htm#ApplyRange">ConditionalReader</a> вместе с 
<a href="conditionalfilter.htm">ConditionalFilter</a> (ScriptClip) для выбора между необработанной и 
обработанной версией источника.<p>

<p>Имя применяемого фильтра должно быть заключено в кавычки (т.е. это строка), а два списка аргументов не обрамляются
скобками. Строки и видеоклипы в качестве параметров не могут быть интерполированы и т.о. должны иметь одинаковые 
значения в обоих списках.
Важное предупреждение: если вы используете клип в качестве первого аргумента <code>Animate</code>, 
этот клип не должен появляться в списке передаваемых аргументов <var>start_args</var> и <var> end_args</var>.
Пример:
<pre>v = Version()
Animate(v,0,149,&quot;Crop&quot;, v,0,0,64,32, v,316,0,64,32)</pre>
<p>вызовет ошибку, т.к. транслируется в синтаксически неверный вызов <code>Crop(v, v, 0, 0, 64, 32)</code>.

<p>Фильтр некорректно обрабатывает изменение звуковой дорожки, т.о. не рекомендуется его использовать для фильтров,
которые изменяют её. И не пытайтесь задавать начальные и конечные параметры, приводящие к разным размерам кадра!
<p>Вызываемый фильтр <var>filtername</var> может даже быть самим фильтром <code>Animate</code>, если вам нужно 
организовать квадратичную, а не линейную интерполяцию. Впрочем, не стоит особенно развивать этот сюжет, ибо голова 
может разлететься.
<p>&nbsp;
<pre># Сделать прокрутку клипа, выдающего &quot;Version&quot;:
ver = Version()
Animate(0,149,&quot;Crop&quot;, ver,0,0,64,32, ver,316,0,64,32)

# То же самое:
ver = Version()
Animate(ver,0,149,&quot;Crop&quot;, 0,0,64,32, 316,0,64,32)</pre>

<pre># Растворение (Fade) в белом фоне
AviSource(&quot;E:\pdwork\DO-Heaven.avi&quot;)
Animate(100,200,&quot;Levels&quot;, 0,1,255,0,255, 0,1,255,255,255)</pre>

<pre># Постепенное увеличение центральной части клипа с разрешением 320x240, 
# начиная с увеличения 1:1 в кадре 100 и заканчивая увеличением 4:1 
# в кадре 200
clip = AviSource(&quot;E:\pdwork\DO-Heaven.avi&quot;)
Animate(100,200,&quot;BicubicResize&quot;,clip,320,240,0,0,320,240, clip,320,240,120,90,80,60)
# Animate(clip, 100,200,&quot;BicubicResize&quot;, 320,240,0,0,320,240, 320,240,120,90,80,60) # работает аналогично
</pre>
<pre># Выполнить увеличение текста &quot;Hello, World!&quot; в кадре 
# с размером 320x240
BlankClip(width=320, height=240)
Animate(0,48,&quot;Subtitle&quot;, &quot;Hello, World!&quot;,160,120,0,99999,&quot;Arial&quot;,0,
&nbsp; \&nbsp; &quot;Hello, World!&quot;,25,130,0,99999,&quot;Arial&quot;,48)</pre>

<pre># Увеличение клипа c2 с одновременным наложением его на c1:
Function myfunc(clip c1, clip c2, int x, int y, int w, int h)
{
w = w - w%2
h = h - h%2
my_c2 = BicubicResize(c2,w,h)
Overlay(c1,my_c2,x,y)
}

c1 = AviSource(&quot;D:\Captures\jewel.avi&quot;)
c2 = AviSource(&quot;D:\Captures\atomic.avi&quot;).BicubicResize(320,240) # c2 меньше, чем c1
Animate(0,1000,&quot;myfunc&quot;,c1,c2,10,10,10,10,c1,c2,300,300,360,288)
# или же
# Animate(c1,0,1000,&quot;myfunc&quot;, c2,10,10,10,10, c2,300,300,360,288)

# но следующая запись не будет работать, т.к. сразу три аргумента передаются функции myfunc (c1, c1 and c2) 
# вместо положенных двух:
# Animate(c1,0,1000,&quot;myfunc&quot;,c1,c2,10,10,10,10,c1,c2,300,300,360,288)</pre>

<pre># Маленькое изображение увеличивается на фоне чёрного клипа, пока не заменит его собой:
function res(clip clip, clip &quot;LClip&quot;, int &quot;width&quot;, int &quot;height&quot;, int &quot;centerX&quot;, int &quot;centerY&quot;) {
LClip = BicubicResize(LClip, width, height)
Overlay(clip, LClip, centerX-LClip.width/2, centerY-LClip.height/2)
}

function resize(clip clip, clip &quot;LClip&quot;, int &quot;start_frame&quot;, int &quot;start_width&quot;, int &quot;start_height&quot;,
\ int &quot;end_frame&quot;, int &quot;end_width&quot;, int &quot;end_height&quot;, int &quot;centerX&quot;, int &quot;centerY&quot;) {
return Animate(start_frame, end_frame, &quot;res&quot;, clip, LClip, start_width, start_height, centerX, centerY,
\ clip, LClip, end_width, end_height, centerX, centerY)
}

clip = AviSource(&quot;D:\captures\jewel.avi&quot;).BicubicResize(640,480).ConvertToRGB()
black = BlankClip(clip)

resize(black, clip, 0, 120, 120*clip.height/clip.width, 500, 640, 480, clip.width/2, clip.height/2)</pre>

<pre>ver = Version()
return ver.ApplyRange(0,149,&quot;Crop&quot;, 158,0,64,32)

AviSource(&quot;E:\pdwork\DO-Heaven.avi&quot;).BicubicResize(320,240)
ApplyRange(0,48,&quot;Subtitle&quot;, &quot;Hello, World!&quot;,25,130,0,99999,&quot;Arial&quot;,48)

# То же самое:
clip = AviSource(&quot;E:\pdwork\DO-Heaven.avi&quot;).BicubicResize(320,240)
ApplyRange(clip, 0,48,&quot;Subtitle&quot;, &quot;Hello, World!&quot;,25,130,0,99999,&quot;Arial&quot;,48)</pre>
<p><kbd>$English Date: 2008/12/06 17:50:04 $<br>
Русский перевод 18.05.2005-12.10.2005 Eugene Vasiliev (eugvas<span>&#64;</span>mccme.ru)<br>
Обновления 31.12.2006-06.12.2008 Fizick http://avisynth.org.ru</kbd></p>
<form><input TYPE="Button" VALUE="Back"
onClick="history.go(-1)"></form>

</body>
</html>