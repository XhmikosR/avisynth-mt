<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html lang="ru">
<head>
<title>DeScratch Plugin for Avisynth</title>
  <meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<link rel="stylesheet" type="text/css" href="../../avisynth.css">
<!--
Automatically generated, don't change:
$Id: descratch.htm,v 1.3 2006/12/15 19:59:45 fizick Exp $
-->
</head>

<body>
<h1>DeScratch</h1>
<h2>Общая информация</h2>
<b>автор:</b>  Александр Г. Балахнин aka Fizick<br>
<b>версия:</b>       0.9.0.0<br>
<b>закачка:</b>  <a href="http://avisynth.org.ru/">http://avisynth.org.ru/</a><br>
<b>категория:</b>   Плагины для телепередач (не знаю, почему его так классифицировали :-) <br>
<b>требования:</b> YV12 цветовое пространство<hr>
<h3>Назначение</h3>
Плагин удаляет вертикальные царапины с кинофильмов. 
Также он может удалять горизонтальные линии помех типа выпадения
сигнала при аналоговом захвате с VHS (после поворота изображения). 
<h3>Как он работает</h3>
<p>Плагин сначала обнаруживает царапины, затем удаляет их.<br>
Он работает с каждым кадром, используя только пространственную информацию текущего кадра.<br>
Я адаптировал его к реставрации моих старых 8 мм кинопленок, возможно он окажется полезным кому-нибудь еще.</p>
<h4>Обнаружение царапин</h4>
<p>Применяем вертикальное смазывание к копии кадра, для подавления тонкой структуры картинки, наклонных линий и шума.
Ищем локальные экстремумы интенсивности в каждой строке, с пороговым критерием разности,и симметрии.<br>
Помещаем эти экстремумы на некоторую карту (кадр).<br>
Опционально закрываем вертикальные зазоры в экстремумах на карте путем их вертикального расширения.<br>
Тестируем карту экстремумов с критериями длины и наклона, и так находим настоящие царапины.</p>
<h4>Удаление царапин</h4>
<p>Царапины могут быть либо частично прозрачными, плавными (с деталями картинки), 
либо непрозрачными (без деталей или почти полностью поврежденными).<br>
В первом случае можно вычесть сглаженную часть вариации точек царапины из образа.
Следовательно, детали изображения останутся. <br>
Во втором случае плагин заменяет пикселы царапины на среднее из некоторых соседних пикселов в той же строке. <br>
Мы можем также иметь промежуточный случай, установив процент сохранения деталей.<br>
Плагин имеет некоторую адаптацию количества сохраняемых деталей, исходя из вариации интенсивности.<br>
Во всех случаях, могут частично заменяться и некоторые соседние пикселы для плавного перехода.</p>
<h3>Необходимые программы</h3>
<p>Программа является плагином (фильтром) для Avisynth 2.5<br>
Тестировалась с версией 2.55 (некоторые версии имеют ошибку с поворотом <code>Turnleft()</code>!).<br>
Новые версии с 0.3 не нуждаются  в  Avisynth C Interface (avithynth_c.dll).<br>
Компилирован с MS VC++ Toolkit 2003.</p>
<h3>Синтаксис вызова</h3>
<p><code>DeScratch</code>(<var>int mindif, int asym, int maxgap, int maxwidth, int minlen, int maxlen, int maxangle, int blurlen, int keep, int border, 
int modeY, int modeU, int modeV, int mindifUV, bool mark</var>)</p>
<p>Все параметры именованные и опциональны.</p>
<h3>Параметры плагина:</h3>
<p><var>mindif</var> - минимальное различие яркости царапины от соседних пикселов для канала яркости<br>
&nbsp;&nbsp;&nbsp; (от 1 до 255, по умолчанию 5)<br>
<var>asym</var> - максимальная асимметрия  соседних пикселов  (от 0 до 255, по умолчанию 10<br>
<var>maxgap</var> - максимальный смыкаемый вертикальный зазор частей царапины (от 0 до 255, по умолчанию 3)<br>
<var>maxwidth</var> - максимальная ширина царапины (1 или 3, по умолчанию =3)<br>
<var>minlen</var> - минимальная длина царапины (по умолчанию 100)<br>
<var>maxlen</var> - максимальная длина царапины (по умолчанию 1000)<br>
<var>maxangle</var> - максимальный угол к вертикали (в градусах, по умолчанию=5)<br>
<var>blurlen</var> - радиус вертикального смазывания для анализа кадра (по умолчанию = 15)<br>
<var>keep</var> - процент удерживаемых деталей царапины (по умолчанию = 100)<br>
<var>border</var> - толщина бордюра вокруг царапины для частичной реставрации (по умолчанию=2)<br>
<var>modeY</var> - режим обработки канала яркости (0 - нет, 1 - низкие(черные), 2 - высокие(белые), 3 - оба, по умолчанию=1)<br>
<var>modeU</var> - режим обработки цветового канала U (0 - нет, 1 - низкие(зеленые), 2 - высокие(красные), 3 - оба, по умолчанию=0)<br>
<var>modeV</var> - режим обработки цветового канала V (0 - нет, 1 - низкие(желтые), 2 - высокие(голубые), 3 - оба, по умолчанию=0)<br>
<var>mindifUV</var> - минимальная различие яркости царапины от соседних пикселов для каналов цветности<br>
&nbsp;&nbsp;&nbsp; (от 0 до 255, по умолчанию 0):<br>
&nbsp;&nbsp;&nbsp; если =0, то внутреннее значение <var>mindifUV></var> равно <var>mindif</var>.<br>
<var>mark</var> - помечать ли царапины в режиме отладки (true или false, по умолчанию =false)<br>
&nbsp;&nbsp;&nbsp; ( устанавливает отвергнутые экстремумы в серый цвет, а царапины - в белый или черный)</p>
<p>
Параметры <var>maxgap</var>, <var>maxwidth</var>, <var>minlen</var>, <var>blurlen</var>, <var>border</var> 
измеряются в пикселах.</p>
<p>Вы ДОЛЖНЫ подобрать параметры, подходящие для Вашего видео.<br>
Используйте команды AviSynth <code>Greyscale(), UtoY(), VtoY()</code>, и параметр <var>mark</var> для отладки и настройки.</p>
<h3>Примеры</h3>
<p>Старая 8 мм кинопленка. Верхняя
половина кадра - до фильтра, нижняя половина - после фильтра.</p>
<p><img border="0" src="../pictures/externalfilters/descratch1.jpg"></p>
<h4>Пример скрипта (использованный для показанного примера) :</h4>
<pre>AviSource(&quot;input.avi&quot;)
LoadPlugin(&quot;descratch.dll&quot;)
ConvertToYV12()
DeScratch(mindif=2)</pre>
<h3>Удаление помех в виде горизонтальных линий</h3>
<p>Такие длинные тонкие горизонтальные линии иногда проявляюся в захваченном с аналоговых источников материале (пропуск линий ТВ-тюнером или видеомагнитофоном VHS и т.д).
Эта проблема обсуждалась на  Doom9, смотри статью <a href="http://www.doom9.org/capture/descratch.html"> <cite> Removal of clicks and scratches</cite></a> 
(July 10-31, 2004).
Но в статье первоначально использовался плагин DeSpot, который не очень подходит для этой задачи, из-за очень слабого уровня помехи.
DeScratch мог бы быть более эффективен, однако и он не идеален тоже (старые версии обрабатывали только яркостную составляющую).
Конечно, вы должны повернуть кадр для обработки Descratch (и не забыть повернуть его обратно после очистки :-).</p>
<p>Посмотрите на результаты для одной из VHS записей (от <b>Ivo</b>).<br>
Верхняя половина кадра - до фильтра, нижняя половина - после фильтра:</p>
<p><img border="0" src="../pictures/externalfilters/descratch2.jpg"></p>
<h4>Использованный для VHS пример скрипта:</h4>
<pre>LoadPlugin(&quot;descratch.dll&quot;)
AviSource(&quot;drop-outs_.avi&quot;)
ConvertToYV12()
Crop(0,0,-0,288) # выберем верхнюю часть кадра чтобы сохранить экранное место
input=last
AssumeTFF()      # просто для порядка 
SeparateFields() # для аналогового чересстрочного видео
TurnLeft()       # повернем кадр на 90 градусов налево (против часовой)
DeScratch(mindif=4, maxgap=20, minlen=300, blurlen=50, keep=100, border=0, maxangle=0)
TurnRight()      # повернем обратно, на 90 градусов направо (по часовой)
Weave()          # восстановим поля
StackVertical(input, last) # Сравним кадр источника и кадр после удаления царапин</pre>
<p>Использованы оптимальные значения параметров - большая длина <var>minlen</var>,
 нулевой угол <var>maxangle</var>.</p>
<p>Для удаления цветных помеховых линий, вы можете использовать режимы <var>modeU</var>, <var> modeV</var> и
<var> mindifUV</var>.</p>
<h3>Дополнительная информация</h3>
<p>Обсуждение плагина - на форуме doom9, ветка <a href="http://forum.doom9.org/showthread.php?s=&amp;threadid=67794">
<cite>http://forum.doom9.org/showthread.php?s=&amp;threadid=67794</cite></a></p>
<h3>Лицензия</h3>
<p>Данная программа распространяется свободно, под лицензией GNU GPL v2.
</p>
<h3>История версий и загрузка:</h3>
<ul>
  <li>Версия 0.1, 22 Декабря 2003 - начальная бета (не публикована)</li>
  <li>Версия 0.2, 31 Декабря 2003 - первая публичная.
    <ul>
      <li> Введены  резкие экстремумы;</li>
      <li> добавлено смыкание зазоров.</li>
    </ul> 
  </li>
  <li>Версия  0.3 14 Июля 2004
    <ul>
      <li> переделана в родной Avisynth плагин;</li>
      <li> Увеличена скорость работы путем применения  функций изменения размеров Avisynth для смазывания.</li>
    </ul> 
  </li>
  <li>Версия 0.4, 17 июля 2004
    <ul>
      <li>Добавлено обработка цветовых каналов: параметры <var>modeY, modeU, modeV</var>
      введенные в версии 0.4 по просьбе Ivo (старые версии обрабатывали только яркостный канал);</li>
      <li><var>mindif</var> теперь только положительна;</li>
      <li>величина помеченных царапин теперь не инвертируется, а контрастируется до предела.</li>
    </ul>
  </li>
  <li>Версия 0.5, 31 июля 2004
    <ul>
      <li>Исправлена ошибка указателя чтения-запись;</li>
      <li>добавлен параметр <var>mindifUV</var> для отдельного контроля очистки цветовых плоскостей U, V;</li>
      <li>некоторая реорганизация кода;</li>
      <li>скорректирована документация.</li>
    </ul>
  </li>
  <li>Версия 0.6, 23 августа 2004 - Исправлена ошибка переполнения байта (ограничен 0-255)</li>
  <li>Версия 0.7, 15 ноября 2004 - добавлена проверка асимметрии (параметр <var>asym</var>);</li>
  <li>Версия 0.8, 13 Марта 2005 - добавлен параметр <var>maxlen</var>;</li>
  <li>Версия 0.9, 31 Марта 2005 - частично расфиксирован параметр <var>maxwidth</var>, допустимо =1 или 3 (было только 3);</li>
  <li>Версия 0.9.0, 15 июня 2005 - только документация переформатирована </li>
  <li>Версия 0.9.0.0, 9 сентября 2006 - исходники лицензированы под GNU GPL лицензией версии 2.</li>
</ul>
<h3>Ограничения текущей версии:</h3>
<p>Максимальная ширина царапины фиксирована 1 или 3.<br>
Плагин работает только в цветовой системе YV12.</p>
<p><kbd>$English Date: 2006/12/15 19:29:25 $<br>
Русский текст 17.09.2006 Fizick http://bag.hotmail.ru
</kbd></p>
</body>
</html>
